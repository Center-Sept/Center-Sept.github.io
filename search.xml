<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Centos 7搭建Gitlab服务器</title>
    <url>/2022/10/24/Centos-7%E6%90%AD%E5%BB%BAGitlab%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<h1 id="Centos-7搭建Gitlab服务器"><a href="#Centos-7搭建Gitlab服务器" class="headerlink" title="Centos 7搭建Gitlab服务器"></a>Centos 7搭建Gitlab服务器</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装必要依赖</span></span><br><span class="line">yum install policycoreutils-python</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装Postfix以发送通知邮件</span></span><br><span class="line">yum install postfix</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">postfix服务设置成开机自启动</span></span><br><span class="line">systemctl enable postfix</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动postfix</span></span><br><span class="line">systemctl start postfix</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">下载rpm安装包</span></span><br><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el7/gitlab-ce-15.2.0-ce.0.el7.x86_64.rpm --no-check-certificate</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装</span></span><br><span class="line">yum -y install gitlab-ce-15.2.0-ce.0.el7.x86_64.rpm</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改配置文件vi /etc/gitlab/gitlab.rb</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改如下配置，可以非本机访问</span></span><br><span class="line">external_url &#x27;http://192.168.40.129:8081&#x27;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">对gitlab进行初始化</span></span><br><span class="line">gitlab-ctl reconfigure</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动gitlab</span></span><br><span class="line">gitlab-ctl restart</span><br></pre></td></tr></table></figure>

<h1 id="GitLab的数据迁移"><a href="#GitLab的数据迁移" class="headerlink" title="GitLab的数据迁移"></a>GitLab的数据迁移</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看新旧服务器上安装的 gitlab 版本</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">注意：在迁移 gitlab 数据前首先要确保新旧服务器上安装的 gitlab 版本是一致的。</span></span><br><span class="line">cat /opt/gitlab/embedded/service/gitlab-rails/VERSION</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如果新旧服务器上安装的版本不一致</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">例如： 旧服务器上GitLab版本10.3.3，新服务器上GitLab版本12.0.1。</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">GitLab不能跨版本升级，需一个一个大版本升级。例如：10.8.7是10的最后一个版本，11.11.0是11的最后一个版本，则从 10.3.3 升级到 12.0.1，需要经过 10.3.3 -&gt; 10.8.7 -&gt; 11.11.0 -&gt; 12.0.1三次版本升级。</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">所以，要先在旧服务器上执行以下版本升级命令：</span></span><br><span class="line">yum install -y gitlab-ce-10.8.7-ce.0.el7</span><br><span class="line">yum install -y gitlab-ce-11.11.0-ce.0.el7</span><br><span class="line">yum install -y gitlab-ce-12.0.1-ce.0.el7</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">注：如果不指定版本号，则自动升级到最新版本。</span></span><br><span class="line">yum install -y gitlab-ce  </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">先在旧服务器做gitlab数据备份文件</span></span><br><span class="line">gitlab-rake gitlab:backup:create</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">默认将会在 /var/opt/gitlab/backups/ 目录下生成备份文件</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">上传刚刚的备份文件到新服务器上</span></span><br><span class="line">scp -Pxx 1615432132_2021_03_11_10.0.0_gitlab_backup.tar  root@xx.xx.xx.xx: /var/opt/gitlab/backups/</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">停止新服务器上gitlab数据连接服务</span></span><br><span class="line">gitlab-ctl stop unicorn</span><br><span class="line">gitlab-ctl stop sidekiq</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">恢复备份文件到GitLab</span></span><br><span class="line">gitlab-rake gitlab:backup:restore BACKUP=备份文件编号</span><br><span class="line">gitlab-rake gitlab:backup:restore BACKUP=1615432132_2021_03_11_10.0.0</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重新启动GitLab</span></span><br><span class="line">gitlab-ctl restart</span><br></pre></td></tr></table></figure>

<h1 id="配置gitlab服务器邮箱"><a href="#配置gitlab服务器邮箱" class="headerlink" title="配置gitlab服务器邮箱"></a>配置gitlab服务器邮箱</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编辑配置文件</span> </span><br><span class="line">vim /etc/gitlab/gitlab.rb</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配置如下：</span></span><br><span class="line">gitlab_rails[&#x27;smtp_enable&#x27;] = true</span><br><span class="line">gitlab_rails[&#x27;smtp_address&#x27;] = &quot;smtp.163.com&quot;</span><br><span class="line">gitlab_rails[&#x27;smtp_port&#x27;] = 25 # 网易端口为25</span><br><span class="line">gitlab_rails[&#x27;smtp_user_name&#x27;] = &quot;xxxxx@163.com&quot;</span><br><span class="line">gitlab_rails[&#x27;smtp_password&#x27;] = &quot;&quot; # POP3/SMTP/IMAP服务授权密码</span><br><span class="line">gitlab_rails[&#x27;smtp_domain&#x27;] = &quot;163.com&quot;</span><br><span class="line">gitlab_rails[&#x27;smtp_authentication&#x27;] = &quot;login&quot;</span><br><span class="line">gitlab_rails[&#x27;smtp_enable_starttls_auto&#x27;] = true</span><br><span class="line">gitlab_rails[&#x27;smtp_tls&#x27;] = false</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">## Email Settings</span></span></span><br><span class="line">gitlab_rails[&#x27;gitlab_email_enabled&#x27;] = true</span><br><span class="line">gitlab_rails[&#x27;gitlab_email_display_name&#x27;] = &#x27;git server&#x27;  # 显示名字</span><br><span class="line">gitlab_rails[&#x27;gitlab_email_from&#x27;] = &quot;xxxxx@163.com&quot; # 发件邮箱</span><br><span class="line">user[&quot;git_user_email&quot;] = &quot;xxxxx@163.com&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">以下配置信息为访问配置</span></span><br><span class="line">external_url &#x27;http://localhost&#x27; # 真实IP或域名，无须添加端口号</span><br><span class="line">gitlab_rails[&#x27;host&#x27;] = &#x27;localhost&#x27; # 真实IP或域名</span><br><span class="line">gitlab_rails[&#x27;port&#x27;] = 6080 # 映射80端口的主机(宿主)端口</span><br><span class="line">gitlab_rails[&#x27;gitlab_ssh_host&#x27;] = &#x27;localhost&#x27; # 真实IP或域名</span><br><span class="line">gitlab_rails[&#x27;gitlab_shell_ssh_host&#x27;] = 6022 # 映射22端口的主机(宿主)端口</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">====================================================================</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重新配置</span></span><br><span class="line">gitlab-ctl reconfigure</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">实时查看所有执行日志</span></span><br><span class="line">gitlab-ctl tail</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">测试邮件服务是否正常</span></span><br><span class="line">gitlab-rails console</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">irb(main):001:0&gt;</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Notify.test_email(‘接收方地址’,‘邮件标题’,‘邮件内容’).deliver_now</span></span><br><span class="line">Notify.test_email(&#x27;xxxxxxxxxxx@qq.com&#x27;,&#x27;hello&#x27;,&#x27;hello&#x27;).deliver_now</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>gitlab|centos7</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker快速搭建Zookeeper和kafka集群</title>
    <url>/2021/07/24/Docker%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAZookeeper%E5%92%8Ckafka%E9%9B%86%E7%BE%A4/</url>
    <content><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p><strong>前提：安装docker和docker-compose</strong></p>
<p><strong>镜像选择</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Zookeeper和Kafka集群分别运行在不同的容器中</span><br><span class="line">zookeeper官方镜像，版本3.4 （zookeeper:3.4）</span><br><span class="line">kafka采用wurstmeister/kafka镜像</span><br><span class="line">kafka-manager采用sheepkiller/kafka-manager:latest镜像</span><br></pre></td></tr></table></figure>

<p><strong>实现目标</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kafka集群在docker网络中可用，和zookeeper处于同一网络</span><br><span class="line">宿主机可以访问zookeeper集群和kafka的broker list</span><br><span class="line">docker重启时集群自动重启</span><br><span class="line">集群的数据文件映射到宿主机器目录中</span><br><span class="line">使用yml文件和$ docker-compose up -d命令创建或重建集群</span><br></pre></td></tr></table></figure>

<p><strong>拉取镜像</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker pull zookeeper:3.4</span><br><span class="line">docker pull wurstmeister/kafka</span><br><span class="line">docker pull sheepkiller/kafka-manager:latest</span><br><span class="line">123</span><br></pre></td></tr></table></figure>

<p><strong>创建集群网络</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker network create --driver bridge --subnet 172.19.0.0/16 --gateway 172.19.0.1 kafka</span><br></pre></td></tr></table></figure>

<p><strong>查看网络</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker network ls</span><br></pre></td></tr></table></figure>

<p><strong>zk集群的docker-compose.yml（任意目录下创建docker-compose.yml文件）</strong></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.4&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">zoo1:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">zookeeper:3.4</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">zoo1</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">zoo1</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">2184</span><span class="string">:2181</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;./cluster/zoo1/data:/data&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;./cluster/zoo1/datalog:/datalog&quot;</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">ZOO_MY_ID:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">ZOO_SERVERS:</span> <span class="string">server.1=0.0.0.0:2888:3888</span> <span class="string">server.2=zoo2:2888:3888</span> <span class="string">server.3=zoo3:2888:3888</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">kafka:</span></span><br><span class="line">        <span class="attr">ipv4_address:</span> <span class="number">172.19</span><span class="number">.0</span><span class="number">.11</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="attr">zoo2:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">zookeeper:3.4</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">zoo2</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">zoo2</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">2185</span><span class="string">:2181</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;./cluster/zoo2/data:/data&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;./cluster/zoo2/datalog:/datalog&quot;</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">ZOO_MY_ID:</span> <span class="number">2</span></span><br><span class="line">      <span class="attr">ZOO_SERVERS:</span> <span class="string">server.1=zoo1:2888:3888</span> <span class="string">server.2=0.0.0.0:2888:3888</span> <span class="string">server.3=zoo3:2888:3888</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">kafka:</span></span><br><span class="line">        <span class="attr">ipv4_address:</span> <span class="number">172.19</span><span class="number">.0</span><span class="number">.12</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="attr">zoo3:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">zookeeper:3.4</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">zoo3</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">zoo3</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">2186</span><span class="string">:2181</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;./cluster/zoo3/data:/data&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;./cluster/zoo3/datalog:/datalog&quot;</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">ZOO_MY_ID:</span> <span class="number">3</span></span><br><span class="line">      <span class="attr">ZOO_SERVERS:</span> <span class="string">server.1=zoo1:2888:3888</span> <span class="string">server.2=zoo2:2888:3888</span> <span class="string">server.3=0.0.0.0:2888:3888</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">kafka:</span></span><br><span class="line">        <span class="attr">ipv4_address:</span> <span class="number">172.19</span><span class="number">.0</span><span class="number">.13</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">kafka:</span></span><br><span class="line">    <span class="attr">external:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">kafka</span></span><br></pre></td></tr></table></figure>

<p><strong>kafka集群的docker-compose.yml</strong></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;2&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">kafka1:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">wurstmeister/kafka</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">kafka1</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">kafka1</span></span><br><span class="line">    <span class="attr">privileged:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">9092</span><span class="string">:9092</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">KAFKA_ADVERTISED_HOST_NAME:</span> <span class="string">kafka1</span></span><br><span class="line">      <span class="attr">KAFKA_LISTENERS:</span> <span class="string">PLAINTEXT://kafka1:9092</span></span><br><span class="line">      <span class="attr">KAFKA_ADVERTISED_LISTENERS:</span> <span class="string">PLAINTEXT://kafka1:9092</span></span><br><span class="line">      <span class="attr">KAFKA_ADVERTISED_PORT:</span> <span class="number">9092</span></span><br><span class="line">      <span class="attr">KAFKA_ZOOKEEPER_CONNECT:</span> <span class="string">zoo1:2181,zoo2:2181,zoo3:2181</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">./cluster/kafka1/data:/kafka</span></span><br><span class="line">    <span class="attr">external_links:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">zoo1</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">zoo2</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">zoo3</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">kafka:</span></span><br><span class="line">        <span class="attr">ipv4_address:</span> <span class="number">172.19</span><span class="number">.0</span><span class="number">.21</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="attr">kafka2:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">wurstmeister/kafka</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">kafka2</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">kafka2</span></span><br><span class="line">    <span class="attr">privileged:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">9093</span><span class="string">:9093</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">KAFKA_ADVERTISED_HOST_NAME:</span> <span class="string">kafka2</span></span><br><span class="line">      <span class="attr">KAFKA_LISTENERS:</span> <span class="string">PLAINTEXT://kafka2:9093</span></span><br><span class="line">      <span class="attr">KAFKA_ADVERTISED_LISTENERS:</span> <span class="string">PLAINTEXT://kafka2:9093</span></span><br><span class="line">      <span class="attr">KAFKA_ADVERTISED_PORT:</span> <span class="number">9093</span></span><br><span class="line">      <span class="attr">KAFKA_ZOOKEEPER_CONNECT:</span> <span class="string">zoo1:2181,zoo2:2181,zoo3:2181</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">./cluster/kafka2/data:/kafka</span></span><br><span class="line">    <span class="attr">external_links:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">zoo1</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">zoo2</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">zoo3</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">kafka:</span></span><br><span class="line">        <span class="attr">ipv4_address:</span> <span class="number">172.19</span><span class="number">.0</span><span class="number">.22</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="attr">kafka3:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">wurstmeister/kafka</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">kafka3</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">kafka3</span></span><br><span class="line">    <span class="attr">privileged:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">9094</span><span class="string">:9094</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">KAFKA_ADVERTISED_HOST_NAME:</span> <span class="string">kafka3</span></span><br><span class="line">      <span class="attr">KAFKA_LISTENERS:</span> <span class="string">PLAINTEXT://kafka3:9094</span></span><br><span class="line">      <span class="attr">KAFKA_ADVERTISED_LISTENERS:</span> <span class="string">PLAINTEXT://kafka3:9094</span></span><br><span class="line">      <span class="attr">KAFKA_ADVERTISED_PORT:</span> <span class="number">9094</span></span><br><span class="line">      <span class="attr">KAFKA_ZOOKEEPER_CONNECT:</span> <span class="string">zoo1:2181,zoo2:2181,zoo3:2181</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">./cluster/kafka3/data:/kafka</span></span><br><span class="line">    <span class="attr">external_links:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">zoo1</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">zoo2</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">zoo3</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">kafka:</span></span><br><span class="line">        <span class="attr">ipv4_address:</span> <span class="number">172.19</span><span class="number">.0</span><span class="number">.23</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">kafka:</span></span><br><span class="line">    <span class="attr">external:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">kafka</span></span><br></pre></td></tr></table></figure>

<p><strong>kafka-manager的docker-compose.yml</strong></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;2&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">kafka-manager:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">sheepkiller/kafka-manager:latest</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">kafka-manager</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">kafka-manager</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">&quot;9000:9000&quot;</span></span><br><span class="line">    <span class="comment">#links:      # 连接本compose文件创建的container</span></span><br><span class="line">     <span class="comment">#- kafka1</span></span><br><span class="line">     <span class="comment">#- kafka2</span></span><br><span class="line">     <span class="comment">#- kafka3</span></span><br><span class="line">    <span class="attr">external_links:</span>  <span class="comment"># 连接本compose文件以外的container</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">kafka1</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">kafka2</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">kafka3</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">zoo1</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">zoo2</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">zoo3</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">     <span class="attr">ZK_HOSTS:</span> <span class="string">zoo1:2181,zoo2:2181,zoo3:2181</span></span><br><span class="line">     <span class="attr">KAFKA_BROKERS:</span> <span class="string">kafka1:9092,kafka2:9093,kafka3:9094</span></span><br><span class="line">     <span class="attr">APPLICATION_SECRET:</span> <span class="string">letmein</span></span><br><span class="line">     <span class="attr">KM_ARGS:</span> <span class="string">-Djava.net.preferIPv4Stack=true</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">     <span class="attr">kafka:</span></span><br><span class="line">      <span class="attr">ipv4_address:</span> <span class="number">172.19</span><span class="number">.0</span><span class="number">.9</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">kafka:</span></span><br><span class="line">    <span class="attr">external:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">kafka</span></span><br></pre></td></tr></table></figure>

<p><strong>docker-compose up -d 开始部署</strong></p>
<p><strong>查看运行中的容器</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker ps </span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>docker|kafka|zookeeper</tag>
      </tags>
  </entry>
  <entry>
    <title>Git提交规范</title>
    <url>/2020/06/24/Git%E6%8F%90%E4%BA%A4%E8%A7%84%E8%8C%83/</url>
    <content><![CDATA[<p><strong>一、背景</strong></p>
<p>​	Git每次提交代码都需要写commit message，否则就不允许提交。一般来说，commit message应该清晰明了，说明本次提交的目的，具体做了什么操作……但是在日常开发中，大家的commit message千奇百怪，中英文混合使用、fix bug等各种笼统的message司空见怪，这就导致后续代码维护成本特别大，有时自己都不知道自己的fix bug修改的是什么问题。基于以上这些问题，我们希望通过某种方式来监控用户的git commit message，让规范更好的服务于质量，提高大家的研发效率。</p>
<p><strong>二、规范介绍</strong></p>
<p><strong>▐ *<em>规范目标*</em></strong></p>
<p>- 允许通过脚本生成 README.md</p>
<p>- 可以通过范围的关键词，快速的搜索到指定版本</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git log HEAD --grep feat(package.json) # 在package.json文件里新增的特性。</span><br></pre></td></tr></table></figure>

<p><strong>▐</strong> <em>*<em>*</em>*格式要求****</em>*</p>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;</span><br></pre></td></tr></table></figure>

<p>- 消息只占用一行，任何行都不能超过 100 个字符</p>
<p>- 允许使用 GitHub 以及各种 Git 工具阅读消息</p>
<p>- 提交消息由页眉、正文和页脚组成，由空行分隔</p>
<type>

<p>代表某次提交的类型，比如是修复一个 bug 或是增加一个 feature，类型如下：</p>
<table>
<thead>
<tr>
<th>类型</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>feat</td>
<td>新增feature</td>
</tr>
<tr>
<td>fix</td>
<td>修复bug</td>
</tr>
<tr>
<td>docs</td>
<td>仅仅修改了文档，比如README等等</td>
</tr>
<tr>
<td>style</td>
<td>修改了空格、格式缩进、逗号等，不改变代码逻辑</td>
</tr>
<tr>
<td>refactor</td>
<td>代码重构，没有加入新的功能或者修复bug</td>
</tr>
<tr>
<td>perf</td>
<td>优化相关，比如提升性能、体验</td>
</tr>
<tr>
<td>test</td>
<td>测试用例，包括单元测试、集成测试</td>
</tr>
<tr>
<td>chore</td>
<td>改变构建流程、或者增加依赖库、工具等，比如修改pom.xml文件</td>
</tr>
<tr>
<td>revert</td>
<td>回滚上一个版本</td>
</tr>
<tr>
<td>merge</td>
<td>代码合并</td>
</tr>
<tr>
<td>sync</td>
<td>同步主线活分支的bug</td>
</tr>
</tbody></table>
<scope>

<p>范围可以是指定提交更改位置的任何内容，如：</p>
<p>- 对 package.json 文件新增依赖库，chore(package.json): 新增依赖库</p>
<p>- 或对代码进行重构，refacto(weChat.vue): 重构微信进件</p>
<subject>

<p>如果没有更合适的范围，可以直接写提交内容</p>
]]></content>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>Java 8 stream</title>
    <url>/2023/03/24/Java-8-stream/</url>
    <content><![CDATA[<h2 id="Java-8-stream"><a href="#Java-8-stream" class="headerlink" title="Java 8 stream"></a>Java 8 stream</h2><h3 id="流的创建"><a href="#流的创建" class="headerlink" title="流的创建"></a>流的创建</h3><p>1.使用Collection下的 stream() 和 parallelStream() 方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">Stream&lt;String&gt; stream = list.stream(); <span class="comment">//获取一个顺序流</span></span><br><span class="line">Stream&lt;String&gt; parallelStream = list.parallelStream(); <span class="comment">//获取一个并行流</span></span><br></pre></td></tr></table></figure>

<p>2 使用Arrays 中的 stream() 方法，将数组转成流</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Integer[] nums = <span class="keyword">new</span> <span class="title class_">Integer</span>[<span class="number">10</span>];</span><br><span class="line">Stream&lt;Integer&gt; stream = Arrays.stream(nums);</span><br></pre></td></tr></table></figure>

<p>3.使用Stream中的静态方法：of()、iterate()、generate()</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Stream&lt;Integer&gt; stream = Stream.of(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">Stream&lt;Integer&gt; stream2 = Stream.iterate(<span class="number">0</span>, (x) -&gt; x + <span class="number">2</span>).limit(<span class="number">6</span>);</span><br><span class="line">stream2.forEach(System.out::println); <span class="comment">// 0 2 4 6 8 10</span></span><br><span class="line"></span><br><span class="line">Stream&lt;Double&gt; stream3 = Stream.generate(Math::random).limit(<span class="number">2</span>);</span><br><span class="line">stream3.forEach(System.out::println);</span><br></pre></td></tr></table></figure>

<p>4.使用 BufferedReader.lines() 方法，将每行内容转成流</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">BufferedReader</span> <span class="variable">reader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">FileReader</span>(<span class="string">&quot;F:\\test_stream.txt&quot;</span>));</span><br><span class="line">Stream&lt;String&gt; lineStream = reader.lines();</span><br><span class="line">lineStream.forEach(System.out::println);</span><br></pre></td></tr></table></figure>

<p>5.使用 Pattern.splitAsStream() 方法，将字符串分隔成流</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Pattern</span> <span class="variable">pattern</span> <span class="operator">=</span> Pattern.compile(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">Stream&lt;String&gt; stringStream = pattern.splitAsStream(<span class="string">&quot;a,b,c,d&quot;</span>);</span><br><span class="line">stringStream.forEach(System.out::println);</span><br></pre></td></tr></table></figure>



<p>流的中间操作</p>
<p>1.筛选与切片</p>
<p>filter：过滤流中的某些元素<br>limit(n)：获取n个元素<br>skip(n)：跳过n元素，配合limit(n)可实现分页<br>distinct：通过流中元素的 hashCode() 和 equals() 去除重复元素</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Stream&lt;Integer&gt; stream = Stream.of(<span class="number">6</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">14</span>);</span><br><span class="line"> </span><br><span class="line">Stream&lt;Integer&gt; newStream = stream.filter(s -&gt; s &gt; <span class="number">5</span>) <span class="comment">//6 6 7 9 8 10 12 14 14</span></span><br><span class="line">        .distinct() <span class="comment">//6 7 9 8 10 12 14</span></span><br><span class="line">        .skip(<span class="number">2</span>) <span class="comment">//9 8 10 12 14</span></span><br><span class="line">        .limit(<span class="number">2</span>); <span class="comment">//9 8</span></span><br><span class="line">newStream.forEach(System.out::println);</span><br></pre></td></tr></table></figure>

<p>2.映射</p>
<p> map：接收一个函数作为参数，该函数会被应用到每个元素上，并将其映射成一个新的元素。<br> flatMap：接收一个函数作为参数，将流中的每个值都换成另一个流，然后把所有流连接成一个流。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;String&gt; list = Arrays.asList(<span class="string">&quot;a,b,c&quot;</span>, <span class="string">&quot;1,2,3&quot;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//将每个元素转成一个新的且不带逗号的元素</span></span><br><span class="line">Stream&lt;String&gt; s1 = list.stream().map(s -&gt; s.replaceAll(<span class="string">&quot;,&quot;</span>, <span class="string">&quot;&quot;</span>));</span><br><span class="line">s1.forEach(System.out::println); <span class="comment">// abc  123</span></span><br><span class="line"> </span><br><span class="line">Stream&lt;String&gt; s3 = list.stream().flatMap(s -&gt; &#123;</span><br><span class="line">    <span class="comment">//将每个元素转换成一个stream</span></span><br><span class="line">    String[] split = s.split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">    Stream&lt;String&gt; s2 = Arrays.stream(split);</span><br><span class="line">    <span class="keyword">return</span> s2;</span><br><span class="line">&#125;);</span><br><span class="line">s3.forEach(System.out::println); <span class="comment">// a b c 1 2 3</span></span><br></pre></td></tr></table></figure>



<h2 id="list转map方法"><a href="#list转map方法" class="headerlink" title="list转map方法"></a>list转map方法</h2><p>背景<br>在最近的工作开发之中，慢慢习惯了很多Java8中的Stream的用法，很方便而且也可以并行的去执行这个流，这边去写一下昨天遇到的一个list转map的场景。<br>list转map在Java8中stream的应用<br>常用方式<br>1.利用Collectors.toMap方法进行转换</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> Map&lt;Long, String&gt; <span class="title function_">getIdNameMap</span><span class="params">(List&lt;Account&gt; accounts)</span> &#123;</span><br><span class="line">	<span class="keyword">return</span> accounts.stream().collect(Collectors.toMap(Account::getId, Account::getUsername));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>其中第一个参数就是可以，第二个参数就是value的值。</p>
<p>2.收集对象实体本身<br>- 在开发过程中我们也需要有时候对自己的list中的实体按照其中的一个字段进行分组（比如 id -&gt;List），这时候要设置map的value值是实体本身。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> Map&lt;Long, Account&gt; <span class="title function_">getIdAccountMap</span><span class="params">(List&lt;Account&gt; accounts)</span> &#123;</span><br><span class="line">	<span class="keyword">return</span> accounts.stream().collect(Collectors.toMap(Account::getId, item -&gt; item));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>account -&gt; account是一个返回本身的lambda表达式，其实还可以使用Function接口中的一个默认方法 Function.identity()，这个方法返回自身对象，更加简洁</p>
<p>重复key的情况。<br>在list转为map时，作为key的值有可能重复，这时候流的处理会抛出个异常：Java.lang.IllegalStateException:Duplicate key。这时候就要在toMap方法中指定当key冲突时key的选择。(这里是选择第二个key覆盖第一个key)</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> Map&lt;String, Account&gt; <span class="title function_">getNameAccountMap</span><span class="params">(List&lt;Account&gt; accounts)</span> &#123;</span><br><span class="line">	<span class="keyword">return</span> accounts.stream().collect(Collectors.toMap(Account::getUsername, Function.identity(), (key1, key2) -&gt; key2));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>用groupingBy 或者 partitioningBy进行分组<br>根据一个字段或者属性分组也可以直接用groupingBy方法，很方便。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Map&lt;Integer, List&lt;Person&gt;&gt; personGroups = Stream.generate(<span class="keyword">new</span> <span class="title class_">PersonSupplier</span>()).</span><br><span class="line">	limit(<span class="number">100</span>).</span><br><span class="line">	collect(Collectors.groupingBy(Person::getAge));</span><br><span class="line">	<span class="type">Iterator</span> <span class="variable">it</span> <span class="operator">=</span> personGroups.entrySet().iterator();</span><br><span class="line">	<span class="keyword">while</span> (it.hasNext()) &#123;</span><br><span class="line">		Map.Entry&lt;Integer, List&lt;Person&gt;&gt; persons = (Map.Entry) it.next();</span><br><span class="line">		System.out.println(<span class="string">&quot;Age &quot;</span> + persons.getKey() + <span class="string">&quot; = &quot;</span> + persons.getValue().size());</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<p>partitioningBy可以理解为特殊的groupingBy，key值为true和false，当然此时方法中的参数为一个判断语句（用于判断的函数式接口）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Map&lt;Boolean, List&lt;Person&gt;&gt; children = Stream.generate(<span class="keyword">new</span> <span class="title class_">PersonSupplier</span>()).</span><br><span class="line">limit(<span class="number">100</span>).</span><br><span class="line">collect(Collectors.partitioningBy(p -&gt; p.getAge() &lt; <span class="number">18</span>));</span><br><span class="line">System.out.println(<span class="string">&quot;Children number: &quot;</span> + children.get(<span class="literal">true</span>).size());</span><br><span class="line">System.out.println(<span class="string">&quot;Adult number: &quot;</span> + children.get(<span class="literal">false</span>).size());</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>java8</tag>
      </tags>
  </entry>
  <entry>
    <title>Jira Linux安装部署</title>
    <url>/2022/05/24/Jira-Linux%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h1 id="Jira-Linux安装部署"><a href="#Jira-Linux安装部署" class="headerlink" title="Jira Linux安装部署"></a>Jira Linux安装部署</h1><h2 id="1-下载安装"><a href="#1-下载安装" class="headerlink" title="1.下载安装"></a>1.下载安装</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装wget</span></span><br><span class="line">yum install -y wget</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用wget 下载jira安装包</span></span><br><span class="line">wget  https://downloads.atlassian.com/software/jira/downloads/atlassian-jira-software-7.3.6-x64.bin</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">给安装包赋权</span></span><br><span class="line">chmod 755 atlassian-jira-software-7.3.6-x64.bin</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">执行安装程序</span></span><br><span class="line">./atlassian-jira-software-7.3.6-x64.bin</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">## 根据安装英文提示，做出自定义安装还是使用默认配置安装（略）</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">## 注意安装文字提示的安装目录，便于后面修改jira中的运行时配置以及数据库配置</span></span></span><br></pre></td></tr></table></figure>

<h2 id="2-破解Jira，下载mysql驱动包用于配置连接数据库"><a href="#2-破解Jira，下载mysql驱动包用于配置连接数据库" class="headerlink" title="2.破解Jira，下载mysql驱动包用于配置连接数据库"></a>2.破解Jira，下载mysql驱动包用于配置连接数据库</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 进入默认安装目录：/opt/atlassian/jira ;</span><br><span class="line"># 在网上寻找破解包和驱动包下载，进入安装目录下的./atlassian-jira/WEB-INF/lib/下,将准备好了的两个jar包上传到该目录下;(破解包需要替换,mysql驱动包不需要替换)</span><br><span class="line"># 最后再进去安装目录下的./bin目录，./start-jira.sh 启动，./stop-jira.sh 停止; (其实使用的就是tomcat服务器,了解tomcat服务器目录结构很好理解)</span><br><span class="line"># 最后使用你当前服务器的ip:port进入jira初始化界面;</span><br></pre></td></tr></table></figure>

<h2 id="3-配置初始化Jira"><a href="#3-配置初始化Jira" class="headerlink" title="3.配置初始化Jira"></a>3.配置初始化Jira</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 选择自己配置</span><br><span class="line"># 然后选择其他数据库,根据使用的数据库选择数据类型,填写数据库参数,点击测试连接,弹出连接成功;</span><br><span class="line"># 如果没问题就点击下一步,Jira会初始化数据库脚本（就是会创建表和初始化数据）</span><br><span class="line"># 根据需求填写Jira管理方式以及基本URL</span><br><span class="line"># 下一步许可证认证，这一步他会随机生成一个server ID，点击生成Jira使用许可证,进去官网注册账号，进去Licenses页面中生成许可证,然后复制临时许可证的key到刚刚的配置页面点击下一步；</span><br><span class="line"># 最后配置管理员信息；</span><br></pre></td></tr></table></figure>

<h2 id="4-Jira基本的配置以及操作"><a href="#4-Jira基本的配置以及操作" class="headerlink" title="4.Jira基本的配置以及操作"></a>4.Jira基本的配置以及操作</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">日志查看：</span></span><br><span class="line">tail -f /opt/atlassian/jira/logs/catalina.out</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如何修改内存？</span></span><br><span class="line">vim /opt/atlassian/jira/bin/setenv.sh</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">连接数据库的配置</span></span><br><span class="line">/var/atlassian/application-data/jira/dbconfig.xml</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">服务器配置文件</span></span><br><span class="line">/opt/atlassian/jira/conf/server.xml</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>JIRA|Centos7</tag>
      </tags>
  </entry>
  <entry>
    <title>X99双路主板构建服务器工作站主机</title>
    <url>/2023/03/25/X99%E5%8F%8C%E8%B7%AF%E4%B8%BB%E6%9D%BF%E6%9E%84%E5%BB%BA%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%B7%A5%E4%BD%9C%E7%AB%99%E4%B8%BB%E6%9C%BA/</url>
    <content><![CDATA[<h2 id="引语"><a href="#引语" class="headerlink" title="引语"></a>引语</h2><p>​		“在如今快节奏的时代，对于服务器和工作站的需求越来越高。作为一款双路主板，X99主板为服务器和工作站的构建提供了更强大的性能和更可靠的稳定性。这款主板支持多核心处理器、高速DDR4内存以及多通道存储，可以满足用户对于高速计算、数据处理和虚拟化的需求。无论是企业还是个人，X99主板都是构建高效、稳定、可靠的服务器和工作站的最佳选择。”</p>
<h2 id="理由"><a href="#理由" class="headerlink" title="理由"></a>理由</h2><p>​		搭建自己的工作站主机有许多理由。首先，自己搭建工作站主机可以根据个人的需求和预算来定制配置，从而获得更高效的性能。其次，自己搭建工作站主机可以保证硬件的可靠性和稳定性，避免出现因为不兼容或者配置不当而引起的软硬件问题。此外，自己搭建工作站主机也可以更好地保护个人信息和隐私，避免因为不必要的软件安装或者网络攻击而导致信息泄露或系统崩溃。最后，搭建自己的工作站主机可以提高自己的技术水平，让自己更好地理解计算机系统和硬件，从而更好地进行调试和维护。总之，自己搭建工作站主机是一项有挑战性和有意义的任务，可以帮助我更好地理解计算机硬件和软件，从而获得更高效的计算和工作体验。</p>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><table>
<thead>
<tr>
<th>组件</th>
<th>产品</th>
<th>单位</th>
<th>价钱</th>
</tr>
</thead>
<tbody><tr>
<td>Cpu</td>
<td>英特尔CPU至强Inte Xeon E5-2680V3 14核28线程</td>
<td>两颗</td>
<td>¥428.00</td>
</tr>
<tr>
<td>主板</td>
<td>X99-8D4&#x2F;2.5G双路大板 （精粤 X99双路主板 2011-3针 ）</td>
<td>一个</td>
<td>¥692.98</td>
</tr>
<tr>
<td>内存条</td>
<td>海力士32G 2RX4 PC4-2666V</td>
<td>两条</td>
<td>¥428.00</td>
</tr>
<tr>
<td>存储-SSD</td>
<td>七彩虹(Colorfire) 1TB SSD固态硬盘 M.2接口(NVMe协议) CF600镭风系列</td>
<td>一条</td>
<td>¥299.00</td>
</tr>
<tr>
<td>电源</td>
<td>游戏悍将 熊猫GX750 额定750W 金牌全模组电源 台式机电脑电源（固态电容DC-DC&#x2F;双路CPU供电&#x2F;全电压）</td>
<td>一个</td>
<td>¥369.00</td>
</tr>
<tr>
<td>机箱</td>
<td>游戏悍将 麒麟X1中塔EATX大机箱台式机电脑侧透机箱（支持4090显卡&#x2F;竖装&#x2F;顶部360水冷&#x2F;10风扇位）</td>
<td>一个</td>
<td>¥309.00</td>
</tr>
<tr>
<td>CPU散热器</td>
<td>冰弘6铜管cpu散热器静音X79X99X299 2011主板温控台式电脑CPU风扇(6铜管4线双风扇无灯[正方形2011])</td>
<td>两个</td>
<td>¥124.22</td>
</tr>
<tr>
<td>显卡</td>
<td>卡诺基GTX1660S 6G</td>
<td>一个</td>
<td>¥675.61</td>
</tr>
<tr>
<td>显示器</td>
<td>小米Redmi 21.45英寸显示器 75Hz 300nit高亮 8Bit色深 低蓝光 支持VESA壁挂</td>
<td>一台</td>
<td>¥399.00</td>
</tr>
<tr>
<td>无线网卡（可选）</td>
<td>COMFAST CF-AX210 PRO 千兆5G无线网络wifi接收器台式机电脑内置WIFI6无线网卡5374M+蓝牙5.2二合一</td>
<td>一个</td>
<td>¥188.00</td>
</tr>
</tbody></table>
<p>总价格：¥3912.79</p>
]]></content>
      <tags>
        <tag>DIV主机|X99|服务器工作站</tag>
      </tags>
  </entry>
  <entry>
    <title>分布式电商项目-高级篇</title>
    <url>/2022/01/01/%E5%88%86%E5%B8%83%E5%BC%8F%E7%94%B5%E5%95%86%E9%A1%B9%E7%9B%AE-%E9%AB%98%E7%BA%A7%E7%AF%87/</url>
    <content><![CDATA[<h2 id="全文检索"><a href="#全文检索" class="headerlink" title="全文检索"></a>全文检索</h2><h3 id="ElasticSearch"><a href="#ElasticSearch" class="headerlink" title="ElasticSearch"></a>ElasticSearch</h3><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>1.一个分布式的开源搜索和分析引擎，适用于所有类型的数据，包括文本，数字，地理空间，结构化和非结构化数据。</p>
<p>2.全文搜索属于最常见的需求，开源的 Elasticsearch是目前全文搜索引擎的首选。它可以快速地储存、搜索和分析海量数据。维基百科、Stack Overflow、Github 都采用它。</p>
<p><strong>3.Elastic 的底层是开源库 Lucene。但是，你没法直接用Lucene，必须自己写代码去调用它的接口。Elastic是 Lucene 的封装，提供了 REST API的操作接口，开箱即用。</strong></p>
<p>REST API:天然的跨平台。<br>官方文档:<a class="link"   href="https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html" >https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html<i class="fas fa-external-link-alt"></i></a></p>
<p>官方中文:<a class="link"   href="https://www.elastic.co/guide/cn/elasticsearch/guide/current/foreword_id.html" >https://www.elastic.co/guide/cn/elasticsearch/guide/current/foreword_id.html<i class="fas fa-external-link-alt"></i></a></p>
<p>社区中文:<br><a class="link"   href="http://doc.codingdict.com/elasticsearch/0/" >http://doc.codingdict.com/elasticsearch/0/<i class="fas fa-external-link-alt"></i></a></p>
<h5 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h5><h6 id="1-index-索引"><a href="#1-index-索引" class="headerlink" title="1.index (索引)"></a>1.index (索引)</h6><p>动词，相当于MySQL中的insert</p>
<p>名词，相当于MySQL中的Database</p>
<h6 id="2-Type-类型"><a href="#2-Type-类型" class="headerlink" title="2.Type (类型)"></a>2.Type (类型)</h6><p>在Index(索引)中，可以定义一个或多个类型。类似于MySQL中的Table；每一种类型的数据放在一起；</p>
<h6 id="3-Document-文档"><a href="#3-Document-文档" class="headerlink" title="3.Document (文档)"></a>3.Document (文档)</h6><p>保存在某个索引（Index）下，某种类型（Type）的一个数据（Ducument），文档是JSON格式的，Document就像是MySQL中的某个Table里面的内容；</p>
<h6 id="4-倒排索引机制"><a href="#4-倒排索引机制" class="headerlink" title="4.倒排索引机制"></a>4.倒排索引机制</h6><p>分词：将整句拆分为单词</p>
<h4 id="Docker安装ES"><a href="#Docker安装ES" class="headerlink" title="Docker安装ES"></a>Docker安装ES</h4><h5 id="1-下载镜像文件"><a href="#1-下载镜像文件" class="headerlink" title="1.下载镜像文件"></a>1.下载镜像文件</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">拉取ES镜像</span></span><br><span class="line">docker pull elasticsearch:7.4.2 </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">拉取可视化镜像</span></span><br><span class="line">docker pull kibana:7.4.2</span><br></pre></td></tr></table></figure>

<h5 id="2-创建实例"><a href="#2-创建实例" class="headerlink" title="2.创建实例"></a>2.创建实例</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"> # </span><span class="language-bash">创建配置文件夹</span></span><br><span class="line"> mkdir -p /mydata/elasticsearch/config</span><br><span class="line"><span class="meta prompt_"> # </span><span class="language-bash">创建数据文件夹</span></span><br><span class="line"> mkdir -p /mydata/elasticsearch/data</span><br><span class="line"><span class="meta prompt_"> # </span><span class="language-bash">创建插件文件夹</span></span><br><span class="line"> mkdir -p /mydata/elasticsearch/plugins</span><br><span class="line"><span class="meta prompt_"> # </span><span class="language-bash">创建配置文件</span></span><br><span class="line"> echo &quot;http.host:0.0.0.0&quot; &gt;&gt; /mydata/elasticsearch/config/elasticsearch.yml</span><br><span class="line"><span class="meta prompt_"> # </span><span class="language-bash">让任何用户都能读写</span></span><br><span class="line"> chmod -R 777 /mydata/elasticsearch/</span><br><span class="line"><span class="meta prompt_"> # </span><span class="language-bash">启动单机ES</span> </span><br><span class="line"><span class="meta prompt_"> # </span><span class="language-bash">9200 http通信端口  9300集群模式下通信端口</span></span><br><span class="line"><span class="meta prompt_"> # </span><span class="language-bash">-e <span class="string">&quot;discovery.type=single-node&quot;</span> 单节点运行</span></span><br><span class="line"><span class="meta prompt_"> # </span><span class="language-bash">ES_JAVA_OPTS=<span class="string">&quot;-Xms64m -Xmx128m&quot;</span> : 指定虚拟机使用内存大小，防止启动占用太多内存</span></span><br><span class="line"><span class="meta prompt_"> # </span><span class="language-bash">-v /mydata/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml : 指定配置的路径</span></span><br><span class="line"><span class="meta prompt_"> # </span><span class="language-bash">-v /mydata/elasticsearch/data:/usr/share/elasticsearch/data :指定数据路径</span></span><br><span class="line"><span class="meta prompt_"> # </span><span class="language-bash">-v /mydata/elasticsearch/plugins:/usr/share/elasticsearch/plugins  :指定插件路径</span></span><br><span class="line">docker run --name elasticsearch -p 9200:9200 -p 9300:9300 \</span><br><span class="line">-e &quot;discovery.type=single-node&quot; -e ES_JAVA_OPTS=&quot;-Xms64m -Xmx520m&quot;  \</span><br><span class="line">-v /mydata/elasticsearch/data:/usr/share/elasticsearch/data   \</span><br><span class="line">-v /mydata/elasticsearch/plugins:/usr/share/elasticsearch/plugins  \</span><br><span class="line">-v /mydata/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml \</span><br><span class="line">-d elasticsearch:7.4.2</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="Docker安装Kibana"><a href="#Docker安装Kibana" class="headerlink" title="Docker安装Kibana"></a>Docker安装Kibana</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run --name kibana \</span><br><span class="line">-e ELASTICSEARCH_URL=http://192.168.72.130:9200 \</span><br><span class="line">-p 5601:5601 \</span><br><span class="line">-d kibana:7.4.2</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如果-e ELASTICSEARCH_URL=http://192.168.72.130:9200 没有效果,我们必须进入kibana容器中，修改kibana.yml 文件的内容</span></span><br><span class="line">cd ./config</span><br><span class="line">vi kibana.yml</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">elasticsearch.hosts: [ “http://&#123;你的安装ES的ip地址&#125;:9200” ]</span></span><br></pre></td></tr></table></figure>

<h4 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h4><h5 id="cat-查看ES信息"><a href="#cat-查看ES信息" class="headerlink" title="_cat (查看ES信息)"></a>_cat (查看ES信息)</h5><p>1.使用Postman 对ES服务发送查询请求</p>
<p>GET &#x2F;_cat&#x2F;nodes： 查看所有节点</p>
<p>GET &#x2F;_cat&#x2F;health： 查看ES健康状态</p>
<p>GET &#x2F;_cat&#x2F;master： 查看主节点</p>
<p>GET &#x2F;_cat&#x2F;indices： 查看ES所有索引  就像MySQL的show databases</p>
<h5 id="put-amp-post新增数据"><a href="#put-amp-post新增数据" class="headerlink" title="put&amp;post新增数据"></a>put&amp;post新增数据</h5><p>1.使用postman 向ES服务期发送PUT请求</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">url：http<span class="punctuation">:</span><span class="comment">//192.168.72.130:9200/customer/external/1</span></span><br><span class="line">method：put</span><br><span class="line">body：</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;Tom&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line">response<span class="punctuation">:</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;_index&quot;</span><span class="punctuation">:</span> <span class="string">&quot;customer&quot;</span><span class="punctuation">,</span> <span class="comment">// 索引</span></span><br><span class="line">    <span class="attr">&quot;_type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;external&quot;</span><span class="punctuation">,</span> <span class="comment">// 类型</span></span><br><span class="line">    <span class="attr">&quot;_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span> <span class="comment">// id</span></span><br><span class="line">    <span class="attr">&quot;_version&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="comment">// 版本号</span></span><br><span class="line">    <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="string">&quot;updated&quot;</span><span class="punctuation">,</span> <span class="comment">// 结果 created:新建 ； updated：更新</span></span><br><span class="line">    <span class="attr">&quot;_shards&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="comment">// 分片，集群参数</span></span><br><span class="line">        <span class="attr">&quot;total&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;successful&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;failed&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;_seq_no&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span> <span class="comment">// 并发控制字段，每次更新就会+1，用来做乐观锁</span></span><br><span class="line">    <span class="attr">&quot;_primary_term&quot;</span><span class="punctuation">:</span> <span class="number">1</span> <span class="comment">//主分片重新分配，如重启，就会变化</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>2.使用postman 向ES服务期发送POST请求</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">url：http<span class="punctuation">:</span><span class="comment">//192.168.72.130:9200/customer/external/1</span></span><br><span class="line">method：post</span><br><span class="line">body：</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;Tom&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line">response<span class="punctuation">:</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;_index&quot;</span><span class="punctuation">:</span> <span class="string">&quot;customer&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;_type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;external&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;_version&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="string">&quot;updated&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;_shards&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;total&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;successful&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;failed&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;_seq_no&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;_primary_term&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>注：PUT和POST区别</p>
<p>1.POST新增：如果不指定id，会自动生成id。指定id就会修改这个数据，并新增版本号</p>
<p>2.PUT可以新增也可以修改。PUT必须指定id；由于PUT需要指定id，我们一般都用来做修改操作，不指定id会报错。</p>
<h5 id="get查询数据-amp-乐观锁"><a href="#get查询数据-amp-乐观锁" class="headerlink" title="get查询数据&amp;乐观锁"></a>get查询数据&amp;乐观锁</h5><h6 id="get查询数据"><a href="#get查询数据" class="headerlink" title="get查询数据"></a>get查询数据</h6><p>查询直接使用get请求 &#x2F;{索引}&#x2F;{类型}&#x2F;{id}</p>
<h6 id="乐观锁"><a href="#乐观锁" class="headerlink" title="乐观锁"></a>乐观锁</h6><p>使用_seq_no 来确认版本号</p>
<p>1.乐观锁更新数据</p>
<p>url:<a class="link"   href="http://192.168.72.130:9200/customer/external/1?if_seq_no=3&amp;if_primary_term=1" >http://192.168.72.130:9200/customer/external/1?if_seq_no=3&amp;if_primary_term=1<i class="fas fa-external-link-alt"></i></a></p>
<p>method:PUT或者POST</p>
<p>如果版本号不定义给定的条件，则出现以下结果</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;error&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;root_cause&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;version_conflict_engine_exception&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;reason&quot;</span><span class="punctuation">:</span> <span class="string">&quot;[1]: version conflict, required seqNo [3], primary term [1]. current document has seqNo [4] and primary term [1]&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;index_uuid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;zb_uJgoTTIS96jNeCk45xQ&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;shard&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span> <span class="string">&quot;customer&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;version_conflict_engine_exception&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;reason&quot;</span><span class="punctuation">:</span> <span class="string">&quot;[1]: version conflict, required seqNo [3], primary term [1]. current document has seqNo [4] and primary term [1]&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;index_uuid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;zb_uJgoTTIS96jNeCk45xQ&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;shard&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span> <span class="string">&quot;customer&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">409</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h5 id="put-amp-post修改数据"><a href="#put-amp-post修改数据" class="headerlink" title="put&amp;post修改数据"></a>put&amp;post修改数据</h5><p>方法1：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">POST customer/external/<span class="number">1</span>/_update</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">	<span class="attr">&quot;doc&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">		<span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;Tms1&quot;</span></span><br><span class="line">	<span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>方法2：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">POST customer/external/<span class="number">1</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">   <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;Tms1&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line">或者</span><br><span class="line">PUT customer/external/<span class="number">1</span></span><br></pre></td></tr></table></figure>

<p>1.异同</p>
<p>不同：POST操作会对比源文档数据，如果相同不会有什么操作，文档version不增加，PUT操作总会将数据重新保存并添加version版本；带_update对比元数据如果一样就不进行任何操作</p>
<p>看场景：</p>
<p>对于大并发更新，使用不带update;</p>
<p>对于大并发查询偶尔更新，带update;对比更新，重新计算分配规则。</p>
<h5 id="删除数据-amp-bulk批量操作"><a href="#删除数据-amp-bulk批量操作" class="headerlink" title="删除数据&amp;bulk批量操作"></a>删除数据&amp;bulk批量操作</h5><h6 id="删除文档"><a href="#删除文档" class="headerlink" title="删除文档"></a>删除文档</h6><p>可以直接删除索引和文档，但不能删除类型</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DELETE customer/external/1</span><br></pre></td></tr></table></figure>

<h6 id="bulk批量操作"><a href="#bulk批量操作" class="headerlink" title="bulk批量操作"></a>bulk批量操作</h6><p>示例1：</p>
<p>1.登入kibana 控制台，点击Dev Tools，在console 输入框里输入以下内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST /customer/external/_bulk</span><br><span class="line">&#123;&quot;index&quot;:&#123;&quot;_id&quot;:&quot;1&quot;&#125;&#125;</span><br><span class="line">&#123;&quot;name&quot;:&quot;jojo&quot;&#125;</span><br><span class="line">&#123;&quot;index&quot;:&#123;&quot;_id&quot;:&quot;2&quot;&#125;&#125;</span><br><span class="line">&#123;&quot;name&quot;:&quot;jiji&quot;&#125;</span><br></pre></td></tr></table></figure>

<p>2.结果</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">8</span><span class="punctuation">,</span> <span class="comment">// 花费多少毫秒</span></span><br><span class="line">  <span class="attr">&quot;errors&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="comment">// 是否有错误</span></span><br><span class="line">  <span class="attr">&quot;items&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span> <span class="comment">// 结果子项</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;index&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="comment">// index 表示保存操作</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;customer&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;external&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_version&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;result&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;created&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_seq_no&quot;</span> <span class="punctuation">:</span> <span class="number">6</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_primary_term&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;status&quot;</span> <span class="punctuation">:</span> <span class="number">201</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;index&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;customer&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;external&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;2&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_version&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;result&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;created&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_seq_no&quot;</span> <span class="punctuation">:</span> <span class="number">7</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_primary_term&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;status&quot;</span> <span class="punctuation">:</span> <span class="number">201</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>示例2：</p>
<p>1.在控制台输入以下内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST /_bulk</span><br><span class="line">&#123;&quot;delete&quot;:&#123;&quot;_index&quot;:&quot;website&quot;,&quot;_type&quot;:&quot;blog&quot;,&quot;_id&quot;:&quot;123&quot;&#125;&#125; </span><br><span class="line">&#123;&quot;create&quot;:&#123;&quot;_index&quot;:&quot;website&quot;,&quot;_type&quot;:&quot;blog&quot;,&quot;_id&quot;:&quot;123&quot;&#125;&#125;</span><br><span class="line">&#123;&quot;title&quot;:&quot;My first blog post&quot;&#125;</span><br><span class="line">&#123;&quot;index&quot;:&#123;&quot;_index&quot;:&quot;website&quot;,&quot;_type&quot;:&quot;blog&quot;&#125;&#125;</span><br><span class="line">&#123;&quot;title&quot;:&quot;My sencond blog post&quot;&#125;</span><br><span class="line">&#123;&quot;update&quot;:&#123;&quot;_index&quot;:&quot;website&quot;,&quot;_type&quot;:&quot;blog&quot;,&quot;_id&quot;:&quot;123&quot;&#125;&#125;</span><br><span class="line">&#123;&quot;doc&quot;:&#123;&quot;title&quot;:&quot;My updated blog post&quot;&#125;&#125;</span><br></pre></td></tr></table></figure>

<p>2.结果</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">148</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;errors&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;items&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;delete&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;website&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;blog&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;123&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_version&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;result&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;not_found&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_seq_no&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_primary_term&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;status&quot;</span> <span class="punctuation">:</span> <span class="number">404</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;create&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;website&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;blog&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;123&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_version&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;result&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;created&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_seq_no&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_primary_term&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;status&quot;</span> <span class="punctuation">:</span> <span class="number">201</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;index&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;website&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;blog&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;_SBEJnYB0s8ja78yQIS4&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_version&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;result&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;created&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_seq_no&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_primary_term&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;status&quot;</span> <span class="punctuation">:</span> <span class="number">201</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;update&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;website&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;blog&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;123&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_version&quot;</span> <span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;result&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;updated&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_seq_no&quot;</span> <span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_primary_term&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;status&quot;</span> <span class="punctuation">:</span> <span class="number">200</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h6 id="导入客户银行客户样本测试数据"><a href="#导入客户银行客户样本测试数据" class="headerlink" title="导入客户银行客户样本测试数据"></a>导入客户银行客户样本测试数据</h6><p><a class="link"   href="https://github.com/elastic/elasticsearch/blob/master/docs/src/test/resources/accounts.json" >elasticsearch&#x2F;accounts.json at master · elastic&#x2F;elasticsearch (github.com)<i class="fas fa-external-link-alt"></i></a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST /bank/account/_bulk</span><br><span class="line">粘贴样本数据</span><br></pre></td></tr></table></figure>

<h4 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h4><h5 id="两种查询方式"><a href="#两种查询方式" class="headerlink" title="两种查询方式"></a>两种查询方式</h5><h6 id="SearchAPI"><a href="#SearchAPI" class="headerlink" title="SearchAPI"></a>SearchAPI</h6><p>ES支持两种基本方式检索：</p>
<ul>
<li><p>通过使用REST request URL 发送搜索参数（uri+检索参数）</p>
</li>
<li><p>通过使用REST request body 来发送它们（uri+请求体）</p>
</li>
</ul>
<h6 id="uri-检索参数"><a href="#uri-检索参数" class="headerlink" title="uri+检索参数"></a>uri+检索参数</h6><ol>
<li>GET bank&#x2F;_search</li>
</ol>
<p>检索bank下所有信息，包括type的和docs</p>
<ol start="2">
<li>GET bank&#x2F;_search?q&#x3D;*&amp;sort&#x3D;account_number:asc</li>
</ol>
<p>请求参数方式检索</p>
<p>默认返回10条记录</p>
<ol start="3">
<li>结果解析</li>
</ol>
<p>took：花费时间</p>
<p>time_out：是否超时</p>
<p>_shards：集群情况下的信息</p>
<p>hits：命中的记录</p>
<p>total ：总记录数</p>
<h6 id="uri-检索参数（QueryDSL方式）"><a href="#uri-检索参数（QueryDSL方式）" class="headerlink" title="uri+检索参数（QueryDSL方式）"></a>uri+检索参数（QueryDSL方式）</h6><p>1.在Kibana控制台输入以下内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match_all&quot;: &#123;&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;sort&quot;:[</span><br><span class="line">   &#123;&quot;account_number&quot;:&quot;asc&quot;&#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>query：查询条件</p>
<p>match_all：匹配所有</p>
<p>sort：排序条件</p>
<h5 id="QueryDSL基本使用-amp-match-all"><a href="#QueryDSL基本使用-amp-match-all" class="headerlink" title="QueryDSL基本使用&amp;match_all"></a>QueryDSL基本使用&amp;match_all</h5><p>1.在kibana 根据语法提示直接操作</p>
<p><a class="link"   href="https://www.elastic.co/guide/en/elasticsearch/reference/current/getting-started-search.html" >https://www.elastic.co/guide/en/elasticsearch/reference/current/getting-started-search.html<i class="fas fa-external-link-alt"></i></a> 官方操作实例</p>
<p>2.使用_source 后接 数组字符串，按需返回字段值。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line">&#123;</span><br><span class="line">	&quot;query&quot;:&#123;</span><br><span class="line">		&quot;match_all&quot;: &#123;&#125;</span><br><span class="line">	&#125;,</span><br><span class="line">	&quot;from&quot;:0,</span><br><span class="line">	&quot;size&quot;:5,</span><br><span class="line">	&quot;sort&quot;:[</span><br><span class="line">		&#123;</span><br><span class="line">			&quot;account_number&quot;:&#123;</span><br><span class="line">			&quot;order&quot;:&quot;desc&quot;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	],</span><br><span class="line">	&quot;_source&quot;: [&quot;banlance&quot;,&quot;firstname&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>3.demo</p>
<p>3.1 demo1</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line">&#123;</span><br><span class="line">	&quot;query&quot;:&#123;</span><br><span class="line">		&quot;match_all&quot;: &#123;&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>3.2  demo2</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line">&#123;</span><br><span class="line">	&quot;query&quot;:&#123;</span><br><span class="line">		&quot;match_all&quot;: &#123;&#125;</span><br><span class="line">	&#125;,</span><br><span class="line">	&quot;from&quot;:0,</span><br><span class="line">	&quot;size&quot;:5,</span><br><span class="line">	&quot;sort&quot;:[</span><br><span class="line">		&#123;</span><br><span class="line">			&quot;account_number&quot;:&#123;</span><br><span class="line">			&quot;order&quot;:&quot;desc&quot;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h5 id="match全文检索"><a href="#match全文检索" class="headerlink" title="match全文检索"></a>match全文检索</h5><p>1.基本类型（非字符串），精确匹配</p>
<p>1.1 精确匹配demo</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match&quot;: &#123;</span><br><span class="line">      &quot;account_number&quot;: &quot;20&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>1.2 模糊查询(全文检索)按照评分进行排序，会对检索条件进行分词匹配</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match&quot;: &#123;</span><br><span class="line">      &quot;address&quot;: &quot;Kings&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h5 id="match-parase短语匹配"><a href="#match-parase短语匹配" class="headerlink" title="match_parase短语匹配"></a>match_parase短语匹配</h5><p>将需要匹配的值当成一个整体单词（不分词）进行检索</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match_phrase&quot;: &#123;</span><br><span class="line">      &quot;address&quot;: &quot;mill road&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h5 id="multi-match多字段匹配"><a href="#multi-match多字段匹配" class="headerlink" title="multi_match多字段匹配"></a>multi_match多字段匹配</h5><p>address 包含 mill 或者 Movico，city 包含 mill 或者 Movico</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;multi_match&quot;: &#123;</span><br><span class="line">      &quot;query&quot;: &quot;mill Movico&quot;,</span><br><span class="line">      &quot;fields&quot;: [&quot;address&quot;,&quot;city&quot;]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h5 id="bool复合查询"><a href="#bool复合查询" class="headerlink" title="bool复合查询"></a>bool复合查询</h5><p>bool 用来做复合查询：</p>
<p>复合语句可以合并任何其他查询语句，包括复合语句，了解这一点是很重要的。这就意味着，复合语句之间可以互相嵌套，可以表达非常复杂的逻辑。</p>
<p>must：必须达到must列举的所有条件</p>
<p>满足should指定的条件，则_scource得分高</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot;: &#123;</span><br><span class="line">     &quot;must&quot;: [</span><br><span class="line">       &#123;&quot;match&quot;: &#123;</span><br><span class="line">         &quot;address&quot;: &quot;mill&quot;</span><br><span class="line">       &#125;&#125;,</span><br><span class="line">       &#123;&quot;match&quot;: &#123;</span><br><span class="line">         &quot;gender&quot;: &quot;M&quot;</span><br><span class="line">       &#125;&#125;</span><br><span class="line">     ],</span><br><span class="line">     &quot;must_not&quot;: [</span><br><span class="line">       &#123;&quot;match&quot;: &#123;</span><br><span class="line">         &quot;age&quot;: &quot;18&quot;</span><br><span class="line">       &#125;&#125;</span><br><span class="line">     ],</span><br><span class="line">     &quot;should&quot;: [</span><br><span class="line">       &#123;&quot;match&quot;: &#123;</span><br><span class="line">         &quot;lastname&quot;: &quot;Wallace&quot;</span><br><span class="line">       &#125;&#125;</span><br><span class="line">     ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h5 id="filter-结果过滤"><a href="#filter-结果过滤" class="headerlink" title="filter (结果过滤)"></a>filter (结果过滤)</h5><p>并不是所有的查询都需要产生分数，特别是那些仅用于”filtering”（过滤）的文档。为了不计算分数Elasticsearch会自动检查场景并且优化查询的执行。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot;: &#123;</span><br><span class="line">     &quot;must&quot;: [</span><br><span class="line">       &#123;&quot;match&quot;: &#123;</span><br><span class="line">         &quot;address&quot;: &quot;mill&quot;</span><br><span class="line">       &#125;&#125;,</span><br><span class="line">       &#123;&quot;match&quot;: &#123;</span><br><span class="line">         &quot;gender&quot;: &quot;M&quot;</span><br><span class="line">       &#125;&#125;</span><br><span class="line">     ],</span><br><span class="line">     &quot;must_not&quot;: [</span><br><span class="line">       &#123;&quot;match&quot;: &#123;</span><br><span class="line">         &quot;age&quot;: &quot;18&quot;</span><br><span class="line">       &#125;&#125;</span><br><span class="line">     ],</span><br><span class="line">     &quot;should&quot;: [</span><br><span class="line">       &#123;&quot;match&quot;: &#123;</span><br><span class="line">         &quot;lastname&quot;: &quot;Wallace&quot;</span><br><span class="line">       &#125;&#125;</span><br><span class="line">     ],</span><br><span class="line">     &quot;filter&quot;: &#123;&quot;range&quot;: &#123;</span><br><span class="line">       &quot;age&quot;: &#123;</span><br><span class="line">         &quot;gte&quot;: 18,</span><br><span class="line">         &quot;lte&quot;: 30</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET bank/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot;: &#123;</span><br><span class="line">      &quot;filter&quot;: &#123;</span><br><span class="line">        &quot;range&quot;: &#123;</span><br><span class="line">          &quot;age&quot;: &#123;</span><br><span class="line">            &quot;gte&quot;: 10,</span><br><span class="line">            &quot;lte&quot;: 20</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h5 id="term-查询"><a href="#term-查询" class="headerlink" title="term 查询"></a>term 查询</h5><p>和match一样。匹配某个属性值。全文检索字段用match，其他非text字段匹配用term。</p>
<ol>
<li>精确匹配数值</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;term&quot;: &#123;</span><br><span class="line">      &quot;age&quot;: &#123;</span><br><span class="line">        &quot;value&quot;: 28</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>keyword 精确匹配</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match&quot;: &#123;</span><br><span class="line">       &quot;address.keyword&quot;: &quot;789 Madison Street&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>注：数值类型使用term，文本字段使用match</strong></p>
<h5 id="aggregations-聚合分析"><a href="#aggregations-聚合分析" class="headerlink" title="aggregations 聚合分析"></a>aggregations 聚合分析</h5><p>聚合提供了从数据中分组和提取数据的能力。最简单的聚合方法大致等于SQL的GROUP BY和SQL的聚合函数。在Elasticsearch中，您有执行搜索返回hits(命中结果)，并且同时返回聚合结果，把一个响应的所有hits(命中结果)分隔开的能力。这是非常强大且有效的，您可以执行查询和多个聚合，并且在一次使用中得到各自的（任何一个的）返回结果，使用一次简洁和简化的API来避免网络往返。</p>
<p>搜索address中包含mill的所有人的年龄分布以及平均年龄，但不显示这些人的详情。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match&quot;: &#123;</span><br><span class="line">      &quot;address&quot;: &quot;mill&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  ,</span><br><span class="line">  &quot;aggs&quot;: &#123;</span><br><span class="line">    &quot;ageAgg&quot;: &#123;</span><br><span class="line">      &quot;terms&quot;: &#123;</span><br><span class="line">        &quot;field&quot;: &quot;age&quot;,</span><br><span class="line">        &quot;size&quot;: 10</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;ageAvg&quot;: &#123;</span><br><span class="line">      &quot;avg&quot;: &#123;</span><br><span class="line">        &quot;field&quot;: &quot;age&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;balanceAvg&quot;: &#123;</span><br><span class="line">      &quot;avg&quot;: &#123;</span><br><span class="line">        &quot;field&quot;: &quot;balance&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>按照年龄聚合，并且请求这些年龄端的这些人的平均薪资</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match_all&quot;: &#123;&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;aggs&quot;: &#123;</span><br><span class="line">    &quot;ageAgg&quot;: &#123;</span><br><span class="line">      &quot;terms&quot;: &#123;</span><br><span class="line">        &quot;field&quot;: &quot;age&quot;,</span><br><span class="line">        &quot;size&quot;: 100</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;aggs&quot;: &#123;</span><br><span class="line">        &quot;ageAvg&quot;: &#123;</span><br><span class="line">          &quot;avg&quot;: &#123;</span><br><span class="line">            &quot;field&quot;: &quot;balance&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>查出所有年龄分布，并且这些年龄段中M（女士）的平均薪资和F（男士）的平均薪资以及这个年龄段的总体平均薪资</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match_all&quot;: &#123;&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;aggs&quot;: &#123;</span><br><span class="line">    &quot;ageAgg&quot;: &#123;</span><br><span class="line">      &quot;terms&quot;: &#123;</span><br><span class="line">        &quot;field&quot;: &quot;age&quot;,</span><br><span class="line">        &quot;size&quot;: 100</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;aggs&quot;: &#123;</span><br><span class="line">        &quot;genderAgg&quot;: &#123;</span><br><span class="line">          &quot;terms&quot;: &#123;</span><br><span class="line">            &quot;field&quot;: &quot;gender.keyword&quot;,</span><br><span class="line">            &quot;size&quot;: 10</span><br><span class="line">          &#125;,</span><br><span class="line">          &quot;aggs&quot;: &#123;</span><br><span class="line">            &quot;banlanceAvg&quot;: &#123;</span><br><span class="line">              &quot;avg&quot;: &#123;</span><br><span class="line">                &quot;field&quot;: &quot;balance&quot;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;ageBalanceAvg&quot;: &#123;</span><br><span class="line">          &quot;avg&quot;: &#123;</span><br><span class="line">            &quot;field&quot;: &quot;balance&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="映射"><a href="#映射" class="headerlink" title="映射"></a>映射</h4><h5 id="mapping创建"><a href="#mapping创建" class="headerlink" title="mapping创建"></a>mapping创建</h5><h6 id="什么是Mapping-映射-？"><a href="#什么是Mapping-映射-？" class="headerlink" title="什么是Mapping(映射)？"></a>什么是Mapping(映射)？</h6><p>Mapping是用来定义一个文档，以及它所包含的属性是如何存储和索引的。比如，使用mapping来定义：</p>
<ul>
<li><p>哪些字符串属性应该被看做是全文本属性。</p>
</li>
<li><p>哪些属性包含数字，日期或者地理位置。</p>
</li>
<li><p>文档中的所有属性是否都能被索引（_all配置）。</p>
</li>
<li><p>日期的格式。</p>
</li>
<li><p>自定义映射规则来执行动态添加属性。</p>
</li>
</ul>
<ol>
<li>查询映射</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET /bank/_mapping</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>创建映射</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PUT /my-index</span><br><span class="line">&#123;</span><br><span class="line">  &quot;mappings&quot;: &#123;</span><br><span class="line">    &quot;properties&quot;: &#123;</span><br><span class="line">      &quot;age&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;integer&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;email&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;keyword&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;name&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;text&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h5 id="添加新的字段映射"><a href="#添加新的字段映射" class="headerlink" title="添加新的字段映射"></a>添加新的字段映射</h5><p>使用 PUT &#x2F;my_index&#x2F;_mapping</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PUT /my-index/_mapping</span><br><span class="line">&#123;</span><br><span class="line">  &quot;properties&quot;: &#123;</span><br><span class="line">    &quot;employee-id&quot;: &#123;</span><br><span class="line">      &quot;type&quot;: &quot;keyword&quot;,</span><br><span class="line">      &quot;index&quot;: false</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h5 id="修改映射-amp-数据迁移"><a href="#修改映射-amp-数据迁移" class="headerlink" title="修改映射&amp;数据迁移"></a>修改映射&amp;数据迁移</h5><h6 id="更新映射"><a href="#更新映射" class="headerlink" title="更新映射"></a>更新映射</h6><p>对于已经存在的映射字段，我们不能更新。更新必须创建新的索引进行数据迁移。</p>
<h6 id="数据迁移"><a href="#数据迁移" class="headerlink" title="数据迁移"></a>数据迁移</h6><ol>
<li>查询之前的mapping数据，复制properties 中的数据</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET /bank/_mapping</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>创建新的索引映射</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PUT /newbank</span><br><span class="line">&#123;</span><br><span class="line">  &quot;mappings&quot;: &#123;</span><br><span class="line">    &quot;properties&quot;: &#123;</span><br><span class="line">      &quot;account_number&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;long&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;address&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;text&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;age&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;integer&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;balance&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;long&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;city&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;keyword&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;email&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;keyword&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;employer&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;keyword&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;firstname&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;text&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;gender&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;keyword&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;lastname&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;text&quot;,</span><br><span class="line">        &quot;fields&quot;: &#123;</span><br><span class="line">          &quot;keyword&quot;: &#123;</span><br><span class="line">            &quot;type&quot;: &quot;keyword&quot;,</span><br><span class="line">            &quot;ignore_above&quot;: 256</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;state&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;keyword&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>迁移数据</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST _reindex</span><br><span class="line">&#123;</span><br><span class="line">  &quot;source&quot;: &#123;</span><br><span class="line">    &quot;index&quot;: &quot;bank&quot;,</span><br><span class="line">    &quot;type&quot;: &quot;account&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;dest&quot;: &#123;</span><br><span class="line">    &quot;index&quot;: &quot;newbank&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="分词"><a href="#分词" class="headerlink" title="分词"></a>分词</h4><h5 id="分词-amp-安装ik分词"><a href="#分词-amp-安装ik分词" class="headerlink" title="分词&amp;安装ik分词"></a>分词&amp;安装ik分词</h5><h6 id="何为分词器？"><a href="#何为分词器？" class="headerlink" title="何为分词器？"></a>何为分词器？</h6><p>一个tokenizer(分词器)接收一个字符流，将之分割为独立的tokens(词元，通常是独立的单词)，然后输出tokens流。</p>
<p>例如，whitespace tokenizer遇到空白字符时分割文本。它会将文本”Quick brown fox!”分割为 [Quick,brown,fox!]。</p>
<p>该tokenizer（分词器）还负责记录各个term（词条）的顺序或position位置（用于phrase短语和word proximity 词近邻拆查询），以及term(词条)所代表的原始word(单词)的start（起始）和end（结束）的character offsets （字符偏移量）(用于高亮显示搜索的内容)。</p>
<p>Elasticsearch 提供了很多内置的分词器，可以用来构建custom analyzer (自定义分词器)</p>
<ol>
<li>使用分词器</li>
</ol>
<p>1.1 空格分词器</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;whitespace&quot;,</span><br><span class="line">  &quot;text&quot;:     &quot;The quick brown fox.&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>1.2 标准分词器</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;standard&quot;,</span><br><span class="line">  &quot;text&quot;:     &quot;The quick brown fox.&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2.安装ik分词器</p>
<p>2.1 使用wget 下载 ik分词器</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">wget https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v7.4.2/elasticsearch-analysis-ik-7.4.2.zip</span><br></pre></td></tr></table></figure>

<p>2.2 解压压缩包，放到挂载的plugins&#x2F;ik文件夹下</p>
<p>2.3 测试分词器</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 使用标准分词器</span><br><span class="line">GET my-index/_analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;text&quot;: [&quot;我是中国人&quot;]</span><br><span class="line">&#125;</span><br><span class="line"># 使用ik_smart分词器</span><br><span class="line">GET my-index/_analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;ik_smart&quot;,</span><br><span class="line">  &quot;text&quot;: [&quot;我是中国人&quot;]</span><br><span class="line">&#125;</span><br><span class="line"># 使用ik_max_word分词器</span><br><span class="line">GET my-index/_analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;ik_max_word&quot;,</span><br><span class="line">  &quot;text&quot;: [&quot;我是中国人&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h5 id="自定义扩展词库"><a href="#自定义扩展词库" class="headerlink" title="自定义扩展词库"></a>自定义扩展词库</h5><h6 id="为何需要自定义扩展词库？"><a href="#为何需要自定义扩展词库？" class="headerlink" title="为何需要自定义扩展词库？"></a>为何需要自定义扩展词库？</h6><p>有一些词汇，分词器中没有对应的，需要我们自己去添加到词库，然后分词器才能够识别。</p>
<h6 id="自定义词库"><a href="#自定义词库" class="headerlink" title="自定义词库"></a>自定义词库</h6><ol>
<li>使用nginx做静态文件重定向，需要安装nginx和启动，无需做nginx配置</li>
</ol>
<p>1.1 在html文件夹下，创建es文件夹，再然后创建fenci.txt文本，内容是你需要进行分词的词句。</p>
<p>1.2 访问<a class="link"   href="http://p/es/fenci.txt%EF%BC%8C%E7%BD%91%E9%A1%B5%E8%83%BD%E6%89%93%E5%BC%80%E7%9C%8B%E5%88%B0%E5%86%85%E5%AE%B9%EF%BC%8C%E8%AF%B4%E6%98%8E%E8%83%BD%E8%AE%BF%E9%97%AE%E3%80%82" >http://p/es/fenci.txt，网页能打开看到内容，说明能访问。<i class="fas fa-external-link-alt"></i></a></p>
<p>1.3 配置ik分词器配置文件，在elasticsearch的挂载目录的plugins下，解压之后的ik文件夹下进入config 文件夹下的IKAnalyzer.cfg.xml配置文件，把<a class="link"   href="http://p/es/fenci.txt%E9%85%8D%E7%BD%AE%E8%BF%9B%E5%8E%BB" >http://p/es/fenci.txt配置进去<i class="fas fa-external-link-alt"></i></a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE properties SYSTEM &quot;http://java.sun.com/dtd/properties.dtd&quot;&gt;</span><br><span class="line">&lt;properties&gt;</span><br><span class="line">        &lt;comment&gt;IK Analyzer 扩展配置&lt;/comment&gt;</span><br><span class="line">        &lt;!--用户可以在这里配置自己的扩展字典 --&gt;</span><br><span class="line">        &lt;entry key=&quot;ext_dict&quot;&gt;&lt;/entry&gt;</span><br><span class="line">         &lt;!--用户可以在这里配置自己的扩展停止词字典--&gt;</span><br><span class="line">        &lt;entry key=&quot;ext_stopwords&quot;&gt;&lt;/entry&gt;</span><br><span class="line">        &lt;!--用户可以在这里配置远程扩展字典 --&gt;</span><br><span class="line">        &lt;!-- &lt;entry key=&quot;remote_ext_dict&quot;&gt;http://192.168.72.130/es/fenci.txt&lt;/entry&gt; --&gt;</span><br><span class="line">        &lt;!--用户可以在这里配置远程扩展停止词字典--&gt;</span><br><span class="line">        &lt;!-- &lt;entry key=&quot;remote_ext_stopwords&quot;&gt;words_location&lt;/entry&gt; --&gt;</span><br><span class="line">&lt;/properties&gt;</span><br></pre></td></tr></table></figure>



<h4 id="整合"><a href="#整合" class="headerlink" title="整合"></a>整合</h4><h5 id="SpringBoot整合high-level-client"><a href="#SpringBoot整合high-level-client" class="headerlink" title="SpringBoot整合high-level-client"></a>SpringBoot整合high-level-client</h5><h6 id="java客户端"><a href="#java客户端" class="headerlink" title="java客户端"></a>java客户端</h6><ol>
<li>spring-data-elasticsearch-transport-api.jar （不兼容7.x，8以后废弃）</li>
</ol>
<p>通过9300（TCP）端口操作</p>
<p>以下通过9200 Http请求交互</p>
<ol start="2">
<li>JestClient</li>
</ol>
<p>非官方，更新慢</p>
<ol start="3">
<li>RestTemplate</li>
</ol>
<p>模拟发http请求，ES很多操作需要自己封装，麻烦</p>
<ol start="4">
<li>httpClient</li>
</ol>
<p>模拟发http请求，ES很多操作需要自己封装，麻烦</p>
<ol start="5">
<li>Elasticsearch-Rest-Client</li>
</ol>
<p>官方RestClient，封装了ES操作，API层次分明，上手简单。</p>
<h6 id="引入Elasticsearch-Rest-Client"><a href="#引入Elasticsearch-Rest-Client" class="headerlink" title="引入Elasticsearch-Rest-Client"></a>引入Elasticsearch-Rest-Client</h6><ol>
<li>引入maven依赖</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.elasticsearch.client<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>elasticsearch-rest-high-level-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>7.4.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>修改SpringBoot 默认版本，由于spring-boot-dependencies 中elasticsearch默认版本为&lt;elasticsearch.version&gt;6.4.3&lt;&#x2F;elasticsearch.version&gt;</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;elasticsearch.version&gt;7.4.2&lt;/elasticsearch.version&gt;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>加入common 模块，配置服务发现，再配置ElasticSearch配置类，加入到Bean容器中。</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ElasticSearchConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> RestHighLevelClient <span class="title function_">esRestClient</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">RestClientBuilder</span> <span class="variable">builder</span> <span class="operator">=</span> RestClient.builder(<span class="keyword">new</span> <span class="title class_">HttpHost</span>(<span class="string">&quot;192.168.72.130&quot;</span>, <span class="number">9200</span>,</span><br><span class="line">                <span class="string">&quot;http&quot;</span>));</span><br><span class="line">        <span class="type">RestHighLevelClient</span> <span class="variable">client</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RestHighLevelClient</span>(builder);</span><br><span class="line">        <span class="keyword">return</span> client;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>使用测试类，是否已经导入到容器中</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SuperMallElasticsearchApplicationTests</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    RestHighLevelClient esClient;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">contextLoads</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(esClient);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="测试保存"><a href="#测试保存" class="headerlink" title="测试保存"></a>测试保存</h5><ol>
<li>在配置类加上ES公共配置Options</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ElasticSearchConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RequestOptions COMMON_OPTIONS;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TOKEN</span> <span class="operator">=</span> <span class="string">&quot;CENTER_SEPT&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        RequestOptions.<span class="type">Builder</span> <span class="variable">builder</span> <span class="operator">=</span> RequestOptions.DEFAULT.toBuilder();</span><br><span class="line"><span class="comment">//        builder.addHeader(&quot;Authorization&quot;, &quot;Bearer&quot; + TOKEN);</span></span><br><span class="line"><span class="comment">//        builder.setHttpAsyncResponseConsumerFactory(new HttpAsyncResponseConsumerFactory.HeapBufferedResponseConsumerFactory(30 * 1024 * 1024 * 1024));</span></span><br><span class="line">        COMMON_OPTIONS = builder.build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> RestHighLevelClient <span class="title function_">esRestClient</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">RestClientBuilder</span> <span class="variable">builder</span> <span class="operator">=</span> RestClient.builder(<span class="keyword">new</span> <span class="title class_">HttpHost</span>(<span class="string">&quot;192.168.72.130&quot;</span>, <span class="number">9200</span>,</span><br><span class="line">                <span class="string">&quot;http&quot;</span>));</span><br><span class="line">        <span class="type">RestHighLevelClient</span> <span class="variable">client</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RestHighLevelClient</span>(builder);</span><br><span class="line">        <span class="keyword">return</span> client;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>在测试类，加入以下代码，测试保存。</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SuperMallElasticsearchApplicationTests</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    RestHighLevelClient esClient;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存index到es中</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addIndex</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">IndexRequest</span> <span class="variable">indexRequest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IndexRequest</span>(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">        indexRequest.id(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">        <span class="comment">// 这是一种方式</span></span><br><span class="line">        <span class="comment">// indexRequest.source(&quot;userName&quot;,&quot;chaoren&quot;,&quot;age&quot;,&quot;18&quot;,&quot;gender&quot;,&quot;男&quot;);</span></span><br><span class="line">        <span class="comment">// 第二种方式</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        user.setUserName(<span class="string">&quot;chaoren&quot;</span>);</span><br><span class="line">        user.setAge(<span class="number">18</span>);</span><br><span class="line">        user.setGender(<span class="string">&quot;男&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">string</span> <span class="operator">=</span> JSON.toJSONString(user);</span><br><span class="line">        indexRequest.source(string, XContentType.JSON);</span><br><span class="line">        <span class="comment">// 执行保存操作</span></span><br><span class="line">        <span class="type">IndexResponse</span> <span class="variable">index</span> <span class="operator">=</span> esClient.index(indexRequest, ElasticSearchConfig.COMMON_OPTIONS);</span><br><span class="line">        System.out.println(index);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Data</span></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">        <span class="keyword">private</span> String userName;</span><br><span class="line">        <span class="keyword">private</span> String gender;</span><br><span class="line">        <span class="keyword">private</span> Integer age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">contextLoads</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(esClient);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="测试复杂检索"><a href="#测试复杂检索" class="headerlink" title="测试复杂检索"></a>测试复杂检索</h5><p>测试类加入以下内容</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">   <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">searchData</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// 创建索引请求</span></span><br><span class="line">        <span class="type">SearchRequest</span> <span class="variable">searchRequest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SearchRequest</span>();</span><br><span class="line">        <span class="comment">// 指定索引</span></span><br><span class="line">        searchRequest.indices(<span class="string">&quot;bank&quot;</span>);</span><br><span class="line">        <span class="comment">// 指定DSL，索引条件</span></span><br><span class="line">        <span class="type">SearchSourceBuilder</span> <span class="variable">searchSourceBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SearchSourceBuilder</span>();</span><br><span class="line">        <span class="comment">// 构造检索条件</span></span><br><span class="line">        <span class="comment">//searchSourceBuilder.query(QueryBuilders.matchAllQuery());</span></span><br><span class="line">        searchSourceBuilder.query(QueryBuilders.matchQuery(<span class="string">&quot;address&quot;</span>, <span class="string">&quot;mill&quot;</span>));</span><br><span class="line">        <span class="comment">// 聚合</span></span><br><span class="line">        <span class="comment">// 按照年龄的值分布进行聚合</span></span><br><span class="line">        searchSourceBuilder.aggregation(AggregationBuilders.terms(<span class="string">&quot;ageAgg&quot;</span>).field(<span class="string">&quot;age&quot;</span>).size(<span class="number">10</span>));</span><br><span class="line">        <span class="comment">// 计算平均薪资</span></span><br><span class="line">        searchSourceBuilder.aggregation(AggregationBuilders.avg(<span class="string">&quot;balanceAvg&quot;</span>).field(<span class="string">&quot;balance&quot;</span>));</span><br><span class="line">        searchRequest.source(searchSourceBuilder);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 执行检索</span></span><br><span class="line">        <span class="type">SearchResponse</span> <span class="variable">search</span> <span class="operator">=</span> esClient.search(searchRequest, ElasticSearchConfig.COMMON_OPTIONS);</span><br><span class="line">        System.out.println(search);</span><br><span class="line">        <span class="comment">// 分析结果</span></span><br><span class="line">        <span class="comment">// 获取所有命中的记录</span></span><br><span class="line">        <span class="type">SearchHits</span> <span class="variable">hits</span> <span class="operator">=</span> search.getHits();</span><br><span class="line">        SearchHit[] searchHit = hits.getHits();</span><br><span class="line">        <span class="keyword">for</span> (SearchHit documentFields : searchHit) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">sourceAsString</span> <span class="operator">=</span> documentFields.getSourceAsString();</span><br><span class="line">            <span class="type">Account</span> <span class="variable">account</span> <span class="operator">=</span> JSON.parseObject(sourceAsString, Account.class);</span><br><span class="line">            System.out.println(account);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 分析聚合信息</span></span><br><span class="line">        <span class="type">Aggregations</span> <span class="variable">aggregations</span> <span class="operator">=</span> search.getAggregations();</span><br><span class="line"><span class="comment">//        for (Aggregation aggregation : aggregations) &#123;</span></span><br><span class="line"><span class="comment">//            System.out.println(&quot;当前聚合：&quot;+aggregation.getName());</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">        <span class="type">Terms</span> <span class="variable">ageAgg</span> <span class="operator">=</span> aggregations.get(<span class="string">&quot;ageAgg&quot;</span>);</span><br><span class="line">        List&lt;? <span class="keyword">extends</span> <span class="title class_">Terms</span>.Bucket&gt; buckets = ageAgg.getBuckets();</span><br><span class="line">        <span class="keyword">for</span> (Terms.Bucket bucket : buckets) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">keyAsString</span> <span class="operator">=</span> bucket.getKeyAsString();</span><br><span class="line">            System.out.println(<span class="string">&quot;年龄：&quot;</span> + keyAsString);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">Avg</span> <span class="variable">balanceAvg</span> <span class="operator">=</span> aggregations.get(<span class="string">&quot;balanceAvg&quot;</span>);</span><br><span class="line">        <span class="type">double</span> <span class="variable">value</span> <span class="operator">=</span> balanceAvg.getValue();</span><br><span class="line">        System.out.println(<span class="string">&quot;平均薪资：&quot;</span> + value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ToString</span></span><br><span class="line">    <span class="meta">@Data</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Account</span> &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="type">int</span> account_number;</span><br><span class="line">        <span class="keyword">private</span> <span class="type">int</span> balance;</span><br><span class="line">        <span class="keyword">private</span> String firstname;</span><br><span class="line">        <span class="keyword">private</span> String lastname;</span><br><span class="line">        <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">        <span class="keyword">private</span> String gender;</span><br><span class="line">        <span class="keyword">private</span> String address;</span><br><span class="line">        <span class="keyword">private</span> String employer;</span><br><span class="line">        <span class="keyword">private</span> String email;</span><br><span class="line">        <span class="keyword">private</span> String city;</span><br><span class="line">        <span class="keyword">private</span> String state;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>



<h2 id="商城业务"><a href="#商城业务" class="headerlink" title="商城业务"></a>商城业务</h2><h3 id="商品上架"><a href="#商品上架" class="headerlink" title="商品上架"></a>商品上架</h3><p>上架的商品才可以在网站上展示</p>
<p>上架的商品需要可以被检索</p>
<h4 id="sku在es中存储模型分析"><a href="#sku在es中存储模型分析" class="headerlink" title="sku在es中存储模型分析"></a>sku在es中存储模型分析</h4><ol>
<li><h5 id="商城mapping"><a href="#商城mapping" class="headerlink" title="商城mapping"></a>商城mapping</h5></li>
</ol>
<h6 id="分析：商品上架在es中是存sku还是spu-？"><a href="#分析：商品上架在es中是存sku还是spu-？" class="headerlink" title="分析：商品上架在es中是存sku还是spu ？"></a>分析：商品上架在es中是存sku还是spu ？</h6><ol>
<li>检索的时候输入名字，是需要按照sku的title进行全文检索的。</li>
<li>检索使用商品规格，规格是spu的公共属性，每个spu是一样的</li>
<li>按照分类id进去的都是直接列出spu的，还可以切换</li>
<li>我们如果将sku的全量信息保存到es中（包括spu属性）就太多量字段</li>
<li>我们如果将spu以及他包含的sku信息保存到es中，也可以方便检索。但是sku属于spu的级联对象，在es中需要nested模型，这种性能差点。</li>
<li>但是存储与检索我们必须性能折中</li>
<li>如果我们拆分存储，spu和attr一个索引，sku单独一个索引可能涉及的问题</li>
</ol>
<p>检索商品的名字，如“手机”,对应的spu有很多，我们要分析出这些spu的所有关联属性，在做一次查询，就必须将所有spu_id都发出去。假设有1万个数据，数据传输就一次就10000*4&#x3D;4MB；并发情况下假设1000检索请求，那就是4GB的数据，传输阻塞时间会很长，业务无法继续。</p>
<p>所以，我们如下设计，这样才是文档区别于关系型数据库的地方，宽表设计，不能考虑数据库范式。</p>
<p>添加product索引</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PUT product</span><br><span class="line">&#123;</span><br><span class="line">  &quot;mappings&quot;: &#123;</span><br><span class="line">    &quot;properties&quot;: &#123;</span><br><span class="line">      &quot;skuId&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;long&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;spuId&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;text&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;skuTitle&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;text&quot;,</span><br><span class="line">        &quot;analyzer&quot;: &quot;ik_smart&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;skuPrice&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;keyword&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;skuImg&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;keyword&quot;,</span><br><span class="line">        &quot;index&quot;: false,</span><br><span class="line">        &quot;doc_values&quot;: false</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;saleCount&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;long&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;hasStock&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;boolean&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;hotScore&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;long&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;brandId&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;long&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;catalogId&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;long&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;brandName&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;keyword&quot;,</span><br><span class="line">        &quot;index&quot;: false,</span><br><span class="line">        &quot;doc_values&quot;: false</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;brandImg&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;keyword&quot;,</span><br><span class="line">        &quot;index&quot;: false,</span><br><span class="line">        &quot;doc_values&quot;: false</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;catalogName&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;keyword&quot;,</span><br><span class="line">        &quot;index&quot;: false,</span><br><span class="line">        &quot;doc_values&quot;: false</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;attrs&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;nested&quot;,</span><br><span class="line">        &quot;properties&quot;: &#123;</span><br><span class="line">          &quot;attrId&quot;: &#123;</span><br><span class="line">            &quot;type&quot;: &quot;long&quot;</span><br><span class="line">          &#125;,</span><br><span class="line">          &quot;attrName&quot;: &#123;</span><br><span class="line">            &quot;type&quot;: &quot;keyword&quot;,</span><br><span class="line">            &quot;index&quot;: false,</span><br><span class="line">            &quot;doc_values&quot;: false</span><br><span class="line">          &#125;,</span><br><span class="line">          &quot;attrValue&quot;: &#123;</span><br><span class="line">            &quot;type&quot;: &quot;keyword&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="nested数据类型场景"><a href="#nested数据类型场景" class="headerlink" title="nested数据类型场景"></a>nested数据类型场景</h4><h5 id="Es-数组的扁平化处理"><a href="#Es-数组的扁平化处理" class="headerlink" title="Es-数组的扁平化处理"></a>Es-数组的扁平化处理</h5><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://center-sept-image.oss-cn-shenzhen.aliyuncs.com/img/image-20201218143304391.png"
                      alt="image-20201218143304391"
                ></p>
<p>为了不让数组扁平化的发生，我们可以使用nested。</p>
<ol>
<li>测试数据</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PUT my_index/_doc/1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;group&quot;: &quot;fans&quot;,</span><br><span class="line">  &quot;user&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;first&quot;: &quot;John&quot;,</span><br><span class="line">      &quot;last&quot;: &quot;Smith&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;first&quot;: &quot;Alice&quot;,</span><br><span class="line">      &quot;last&quot;: &quot;White&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">GET my_index/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot;: &#123;</span><br><span class="line">      &quot;must&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;match&quot;: &#123;</span><br><span class="line">            &quot;user.first&quot;: &quot;Alice&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;match&quot;: &#123;</span><br><span class="line">            &quot;user.last&quot;: &quot;Smith&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">GET my_index/_mapping</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>修改为嵌入式</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DELETE my_index</span><br><span class="line"></span><br><span class="line">PUT my_index</span><br><span class="line">&#123;</span><br><span class="line">  &quot;mappings&quot;: &#123;</span><br><span class="line">    &quot;properties&quot;: &#123;</span><br><span class="line">      &quot;user&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;nested&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"># 再执行上面的插入操作，使用数据进行对比</span><br></pre></td></tr></table></figure>

<h4 id="构造基本数据"><a href="#构造基本数据" class="headerlink" title="构造基本数据"></a>构造基本数据</h4><ol>
<li>添加上架业务</li>
</ol>
<p>SpuInfoController.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/&#123;spuId&#125;/up&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">spuUp</span><span class="params">(<span class="meta">@PathVariable(&quot;spuId&quot;)</span> Long spuId)</span>&#123;</span><br><span class="line">    spuInfoService.up(spuId);</span><br><span class="line">    <span class="keyword">return</span> R.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>SpuInfoServiceImpl.java</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 商品上架</span><br><span class="line"> *</span><br><span class="line"> * @param spuId</span><br><span class="line"> */</span><br><span class="line">@Override</span><br><span class="line">public void up(Long spuId) &#123;</span><br><span class="line">    // 组装需要数据</span><br><span class="line">    // 查出当前spuId对应的所有sku信息,品牌的名称</span><br><span class="line">    List&lt;SkuInfoEntity&gt; skus = skuInfoService.getSkusBySpuId(spuId);</span><br><span class="line">    // todo attrs 查询当前sku的所有可以被用来检索的规格属性</span><br><span class="line">    // 封装每个sku的信息</span><br><span class="line">    skus.stream().map(sku -&gt; &#123;</span><br><span class="line">        SkuEsModel skuEsModel = new SkuEsModel();</span><br><span class="line">        BeanUtils.copyProperties(sku, skuEsModel);</span><br><span class="line">        // skuPrice,skuImg</span><br><span class="line">        skuEsModel.setSkuPrice(sku.getPrice());</span><br><span class="line">        skuEsModel.setSkuImg(sku.getSkuDefaultImg());</span><br><span class="line">        // hasStock,hotScore</span><br><span class="line">        // todo 1.发送远程调用，库存系统查询是否有库存</span><br><span class="line">        // todo 2.热度评分</span><br><span class="line">        // 3.查询品牌信息</span><br><span class="line">        // brandName,brandImg</span><br><span class="line">        BrandEntity brandEntity = brandService.getById(skuEsModel.getBrandId());</span><br><span class="line">        skuEsModel.setBrandName(brandEntity.getName());</span><br><span class="line">        skuEsModel.setBrandImg(brandEntity.getLogo());</span><br><span class="line">        // catalogName</span><br><span class="line">        // 4.查询分类信息</span><br><span class="line">        CategoryEntity categoryEntity = categoryService.getById(skuEsModel.getCatalogId());</span><br><span class="line">        skuEsModel.setCatalogName(categoryEntity.getName());</span><br><span class="line">        return skuEsModel;</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line">    // todo 将数据发送给es进行保存;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Common模块添加 SkuEsModel.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SkuEsModel</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Long skuId;</span><br><span class="line">    <span class="keyword">private</span> Long spuId;</span><br><span class="line">    <span class="keyword">private</span> String skuTitle;</span><br><span class="line">    <span class="keyword">private</span> BigDecimal skuPrice;</span><br><span class="line">    <span class="keyword">private</span> String skuImg;</span><br><span class="line">    <span class="keyword">private</span> Long saleCount;</span><br><span class="line">    <span class="keyword">private</span> Boolean hasStock;</span><br><span class="line">    <span class="keyword">private</span> Long hotScore;</span><br><span class="line">    <span class="keyword">private</span> Long brandId;</span><br><span class="line">    <span class="keyword">private</span> Long catalogId;</span><br><span class="line">    <span class="keyword">private</span> String brandName;</span><br><span class="line">    <span class="keyword">private</span> String brandImg;</span><br><span class="line">    <span class="keyword">private</span> String catalogName;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Attrs&gt; attrs;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Data</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Attrs</span> &#123;</span><br><span class="line">        <span class="keyword">private</span> Long attrId;</span><br><span class="line">        <span class="keyword">private</span> String attrName;</span><br><span class="line">        <span class="keyword">private</span> String attrValue;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>SkuInfoServiceImpl.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> List&lt;SkuInfoEntity&gt; <span class="title function_">getSkusBySpuId</span><span class="params">(Long spuId)</span> &#123;</span><br><span class="line">    List&lt;SkuInfoEntity&gt; list = <span class="built_in">this</span>.list(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;SkuInfoEntity&gt;().eq(<span class="string">&quot;spu_id&quot;</span>,spuId));</span><br><span class="line">    <span class="keyword">return</span> list;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="构造sku检索数据"><a href="#构造sku检索数据" class="headerlink" title="构造sku检索数据"></a>构造sku检索数据</h4><ol>
<li>查询当前sku的所有可以被用来检索的规格属性</li>
</ol>
<p>1.1 SpuInfoServiceImpl 修改 up 方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">up</span><span class="params">(Long spuId)</span> &#123;</span><br><span class="line">    <span class="comment">// 组装需要数据</span></span><br><span class="line">    <span class="comment">// 查出当前spuId对应的所有sku信息,品牌的名称</span></span><br><span class="line">    List&lt;SkuInfoEntity&gt; skus = skuInfoService.getSkusBySpuId(spuId);</span><br><span class="line">    <span class="comment">//  attrs 查询当前sku的所有可以被用来检索的规格属性</span></span><br><span class="line">    List&lt;ProductAttrValueEntity&gt; baseAttrs = attrValueService.baseAttrlistforspu(spuId);</span><br><span class="line">    List&lt;Long&gt; attrIds = baseAttrs.stream().map(attr -&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> attr.getAttrId();</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line">    List&lt;Long&gt; searchAttrIds = attrService.selectSearchAttrs(attrIds);</span><br><span class="line">    Set&lt;Long&gt; idSet = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;(searchAttrIds);</span><br><span class="line">    <span class="comment">// 过滤出不存在的规格属性,构建属性集合</span></span><br><span class="line">    List&lt;SkuEsModel.Attrs&gt; attrs = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    List&lt;SkuEsModel.Attrs&gt; attrsList = baseAttrs.stream().filter(item -&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> idSet.contains(item.getAttrId());</span><br><span class="line">    &#125;).map(item -&gt; &#123;</span><br><span class="line">        SkuEsModel.<span class="type">Attrs</span> <span class="variable">attrs1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SkuEsModel</span>.Attrs();</span><br><span class="line">        BeanUtils.copyProperties(item, attrs1);</span><br><span class="line">        <span class="keyword">return</span> attrs1;</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line">    <span class="comment">// 封装每个sku的信息</span></span><br><span class="line">    skus.stream().map(sku -&gt; &#123;</span><br><span class="line">        <span class="type">SkuEsModel</span> <span class="variable">skuEsModel</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SkuEsModel</span>();</span><br><span class="line">        BeanUtils.copyProperties(sku, skuEsModel);</span><br><span class="line">        <span class="comment">// skuPrice,skuImg</span></span><br><span class="line">        skuEsModel.setSkuPrice(sku.getPrice());</span><br><span class="line">        skuEsModel.setSkuImg(sku.getSkuDefaultImg());</span><br><span class="line">        <span class="comment">// hasStock,hotScore</span></span><br><span class="line">        <span class="comment">// todo 1.发送远程调用，库存系统查询是否有库存</span></span><br><span class="line">        <span class="comment">// todo 2.热度评分,暂时定为零</span></span><br><span class="line">        skuEsModel.setHotScore(<span class="number">0L</span>);</span><br><span class="line">        <span class="comment">// 3.查询品牌信息</span></span><br><span class="line">        <span class="comment">// brandName,brandImg</span></span><br><span class="line">        <span class="type">BrandEntity</span> <span class="variable">brandEntity</span> <span class="operator">=</span> brandService.getById(skuEsModel.getBrandId());</span><br><span class="line">        skuEsModel.setBrandName(brandEntity.getName());</span><br><span class="line">        skuEsModel.setBrandImg(brandEntity.getLogo());</span><br><span class="line">        <span class="comment">// catalogName</span></span><br><span class="line">        <span class="comment">// 4.查询分类信息</span></span><br><span class="line">        <span class="type">CategoryEntity</span> <span class="variable">categoryEntity</span> <span class="operator">=</span> categoryService.getById(skuEsModel.getCatalogId());</span><br><span class="line">        skuEsModel.setCatalogName(categoryEntity.getName());</span><br><span class="line">        <span class="comment">// 设置检索属性</span></span><br><span class="line">        skuEsModel.setAttrs(attrsList);</span><br><span class="line">        <span class="keyword">return</span> skuEsModel;</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line">    <span class="comment">// todo 将数据发送给es进行保存;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>1.2 添加根据attrId集合查询检索属性集合</p>
<p>AttrDao.java</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">List&lt;Long&gt; selectSearchAttrs(@Param(&quot;attrIds&quot;) List&lt;Long&gt; attrIds);</span><br></pre></td></tr></table></figure>

<p>AttrDao.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectSearchAttrs&quot;</span>  <span class="attr">resultType</span>=<span class="string">&quot;java.lang.Long&quot;</span>&gt;</span></span><br><span class="line">    select attr_id from pms_attr where attr_id in</span><br><span class="line">    <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;attrIds&quot;</span> <span class="attr">item</span>=<span class="string">&quot;id&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span> <span class="attr">open</span>=<span class="string">&quot;(&quot;</span> <span class="attr">close</span>=<span class="string">&quot;)&quot;</span>&gt;</span></span><br><span class="line">                #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">    and search_type = 1</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>AttrService.java </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在指定的所有属性集合里面，挑出检索属性</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> attrIds</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">List&lt;Long&gt; <span class="title function_">selectSearchAttrs</span><span class="params">(List&lt;Long&gt; attrIds)</span>;</span><br></pre></td></tr></table></figure>

<p>AttrServiceImpl.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> List&lt;Long&gt; <span class="title function_">selectSearchAttrs</span><span class="params">(List&lt;Long&gt; attrIds)</span> &#123;</span><br><span class="line">    List&lt;Long&gt; longs = <span class="built_in">this</span>.baseMapper.selectSearchAttrs(attrIds);</span><br><span class="line">    <span class="keyword">return</span> longs;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="远程查询库存-amp-泛型结果封装"><a href="#远程查询库存-amp-泛型结果封装" class="headerlink" title="远程查询库存&amp;泛型结果封装"></a>远程查询库存&amp;泛型结果封装</h4><ol>
<li>远程查询库存</li>
</ol>
<p>1.1 修改上架方法</p>
<p>SpuInfoServiceImpl.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">WareFeignService wareFeignService;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">up</span><span class="params">(Long spuId)</span> &#123;</span><br><span class="line">        <span class="comment">// 组装需要数据</span></span><br><span class="line">        <span class="comment">// 查出当前spuId对应的所有sku信息,品牌的名称</span></span><br><span class="line">        List&lt;SkuInfoEntity&gt; skus = skuInfoService.getSkusBySpuId(spuId);</span><br><span class="line">        List&lt;Long&gt; skuIds = skus.stream().map(item -&gt; &#123;</span><br><span class="line">            <span class="keyword">return</span> item.getSkuId();</span><br><span class="line">        &#125;).collect(Collectors.toList());</span><br><span class="line">        <span class="comment">//  attrs 查询当前sku的所有可以被用来检索的规格属性</span></span><br><span class="line">        List&lt;ProductAttrValueEntity&gt; baseAttrs = attrValueService.baseAttrlistforspu(spuId);</span><br><span class="line">        List&lt;Long&gt; attrIds = baseAttrs.stream().map(attr -&gt; &#123;</span><br><span class="line">            <span class="keyword">return</span> attr.getAttrId();</span><br><span class="line">        &#125;).collect(Collectors.toList());</span><br><span class="line">        List&lt;Long&gt; searchAttrIds = attrService.selectSearchAttrs(attrIds);</span><br><span class="line">        Set&lt;Long&gt; idSet = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;(searchAttrIds);</span><br><span class="line">        <span class="comment">// 过滤出不存在的规格属性,构建属性集合</span></span><br><span class="line">        List&lt;SkuEsModel.Attrs&gt; attrs = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        List&lt;SkuEsModel.Attrs&gt; attrsList = baseAttrs.stream().filter(item -&gt; &#123;</span><br><span class="line">            <span class="keyword">return</span> idSet.contains(item.getAttrId());</span><br><span class="line">        &#125;).map(item -&gt; &#123;</span><br><span class="line">            SkuEsModel.<span class="type">Attrs</span> <span class="variable">attrs1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SkuEsModel</span>.Attrs();</span><br><span class="line">            BeanUtils.copyProperties(item, attrs1);</span><br><span class="line">            <span class="keyword">return</span> attrs1;</span><br><span class="line">        &#125;).collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// todo 1.发送远程调用，库存系统查询是否有库存</span></span><br><span class="line">        Map&lt;Long, Boolean&gt; stockMap = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            R&lt;List&lt;SkuHasStockVo&gt;&gt; skusHasStock = wareFeignService.getSkusHasStock(skuIds);</span><br><span class="line">            stockMap = skusHasStock.getData().stream().collect(Collectors.toMap(SkuHasStockVo::getSkuId</span><br><span class="line">                    , item -&gt; item.getHasStock()));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            log.error(<span class="string">&quot;库存服务查询异常：原因&#123;&#125;&quot;</span>,e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 封装每个sku的信息</span></span><br><span class="line">        Map&lt;Long, Boolean&gt; finalStockMap = stockMap;</span><br><span class="line">        skus.stream().map(sku -&gt; &#123;</span><br><span class="line">            <span class="type">SkuEsModel</span> <span class="variable">skuEsModel</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SkuEsModel</span>();</span><br><span class="line">            BeanUtils.copyProperties(sku, skuEsModel);</span><br><span class="line">            <span class="comment">// skuPrice,skuImg</span></span><br><span class="line">            skuEsModel.setSkuPrice(sku.getPrice());</span><br><span class="line">            skuEsModel.setSkuImg(sku.getSkuDefaultImg());</span><br><span class="line">            <span class="comment">// hasStock,hotScore</span></span><br><span class="line">            <span class="comment">// 判断是否有库存,然后设置库存信息</span></span><br><span class="line">            <span class="keyword">if</span> (finalStockMap ==<span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="comment">// 如果库存服务异常，则默认为有库存 todo</span></span><br><span class="line">                skuEsModel.setHasStock(<span class="literal">true</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                skuEsModel.setHasStock(finalStockMap.get(sku.getSkuId()));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// todo 2.热度评分,暂时定为零</span></span><br><span class="line">            skuEsModel.setHotScore(<span class="number">0L</span>);</span><br><span class="line">            <span class="comment">// 3.查询品牌信息</span></span><br><span class="line">            <span class="comment">// brandName,brandImg</span></span><br><span class="line">            <span class="type">BrandEntity</span> <span class="variable">brandEntity</span> <span class="operator">=</span> brandService.getById(skuEsModel.getBrandId());</span><br><span class="line">            skuEsModel.setBrandName(brandEntity.getName());</span><br><span class="line">            skuEsModel.setBrandImg(brandEntity.getLogo());</span><br><span class="line">            <span class="comment">// catalogName</span></span><br><span class="line">            <span class="comment">// 4.查询分类信息</span></span><br><span class="line">            <span class="type">CategoryEntity</span> <span class="variable">categoryEntity</span> <span class="operator">=</span> categoryService.getById(skuEsModel.getCatalogId());</span><br><span class="line">            skuEsModel.setCatalogName(categoryEntity.getName());</span><br><span class="line">            <span class="comment">// 设置检索属性</span></span><br><span class="line">            skuEsModel.setAttrs(attrsList);</span><br><span class="line">            <span class="keyword">return</span> skuEsModel;</span><br><span class="line">        &#125;).collect(Collectors.toList());</span><br><span class="line">        <span class="comment">// todo 将数据发送给es进行保存;</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>1.2  Ware 模块检索业务</p>
<p>SkuHasStockVo.java Product和Ware模块同时建立这个VO</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SkuHasStockVo</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Long skuId;</span><br><span class="line">    <span class="keyword">private</span> Boolean hasStock;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>WareSkuController.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/hasstock&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R&lt;List&lt;SkuHasStockVo&gt;&gt; <span class="title function_">getSkusHasStock</span><span class="params">(<span class="meta">@RequestBody</span> List&lt;Long&gt; skuIds)</span> &#123;</span><br><span class="line">    List&lt;SkuHasStockVo&gt; skuHasStockVos = wareSkuService.getSkusHasStock(skuIds);</span><br><span class="line">    R&lt;List&lt;SkuHasStockVo&gt;&gt; ok = R.ok();</span><br><span class="line">    ok.setData(skuHasStockVos);</span><br><span class="line">    <span class="keyword">return</span> ok;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>WareSkuServiceImpl.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> List&lt;SkuHasStockVo&gt; <span class="title function_">getSkusHasStock</span><span class="params">(List&lt;Long&gt; skuIds)</span> &#123;</span><br><span class="line">    List&lt;SkuHasStockVo&gt; result = skuIds.stream().map(item -&gt; &#123;</span><br><span class="line">        <span class="type">SkuHasStockVo</span> <span class="variable">vo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SkuHasStockVo</span>();</span><br><span class="line">        <span class="comment">// 查询当前sku的总库存量</span></span><br><span class="line">        <span class="comment">// select sum(stock-stock_locked) from `wms_ware_sku` where sku_id = 1</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">count</span> <span class="operator">=</span> baseMapper.getSkuStock(item);</span><br><span class="line">        vo.setSkuId(item);</span><br><span class="line">        vo.setHasStock(count &gt; <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> vo;</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>WareSkuDao.java</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">long getSkuStock(Long item);</span><br></pre></td></tr></table></figure>

<p>WareSkuDao.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getSkuStock&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;java.lang.Long&quot;</span> &gt;</span></span><br><span class="line">    select sum(stock-stock_locked) from wms_ware_sku where sku_id = #&#123;skuId&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>1.3 Product 模块构建Ware服务的feign</p>
<p>WareFeignService.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@FeignClient(&quot;supermall-ware&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">WareFeignService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 1.R设计的时候可以加上泛型</span></span><br><span class="line"><span class="comment">     * 2.直接返回对应的类型</span></span><br><span class="line"><span class="comment">     * 3.自己封装解析结果</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> skuIds</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/ware/waresku/hasstock&quot;)</span></span><br><span class="line">    R&lt;List&lt;SkuHasStockVo&gt;&gt; <span class="title function_">getSkusHasStock</span><span class="params">(<span class="meta">@RequestBody</span> List&lt;Long&gt; skuIds)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>泛型结果封装</li>
</ol>
<p>增加R.java 中的泛型成员变量data;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">R</span>&lt;T&gt; <span class="keyword">extends</span> <span class="title class_">HashMap</span>&lt;String, Object&gt; &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> T data;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> T <span class="title function_">getData</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> data;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setData</span><span class="params">(T data)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>.data = data;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">R</span><span class="params">()</span> &#123;</span><br><span class="line">		put(<span class="string">&quot;code&quot;</span>, <span class="number">0</span>);</span><br><span class="line">		put(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;success&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> R <span class="title function_">error</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> error(HttpStatus.SC_INTERNAL_SERVER_ERROR, <span class="string">&quot;未知异常，请联系管理员&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> R <span class="title function_">error</span><span class="params">(String msg)</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> error(HttpStatus.SC_INTERNAL_SERVER_ERROR, msg);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> R <span class="title function_">error</span><span class="params">(<span class="type">int</span> code, String msg)</span> &#123;</span><br><span class="line">		<span class="type">R</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">R</span>();</span><br><span class="line">		r.put(<span class="string">&quot;code&quot;</span>, code);</span><br><span class="line">		r.put(<span class="string">&quot;msg&quot;</span>, msg);</span><br><span class="line">		<span class="keyword">return</span> r;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> R <span class="title function_">ok</span><span class="params">(String msg)</span> &#123;</span><br><span class="line">		<span class="type">R</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">R</span>();</span><br><span class="line">		r.put(<span class="string">&quot;msg&quot;</span>, msg);</span><br><span class="line">		<span class="keyword">return</span> r;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> R <span class="title function_">ok</span><span class="params">(Map&lt;String, Object&gt; map)</span> &#123;</span><br><span class="line">		<span class="type">R</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">R</span>();</span><br><span class="line">		r.putAll(map);</span><br><span class="line">		<span class="keyword">return</span> r;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> R <span class="title function_">ok</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">R</span>();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> R <span class="title function_">put</span><span class="params">(String key, Object value)</span> &#123;</span><br><span class="line">		<span class="built_in">super</span>.put(key, value);</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> Integer <span class="title function_">getCode</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="type">Integer</span> <span class="variable">code</span> <span class="operator">=</span> (Integer) <span class="built_in">this</span>.get(<span class="string">&quot;code&quot;</span>);</span><br><span class="line">		<span class="keyword">return</span> code;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="远程上架接口"><a href="#远程上架接口" class="headerlink" title="远程上架接口"></a>远程上架接口</h4><ol>
<li>在elasticsearch模块新建商品上架信息保存到ES的业务逻辑</li>
</ol>
<p>ElasticSearchSaveController</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/search/save&quot;)</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ElasticSearchSaveController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    ProductSaveService productSaveService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/product&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">productStatusUp</span><span class="params">(<span class="meta">@RequestBody</span> List&lt;SkuEsModel&gt; skuEsModels)</span> &#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">b</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            b = productSaveService.productStatusUp(skuEsModels);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            log.error(<span class="string">&quot;ElasticSearchSaveController商品上架错误：&#123;&#125;&quot;</span>, e);</span><br><span class="line">            <span class="keyword">return</span> R.error(BizCodeEnume.PRODUCT_UP_EXCEPTION.getCode(), BizCodeEnume.PRODUCT_UP_EXCEPTION.getMsg());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 成功</span></span><br><span class="line">        <span class="keyword">if</span> (!b) &#123;</span><br><span class="line">            <span class="keyword">return</span> R.ok();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> R.error(BizCodeEnume.PRODUCT_UP_EXCEPTION.getCode(), BizCodeEnume.PRODUCT_UP_EXCEPTION.getMsg());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>ProductSaveService</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ProductSaveService</span> &#123;</span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">productStatusUp</span><span class="params">(List&lt;SkuEsModel&gt; skuEsModels)</span> <span class="keyword">throws</span> IOException;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>ProductSaveServiceImpl</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProductSaveServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">ProductSaveService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    RestHighLevelClient restHighLevelClient;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">productStatusUp</span><span class="params">(List&lt;SkuEsModel&gt; skuEsModels)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// 1.给es中建立一个索引。product.</span></span><br><span class="line">        <span class="comment">// 建立好映射关系product-mapping.txt</span></span><br><span class="line">        <span class="comment">// 2.保存到es中</span></span><br><span class="line">        <span class="type">BulkRequest</span> <span class="variable">bulkRequest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BulkRequest</span>();</span><br><span class="line">        <span class="keyword">for</span> (SkuEsModel skuEsModel : skuEsModels) &#123;</span><br><span class="line">            <span class="comment">// 赋值索引</span></span><br><span class="line">            <span class="type">IndexRequest</span> <span class="variable">indexRequest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IndexRequest</span>(EsConstant.PRODUCT_INDEX);</span><br><span class="line">            <span class="comment">// 赋值id</span></span><br><span class="line">            indexRequest.id(skuEsModel.getSkuId().toString());</span><br><span class="line">            <span class="comment">// 设置数据</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">data</span> <span class="operator">=</span> JSON.toJSONString(skuEsModel);</span><br><span class="line">            indexRequest.source(data, XContentType.JSON);</span><br><span class="line">            <span class="comment">// 添加到批量操作中</span></span><br><span class="line">            bulkRequest.add(indexRequest);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">BulkResponse</span> <span class="variable">bulk</span> <span class="operator">=</span> restHighLevelClient.bulk(bulkRequest, ElasticSearchConfig.COMMON_OPTIONS);</span><br><span class="line">        <span class="comment">// 处理响应结果</span></span><br><span class="line">        <span class="comment">// todo 如果批量错误</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">b</span> <span class="operator">=</span> bulk.hasFailures();</span><br><span class="line">        List&lt;String&gt; collect = Arrays.stream(bulk.getItems()).map(item -&gt; &#123;</span><br><span class="line">            <span class="keyword">return</span> item.getId();</span><br><span class="line">        &#125;).collect(Collectors.toList());</span><br><span class="line">        log.error(<span class="string">&quot;商品上架完成：&#123;&#125;&quot;</span>, collect);</span><br><span class="line">        <span class="keyword">return</span> b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>EsConstant 常量</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EsConstant</span> &#123;</span><br><span class="line">    <span class="comment">// sku数据在ES中的索引</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">PRODUCT_INDEX</span> <span class="operator">=</span> <span class="string">&quot;product&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>增加Product 上架异常错误编码</p>
<p> BizCodeEnume</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">BizCodeEnume</span> &#123;</span><br><span class="line">    UNKNOW_EXCEPTION(<span class="number">10000</span>, <span class="string">&quot;系统未知异常&quot;</span>),</span><br><span class="line">    VAILD_EXCEPTION(<span class="number">10001</span>, <span class="string">&quot;参数格式校验失败&quot;</span>),</span><br><span class="line">    PRODUCT_UP_EXCEPTION(<span class="number">11000</span>, <span class="string">&quot;商品上架异常&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> code;</span><br><span class="line">    <span class="keyword">private</span> String msg;</span><br><span class="line"></span><br><span class="line">    BizCodeEnume(<span class="type">int</span> code, String msg) &#123;</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">        <span class="built_in">this</span>.msg = msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCode</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getMsg</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> msg;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在resource 下新建 product-mapping.txt，保存新建索引内容</p>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">PUT product</span><br><span class="line">&#123;</span><br><span class="line">  &quot;mappings&quot;: &#123;</span><br><span class="line">    &quot;properties&quot;: &#123;</span><br><span class="line">      &quot;skuId&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;long&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;spuId&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;text&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;skuTitle&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;text&quot;,</span><br><span class="line">        &quot;analyzer&quot;: &quot;ik_smart&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;skuPrice&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;keyword&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;skuImg&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;keyword&quot;,</span><br><span class="line">        &quot;index&quot;: false,</span><br><span class="line">        &quot;doc_values&quot;: false</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;saleCount&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;long&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;hasStock&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;boolean&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;hotScore&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;long&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;brandId&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;long&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;catalogId&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;long&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;brandName&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;keyword&quot;,</span><br><span class="line">        &quot;index&quot;: false,</span><br><span class="line">        &quot;doc_values&quot;: false</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;brandImg&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;keyword&quot;,</span><br><span class="line">        &quot;index&quot;: false,</span><br><span class="line">        &quot;doc_values&quot;: false</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;catalogName&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;keyword&quot;,</span><br><span class="line">        &quot;index&quot;: false,</span><br><span class="line">        &quot;doc_values&quot;: false</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;attrs&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;nested&quot;,</span><br><span class="line">        &quot;properties&quot;: &#123;</span><br><span class="line">          &quot;attrId&quot;: &#123;</span><br><span class="line">            &quot;type&quot;: &quot;long&quot;</span><br><span class="line">          &#125;,</span><br><span class="line">          &quot;attrName&quot;: &#123;</span><br><span class="line">            &quot;type&quot;: &quot;keyword&quot;,</span><br><span class="line">            &quot;index&quot;: false,</span><br><span class="line">            &quot;doc_values&quot;: false</span><br><span class="line">          &#125;,</span><br><span class="line">          &quot;attrValue&quot;: &#123;</span><br><span class="line">            &quot;type&quot;: &quot;keyword&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>回到product模块，新建远程调用类</li>
</ol>
<p>SearchFeignService</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@FeignClient(&quot;supermall-elasticsearch&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">SearchFeignService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/search/save/product&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">productStatusUp</span><span class="params">(<span class="meta">@RequestBody</span> List&lt;SkuEsModel&gt; skuEsModels)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>修改上架逻辑</li>
</ol>
<p>SpuInfoServiceImpl</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">SearchFeignService searchFeignService;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">up</span><span class="params">(Long spuId)</span> &#123;</span><br><span class="line">    <span class="comment">// 组装需要数据</span></span><br><span class="line">    <span class="comment">// 查出当前spuId对应的所有sku信息,品牌的名称</span></span><br><span class="line">    List&lt;SkuInfoEntity&gt; skus = skuInfoService.getSkusBySpuId(spuId);</span><br><span class="line">    List&lt;Long&gt; skuIds = skus.stream().map(item -&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> item.getSkuId();</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line">    <span class="comment">//  attrs 查询当前sku的所有可以被用来检索的规格属性</span></span><br><span class="line">    List&lt;ProductAttrValueEntity&gt; baseAttrs = attrValueService.baseAttrlistforspu(spuId);</span><br><span class="line">    List&lt;Long&gt; attrIds = baseAttrs.stream().map(attr -&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> attr.getAttrId();</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line">    List&lt;Long&gt; searchAttrIds = attrService.selectSearchAttrs(attrIds);</span><br><span class="line">    Set&lt;Long&gt; idSet = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;(searchAttrIds);</span><br><span class="line">    <span class="comment">// 过滤出不存在的规格属性,构建属性集合</span></span><br><span class="line">    List&lt;SkuEsModel.Attrs&gt; attrs = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    List&lt;SkuEsModel.Attrs&gt; attrsList = baseAttrs.stream().filter(item -&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> idSet.contains(item.getAttrId());</span><br><span class="line">    &#125;).map(item -&gt; &#123;</span><br><span class="line">        SkuEsModel.<span class="type">Attrs</span> <span class="variable">attrs1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SkuEsModel</span>.Attrs();</span><br><span class="line">        BeanUtils.copyProperties(item, attrs1);</span><br><span class="line">        <span class="keyword">return</span> attrs1;</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">    <span class="comment">//  1.发送远程调用，库存系统查询是否有库存</span></span><br><span class="line">    Map&lt;Long, Boolean&gt; stockMap = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        R&lt;List&lt;SkuHasStockVo&gt;&gt; skusHasStock = wareFeignService.getSkusHasStock(skuIds);</span><br><span class="line">        stockMap = skusHasStock.getData().stream().collect(Collectors.toMap(SkuHasStockVo::getSkuId</span><br><span class="line">                , item -&gt; item.getHasStock()));</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        log.error(<span class="string">&quot;库存服务查询异常：原因&#123;&#125;&quot;</span>,e);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 封装每个sku的信息</span></span><br><span class="line">    Map&lt;Long, Boolean&gt; finalStockMap = stockMap;</span><br><span class="line">    List&lt;SkuEsModel&gt; skuEsModels = skus.stream().map(sku -&gt; &#123;</span><br><span class="line">        <span class="type">SkuEsModel</span> <span class="variable">skuEsModel</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SkuEsModel</span>();</span><br><span class="line">        BeanUtils.copyProperties(sku, skuEsModel);</span><br><span class="line">        <span class="comment">// skuPrice,skuImg</span></span><br><span class="line">        skuEsModel.setSkuPrice(sku.getPrice());</span><br><span class="line">        skuEsModel.setSkuImg(sku.getSkuDefaultImg());</span><br><span class="line">        <span class="comment">// hasStock,hotScore</span></span><br><span class="line">        <span class="comment">// 判断是否有库存,然后设置库存信息</span></span><br><span class="line">        <span class="keyword">if</span> (finalStockMap == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 如果库存服务异常，则默认为有库存 todo</span></span><br><span class="line">            skuEsModel.setHasStock(<span class="literal">true</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            skuEsModel.setHasStock(finalStockMap.get(sku.getSkuId()));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// todo 2.热度评分,暂时定为零</span></span><br><span class="line">        skuEsModel.setHotScore(<span class="number">0L</span>);</span><br><span class="line">        <span class="comment">// 3.查询品牌信息</span></span><br><span class="line">        <span class="comment">// brandName,brandImg</span></span><br><span class="line">        <span class="type">BrandEntity</span> <span class="variable">brandEntity</span> <span class="operator">=</span> brandService.getById(skuEsModel.getBrandId());</span><br><span class="line">        skuEsModel.setBrandName(brandEntity.getName());</span><br><span class="line">        skuEsModel.setBrandImg(brandEntity.getLogo());</span><br><span class="line">        <span class="comment">// catalogName</span></span><br><span class="line">        <span class="comment">// 4.查询分类信息</span></span><br><span class="line">        <span class="type">CategoryEntity</span> <span class="variable">categoryEntity</span> <span class="operator">=</span> categoryService.getById(skuEsModel.getCatalogId());</span><br><span class="line">        skuEsModel.setCatalogName(categoryEntity.getName());</span><br><span class="line">        <span class="comment">// 设置检索属性</span></span><br><span class="line">        skuEsModel.setAttrs(attrsList);</span><br><span class="line">        <span class="keyword">return</span> skuEsModel;</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line">    <span class="comment">// todo 将数据发送给es进行保存;</span></span><br><span class="line">    <span class="type">R</span> <span class="variable">r</span> <span class="operator">=</span> searchFeignService.productStatusUp(skuEsModels);</span><br><span class="line">    <span class="keyword">if</span> (r.getCode()==<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">// 远程调用成功</span></span><br><span class="line">        <span class="comment">// 修改当前Spu的上架状态</span></span><br><span class="line">        baseMapper.updateSpuStatus(spuId, ProductConstant.StatusEnum.SPU_UP.getCode());</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">// 调用失败</span></span><br><span class="line">        <span class="comment">// todo 重复调用，接口的幂等</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>SpuInfoDao</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">updateSpuStatus</span><span class="params">(<span class="meta">@Param(&quot;spuId&quot;)</span> Long spuId, <span class="meta">@Param(&quot;code&quot;)</span> <span class="type">int</span> code)</span>;</span><br></pre></td></tr></table></figure>

<p>SpuInfoDao.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateSpuStatus&quot;</span>&gt;</span></span><br><span class="line">    UPDATE pms_spu_info set public_status=#&#123;code&#125;,update_time = NOW() where id = #&#123;spuId&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h4 id="上架接口调试-amp-feign源码"><a href="#上架接口调试-amp-feign源码" class="headerlink" title="上架接口调试&amp;feign源码"></a>上架接口调试&amp;feign源码</h4><ol>
<li>WareSkuServiceImpl 修改 getSkusHasStock 方法</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> List&lt;SkuHasStockVo&gt; <span class="title function_">getSkusHasStock</span><span class="params">(List&lt;Long&gt; skuIds)</span> &#123;</span><br><span class="line">    List&lt;SkuHasStockVo&gt; result = skuIds.stream().map(item -&gt; &#123;</span><br><span class="line">        <span class="type">SkuHasStockVo</span> <span class="variable">vo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SkuHasStockVo</span>();</span><br><span class="line">        <span class="comment">// 查询当前sku的总库存量</span></span><br><span class="line">        <span class="comment">// select sum(stock-stock_locked) from `wms_ware_sku` where sku_id = 1</span></span><br><span class="line">        <span class="type">Long</span> <span class="variable">count</span> <span class="operator">=</span> baseMapper.getSkuStock(item);</span><br><span class="line">        vo.setSkuId(item);</span><br><span class="line">        vo.setHasStock(count == <span class="literal">null</span> ? <span class="literal">false</span> : count &gt; <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> vo;</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>WareSkuDao</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Long <span class="title function_">getSkuStock</span><span class="params">(Long item)</span>;</span><br></pre></td></tr></table></figure>

<p>WareFeignService</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@FeignClient(&quot;supermall-ware&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">WareFeignService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 1.R设计的时候可以加上泛型</span></span><br><span class="line"><span class="comment">     * 2.直接返回对应的类型</span></span><br><span class="line"><span class="comment">     * 3.自己封装解析结果</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> skuIds</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/ware/waresku/hasstock&quot;)</span></span><br><span class="line">    List&lt;SkuHasStockVo&gt; <span class="title function_">getSkusHasStock</span><span class="params">(<span class="meta">@RequestBody</span> List&lt;Long&gt; skuIds)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>WareSkuController</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/hasstock&quot;)</span></span><br><span class="line"><span class="keyword">public</span> List&lt;SkuHasStockVo&gt; <span class="title function_">getSkusHasStock</span><span class="params">(<span class="meta">@RequestBody</span> List&lt;Long&gt; skuIds)</span> &#123;</span><br><span class="line">    List&lt;SkuHasStockVo&gt; skuHasStockVos = wareSkuService.getSkusHasStock(skuIds);</span><br><span class="line">    <span class="keyword">return</span> skuHasStockVos;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="抽取响应结果-amp-上架测试完成"><a href="#抽取响应结果-amp-上架测试完成" class="headerlink" title="抽取响应结果&amp;上架测试完成"></a>抽取响应结果&amp;上架测试完成</h4><ol>
<li>R继承了hashMap 在里面定义泛型成员变量，没有效果？</li>
</ol>
<p>R.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">R</span> <span class="keyword">extends</span> <span class="title class_">HashMap</span>&lt;String, Object&gt; &#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> R <span class="title function_">setData</span><span class="params">(Object data)</span> &#123;</span><br><span class="line">      put(<span class="string">&quot;data&quot;</span>, data);</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> &lt;T&gt; T <span class="title function_">getData</span><span class="params">(TypeReference&lt;T&gt; tTypeReference)</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">this</span>.getData(<span class="string">&quot;data&quot;</span>, tTypeReference);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> &lt;T&gt; T <span class="title function_">getData</span><span class="params">(String key, TypeReference&lt;T&gt; tTypeReference)</span> &#123;</span><br><span class="line">      <span class="type">Object</span> <span class="variable">data</span> <span class="operator">=</span> <span class="built_in">this</span>.get(key);</span><br><span class="line">      <span class="type">String</span> <span class="variable">toJSONString</span> <span class="operator">=</span> JSON.toJSONString(data);</span><br><span class="line">      <span class="type">T</span> <span class="variable">t</span> <span class="operator">=</span> JSON.parseObject(toJSONString, tTypeReference);</span><br><span class="line">      <span class="keyword">return</span> t;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="title function_">R</span><span class="params">()</span> &#123;</span><br><span class="line">      put(<span class="string">&quot;code&quot;</span>, <span class="number">0</span>);</span><br><span class="line">      put(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;success&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> R <span class="title function_">error</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> error(HttpStatus.SC_INTERNAL_SERVER_ERROR, <span class="string">&quot;未知异常，请联系管理员&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> R <span class="title function_">error</span><span class="params">(String msg)</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> error(HttpStatus.SC_INTERNAL_SERVER_ERROR, msg);</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> R <span class="title function_">error</span><span class="params">(<span class="type">int</span> code, String msg)</span> &#123;</span><br><span class="line">      <span class="type">R</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">R</span>();</span><br><span class="line">      r.put(<span class="string">&quot;code&quot;</span>, code);</span><br><span class="line">      r.put(<span class="string">&quot;msg&quot;</span>, msg);</span><br><span class="line">      <span class="keyword">return</span> r;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> R <span class="title function_">ok</span><span class="params">(String msg)</span> &#123;</span><br><span class="line">      <span class="type">R</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">R</span>();</span><br><span class="line">      r.put(<span class="string">&quot;msg&quot;</span>, msg);</span><br><span class="line">      <span class="keyword">return</span> r;</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> R <span class="title function_">ok</span><span class="params">(Map&lt;String, Object&gt; map)</span> &#123;</span><br><span class="line">      <span class="type">R</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">R</span>();</span><br><span class="line">      r.putAll(map);</span><br><span class="line">      <span class="keyword">return</span> r;</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> R <span class="title function_">ok</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">R</span>();</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> R <span class="title function_">put</span><span class="params">(String key, Object value)</span> &#123;</span><br><span class="line">      <span class="built_in">super</span>.put(key, value);</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> Integer <span class="title function_">getCode</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="type">Integer</span> <span class="variable">code</span> <span class="operator">=</span> (Integer) <span class="built_in">this</span>.get(<span class="string">&quot;code&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> code;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用alibaba.json 快速转换，SpuInfoServiceImpl中的up</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">TypeReference&lt;List&lt;SkuHasStockVo&gt;&gt; typeReference = <span class="keyword">new</span> <span class="title class_">TypeReference</span>&lt;List&lt;SkuHasStockVo&gt;&gt;()&#123;&#125;;       skuHasStocks.getData(typeReference).stream().collect(Collectors.toMap(SkuHasStockVo::getSkuId, SkuHasStockVo::getHasStock));</span><br></pre></td></tr></table></figure>



<h3 id="首页"><a href="#首页" class="headerlink" title="首页"></a>首页</h3><h4 id="整合thymeleaf渲染首页"><a href="#整合thymeleaf渲染首页" class="headerlink" title="整合thymeleaf渲染首页"></a>整合thymeleaf渲染首页</h4><p>动静分离架构，网关更好的做鉴权</p>
<p>动静分离：</p>
<p>静：图片，js，css等静态资源（以实际文件存在的方式）</p>
<p>动：服务器需要处理的请求</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://center-sept-image.oss-cn-shenzhen.aliyuncs.com/img/image-20201222150442692.png"
                      alt="image-20201222150442692"
                ></p>
<ol>
<li>在Product导入thymeleaf 模板引擎</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--   thymeleaf 依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>导入商城静态资源到resouce&#x2F;static下，页面拷贝到template文件夹下；要看默认配置，查看WebMvcAutoConfiguration.java类。</li>
<li>在配置文件加入以下配置，暂时不是用缓存，让页面实时更新。</li>
</ol>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">thymeleaf:</span></span><br><span class="line">    <span class="attr">cache:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<ol start="4">
<li>创建一个web包，要来处理页面请求</li>
</ol>
<h4 id="整合dev-tools渲染一级分类数据"><a href="#整合dev-tools渲染一级分类数据" class="headerlink" title="整合dev-tools渲染一级分类数据"></a>整合dev-tools渲染一级分类数据</h4><ol>
<li>创建首页请求相应类IndexController</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IndexController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    CategoryService categoryService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&#123;&quot;/&quot;, &quot;index.html&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">indexPage</span><span class="params">(Model model)</span> &#123;</span><br><span class="line">        <span class="comment">//获取一级分类</span></span><br><span class="line">        List&lt;CategoryEntity&gt; list = categoryService.getLevelFirstCategorys();</span><br><span class="line">        model.addAttribute(<span class="string">&quot;categorys&quot;</span>, list);</span><br><span class="line">        <span class="comment">// 视图解析器自动拼接前后缀</span></span><br><span class="line">        <span class="comment">// classpath:templates/   + index + .html</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>新建查询一级分类方法</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> List&lt;CategoryEntity&gt; <span class="title function_">getLevelFirstCategorys</span><span class="params">()</span> &#123;</span><br><span class="line">    List&lt;CategoryEntity&gt; list = baseMapper.selectList(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;CategoryEntity&gt;().eq(<span class="string">&quot;parent_cid&quot;</span>, <span class="number">0</span>));</span><br><span class="line">    <span class="keyword">return</span> list;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>声明 thymeleaf 语法到html中</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="4">
<li>使用thymeleaf语法渲染一级分类</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;header_main_left&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">th:each</span>=<span class="string">&quot; category : $&#123;categorys&#125;&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;header_main_left_a&quot;</span>  <span class="attr">th:attr</span>=<span class="string">&quot;ctg-data=$&#123;category.catId&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">b</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;category.name&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="5">
<li>修改页面，无需重启服务器实时更新页面</li>
</ol>
<p>5.1 需要引入dev-tool 依赖，product pom 中加入以下依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--   dev-tool--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--   true 为开启 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>5.2 页面修改完，build项目，就相当于发布完成。</p>
<h4 id="渲染二级和三级分类数据"><a href="#渲染二级和三级分类数据" class="headerlink" title="渲染二级和三级分类数据"></a>渲染二级和三级分类数据</h4><ol>
<li>由于菜单渲染是根据catalogLoader.js这个文件请求 index&#x2F;json&#x2F;catalog.json来获取resouce下的静态文件catalog.json中的数据的。所以我们需要读取数据库中配置的动态数据作为渲染数据。</li>
<li>在后端做二三级渲染</li>
</ol>
<p>Catelog2Vo</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Catelog2Vo</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String catalog1Id;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Object&gt; catalog3List;</span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@NoArgsConstructor</span></span><br><span class="line">    <span class="meta">@AllArgsConstructor</span></span><br><span class="line">    <span class="meta">@Data</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Catelog3Vo</span>&#123;</span><br><span class="line">        <span class="keyword">private</span> String catalog2Id;</span><br><span class="line">        <span class="keyword">private</span> String id;</span><br><span class="line">        <span class="keyword">private</span> String name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>CategoryServiceImpl</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Map&lt;String, List&lt;Catelog2Vo&gt;&gt; <span class="title function_">getCatalogJson</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 查出所有一级分类</span></span><br><span class="line">    List&lt;CategoryEntity&gt; levelFirstCategorys = getLevelFirstCategorys();</span><br><span class="line">    Map&lt;String, List&lt;Catelog2Vo&gt;&gt; collect = levelFirstCategorys.stream().collect(Collectors.toMap(k -&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> k.getCatId().toString();</span><br><span class="line">    &#125;, lv1 -&gt; &#123;</span><br><span class="line">        <span class="comment">// 每一个的一级分类，查到这个一级分类的二级分类</span></span><br><span class="line">        List&lt;CategoryEntity&gt; list2 = baseMapper.selectList(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;CategoryEntity&gt;().eq(<span class="string">&quot;parent_cid&quot;</span>,</span><br><span class="line">                lv1.getCatId()));</span><br><span class="line">        List&lt;Catelog2Vo&gt; collect2 = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (list2 != <span class="literal">null</span>) &#123;</span><br><span class="line">            collect2 = list2.stream().map(lv2 -&gt; &#123;</span><br><span class="line">                <span class="type">Catelog2Vo</span> <span class="variable">catelog2Vo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Catelog2Vo</span>(lv1.getCatId().toString(), <span class="literal">null</span>, lv2.getCatId().toString()</span><br><span class="line">                        , lv2.getName());</span><br><span class="line">                List&lt;CategoryEntity&gt; list3 = baseMapper.selectList(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;CategoryEntity&gt;().eq(</span><br><span class="line">                        <span class="string">&quot;parent_cid&quot;</span>,</span><br><span class="line">                        lv2.getCatId()));</span><br><span class="line">                <span class="keyword">if</span> (list3 != <span class="literal">null</span>) &#123;</span><br><span class="line">                    List&lt;Catelog2Vo.Catelog3Vo&gt; collect3 = list3.stream().map(lv3 -&gt; &#123;</span><br><span class="line">                        Catelog2Vo.<span class="type">Catelog3Vo</span> <span class="variable">catelog3Vo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Catelog2Vo</span>.Catelog3Vo(lv2.getCatId().toString(),</span><br><span class="line">                                lv3.getCatId().toString(), lv3.getName());</span><br><span class="line">                        <span class="keyword">return</span> catelog3Vo;</span><br><span class="line">                    &#125;).collect(Collectors.toList());</span><br><span class="line">                    catelog2Vo.setCatalog3List(collect3);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> catelog2Vo;</span><br><span class="line">            &#125;).collect(Collectors.toList());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> collect2;</span><br><span class="line">    &#125;));</span><br><span class="line">    <span class="keyword">return</span> collect;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>IndexController</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/index/catalog.json&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Map&lt;String, List&lt;Catelog2Vo&gt;&gt; <span class="title function_">getCatalogJson</span><span class="params">()</span> &#123;</span><br><span class="line">    Map&lt;String, List&lt;Catelog2Vo&gt;&gt; result = categoryService.getCatalogJson();</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>修改catalogLoader.js 请求路径</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$.getJSON(&quot;index/catalog.json&quot;,function (data) </span><br></pre></td></tr></table></figure>



<h3 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h3><h4 id="搭建域名访问环境一（反向代理配置）"><a href="#搭建域名访问环境一（反向代理配置）" class="headerlink" title="搭建域名访问环境一（反向代理配置）"></a>搭建域名访问环境一（反向代理配置）</h4><h5 id="正向代理与反向代理"><a href="#正向代理与反向代理" class="headerlink" title="正向代理与反向代理"></a>正向代理与反向代理</h5><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://center-sept-image.oss-cn-shenzhen.aliyuncs.com/img/image-20201223095121108.png"
                      alt="image-20201223095121108"
                ></p>
<ol>
<li>使用SwitchHosts直接可以修改hosts配置文件，并提供添加修改方法策略。</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">192.168.72.130 supermall.com</span><br></pre></td></tr></table></figure>

<ol>
<li>启动虚拟机nginx</li>
</ol>
<p>2.1 在挂载的conf.d文件夹下创建一个配置conf，如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#http服务，一个server可以配置多个location</span><br><span class="line">server &#123; </span><br><span class="line">        listen       80; #服务监听端口</span><br><span class="line">        server_name  supermall.com; #主机名、域名</span><br><span class="line">    </span><br><span class="line">        #charset koi8-r;</span><br><span class="line">        #access_log  /var/log/nginx/host.access.log  main;</span><br><span class="line">    </span><br><span class="line">        location / &#123;</span><br><span class="line">            proxy_pass http://&#123;这里为你的主机的网关地址加Product模块端口号&#125;;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        #error_page  404              /404.html;</span><br><span class="line">    </span><br><span class="line">        # 将500 502 503 504的错误页面重定向到 /50x.html</span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html &#123; #匹配error_page指定的页面路径</span><br><span class="line">            root   /usr/share/nginx/html; #页面存放的目录</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        # proxy the PHP scripts to Apache listening on 127.0.0.1:80</span><br><span class="line">        #</span><br><span class="line">        #location ~ \.php$ &#123;</span><br><span class="line">        #    proxy_pass   http://127.0.0.1;</span><br><span class="line">        #&#125;</span><br><span class="line">    </span><br><span class="line">        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span><br><span class="line">        #</span><br><span class="line">        #location ~ \.php$ &#123;</span><br><span class="line">        #    root           html;</span><br><span class="line">        #    fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">        #    fastcgi_index  index.php;</span><br><span class="line">        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span><br><span class="line">        #    include        fastcgi_params;</span><br><span class="line">        #&#125;</span><br><span class="line">    </span><br><span class="line">        # deny access to .htaccess files, if Apache&#x27;s document root</span><br><span class="line">        # concurs with nginx&#x27;s one</span><br><span class="line">        #</span><br><span class="line">        #location ~ /\.ht &#123;</span><br><span class="line">        #    deny  all;</span><br><span class="line">        #&#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>2.2 在你的主机启动项目，访问在hosts中配置好的映射域名进行访问，我的是supermall.com</p>
<h4 id="搭建域名访问环境二（负载均衡到网关）"><a href="#搭建域名访问环境二（负载均衡到网关）" class="headerlink" title="搭建域名访问环境二（负载均衡到网关）"></a>搭建域名访问环境二（负载均衡到网关）</h4><ol>
<li>新增负载均衡 upstream</li>
</ol>
<p>1.1 在nginx.conf 中加入以下负载均衡配置：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">upstream supermall &#123;</span><br><span class="line">	server 192.168.72.1:88;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>1.2 在supermall.conf 中替换内容：</p>
<p>注：因为nginx会对请求做丢弃处理，所以为了让请求头中host属性不会被丢弃而造成请求达到网关服务时候匹配不到服务，所以我们需要加上proxy_set header Host $host</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">    proxy_set header Host $host;</span><br><span class="line">    proxy_pass http://supermall;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>配置网关服务，加入页面请求断言</li>
</ol>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">id:</span> <span class="string">super_mall_host_route</span></span><br><span class="line">  <span class="attr">uri:</span> <span class="string">lb://supermall-product</span></span><br><span class="line">  <span class="attr">predicates:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Host=**.supermall.com,supermall.com</span></span><br></pre></td></tr></table></figure>



<h2 id="性能压测"><a href="#性能压测" class="headerlink" title="性能压测"></a>性能压测</h2><h3 id="压力测试"><a href="#压力测试" class="headerlink" title="压力测试"></a>压力测试</h3><h4 id="基本介绍"><a href="#基本介绍" class="headerlink" title="基本介绍"></a>基本介绍</h4><p>压力测试考察当前软硬件环境下系统所能承受的最大负荷并帮助找出系统瓶颈所在。压测都是为了系统在线上的处理能力和稳定性维持在一个标准范围内，做到心中有数。</p>
<p>使用压力测试，我们有希望找到很多种用其他测试方法更难发现的错误。有两种错误类型是：</p>
<p><strong>内存泄漏，并发与同步</strong></p>
<p>有效的压力测试系统将应用以下这些关键条件：<strong>重复，并发，量级，随机变化。</strong></p>
<ol>
<li><h5 id="性能指标"><a href="#性能指标" class="headerlink" title="性能指标"></a>性能指标</h5></li>
</ol>
<p>响应时间（Response Time:RT）</p>
<p>​	响应时间指用户从客户端发起一个请求开始，到客户端接收到从服务器端返回的响应结束，整个过程所耗费的时间。</p>
<p>HPS（Hits Per Second）</p>
<p>​	每秒点击次数，单位是次&#x2F;秒</p>
<p>TPS（Transaction per Second）</p>
<p>​	系统每秒处理交易数，单位是笔&#x2F;秒</p>
<p>QPS（Query per Second）</p>
<p>​	系统每秒处理查询次数，单位是次&#x2F;秒</p>
<p>​	对于互联网业务中，如果某些业务有且仅有一个请求连接，那么TPS&#x3D;QPS&#x3D;HPS，一般情况下用TPS来衡量整个业务流程，用QPS来衡量接口查询次数，用HPS来表示对服务器单词请求次数。</p>
<p>无论是TPS，QPS，HPS，此指标是衡量系统处理能力非常重要的指标，越大越好，根据经验，一般情况：</p>
<p>​	金融行业：1000TPS~50000TPS，不包括互联网化的活动</p>
<p>​	保险行业：100TPS~100000TPS，不包括互联网化的活动</p>
<p>​	制造行业：10TPS~5000TPS</p>
<p>​	互联网电子商务：10000TPS~1000000TPS</p>
<p>​	互联网中型网站：1000TPS~50000TPS</p>
<p>​	互联网小型网站：500TPS~10000TPS</p>
<p>最大响应时间（Max Response Time）：指用户发出请求或者指令到系统做出反应（响应）的最大时间。</p>
<p>最少响应时间（Mininum Response Time）：指用户发出请求或者指令到系统做出反应（响应）的最少时间。</p>
<p>90%响应时间（90% Response Time）：是指所有用户的响应时间进行排序，第90%的响应时间。</p>
<p>从外部看，性能测试主要关注如下三个指标：</p>
<p>​	吞吐量：每秒钟系统能够处理的请求数，任务数。</p>
<p>​	响应时间：服务处理一个请求或一个任务的耗时。</p>
<p>​	错误率：一批请求中结果出错的请求所占比例。</p>
<h4 id="Apache-JMeter安装使用"><a href="#Apache-JMeter安装使用" class="headerlink" title="Apache JMeter安装使用"></a>Apache JMeter安装使用</h4><ol>
<li>JMeter 安装</li>
</ol>
<p><a class="link"   href="https://jmeter.apache.org/download_jmeter.cgi" >https://jmeter.apache.org/download_jmeter.cgi<i class="fas fa-external-link-alt"></i></a></p>
<p>下载对应的压缩包，解压运行jmeter.bat 即可</p>
<ol start="2">
<li><p>JMeter的使用（多用用）</p>
</li>
<li><p>压测调优</p>
</li>
</ol>
<p>3.1 加大JVM内存</p>
<p>3.2 加大tomcat的最大线程数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server.tomcat.max-threads=200</span><br></pre></td></tr></table></figure>

<h4 id="JMeter在windows下地址占用bug解决"><a href="#JMeter在windows下地址占用bug解决" class="headerlink" title="JMeter在windows下地址占用bug解决"></a>JMeter在windows下地址占用bug解决</h4><h5 id="JMeter-Address-Already-in-user-错误解决"><a href="#JMeter-Address-Already-in-user-错误解决" class="headerlink" title="JMeter Address Already in user 错误解决"></a>JMeter Address Already in user 错误解决</h5><p>windows本身提供的端口访问机制的问题。</p>
<p>Windows 提供给TCP&#x2F;IP链接的端口为1024-5000，并且要四分钟来循环回收他们。就导致我们在短时间内跑大量的请求时将端口占满了。</p>
<p>解决方案：</p>
<ol>
<li>cmd中，用regedit命令打开注册表</li>
<li>在HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Service\Tcpip\Parameters 下，<ol>
<li>右击parameters，添加一个新的DWORD，名字为MaxUserPort</li>
<li>然后点击MaxUserPort，输入数值数据为65534，基数选择十进制（如果是分布式运行的话，控制机器和负载机器都需要这样操作）</li>
</ol>
</li>
<li>修改配置完毕后重启机器</li>
<li>按照以上步骤再入TCPTimedWaitDelay：30</li>
</ol>
<h3 id="性能监控"><a href="#性能监控" class="headerlink" title="性能监控"></a>性能监控</h3><h4 id="堆内存与垃圾回收"><a href="#堆内存与垃圾回收" class="headerlink" title="堆内存与垃圾回收"></a>堆内存与垃圾回收</h4><p>影响性能考虑点包括：</p>
<p>​	数据库，应用程序，中间件（tomcat，nginx）,网络和操作系统等方面</p>
<p>首先考虑自己的应用属于 <strong>CPU密集型</strong> 还是 <strong>IO密集型</strong></p>
<h4 id="jconsole与jvisualvm"><a href="#jconsole与jvisualvm" class="headerlink" title="jconsole与jvisualvm"></a>jconsole与jvisualvm</h4><p>​	Jdk的两个小工具jconsole，jvisualvm（升级版jconsole）;通过命令行启动，可监控本地和远程应用。远程应用需要配置。</p>
<p>在windows下 cmd 下，执行命令 jconsole 或者 jvisualvm 就可以打开。</p>
<h5 id="jvisualvm能干什么？"><a href="#jvisualvm能干什么？" class="headerlink" title="jvisualvm能干什么？"></a>jvisualvm能干什么？</h5><p>监控内存泄露，跟踪垃圾回收，执行时内存，cpu分析，线程分析</p>
<p>运行：正在运行</p>
<p>休眠：sleep</p>
<p>等待：wait</p>
<p>驻留：线程池里面的空闲线程</p>
<p>监视：阻塞的线程，正在等待锁</p>
<h5 id="安装插件方便查看GC"><a href="#安装插件方便查看GC" class="headerlink" title="安装插件方便查看GC"></a>安装插件方便查看GC</h5><ol>
<li>启动jvisualvm，工具-&gt;插件</li>
<li>如果503错误解决：</li>
</ol>
<p>2.1 打开网址<a class="link"   href="https://visualvm.github.io/pluginscenters.html" >https://visualvm.github.io/pluginscenters.html<i class="fas fa-external-link-alt"></i></a></p>
<p>2.2 cmd 查看自己的的jdk版本，找到对应的版本，然后复制网页上的Catalog URL</p>
<p>2.3 然后粘贴到更新插件中心的URL中，最后可以使用插件中心了，下载Vusual GC 插件可以查看动态的GC。</p>
<h3 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h3><h4 id="中间件对性能的影响"><a href="#中间件对性能的影响" class="headerlink" title="中间件对性能的影响"></a>中间件对性能的影响</h4><ol>
<li><p>使用JMeter，50线程不断请求nginx，然后使用docker stats 命令查看nginx容器的状态。</p>
</li>
<li><p>压测网关，使用JvisualVM查看cpu和GC状态</p>
</li>
<li><p>使用一个普通的业务模块压测，使用JvisualVM查看cpu和GC状态。</p>
</li>
<li><p>网关加简单业务服务，使用JvisualVM查看cpu和GC状态。</p>
</li>
</ol>
<table>
<thead>
<tr>
<th>压测内容</th>
<th>压测线程数</th>
<th>吞吐量&#x2F;s</th>
<th>90%响应时间</th>
<th>99%响应时间</th>
</tr>
</thead>
<tbody><tr>
<td>Nginx</td>
<td>50</td>
<td>5152</td>
<td>11</td>
<td>16</td>
</tr>
<tr>
<td>Gateway</td>
<td>50</td>
<td>4986</td>
<td>1</td>
<td>4</td>
</tr>
<tr>
<td>简单服务</td>
<td>50</td>
<td>5247</td>
<td>1</td>
<td>3</td>
</tr>
<tr>
<td>首页一级菜单渲染（thymeleaf缓存）</td>
<td>50</td>
<td>290</td>
<td></td>
<td></td>
</tr>
<tr>
<td>首页一级菜单渲染</td>
<td>50</td>
<td>515</td>
<td>51</td>
<td>79</td>
</tr>
<tr>
<td>首页一级菜单渲染（thymeleaf缓存+db索引+取消日志）</td>
<td>50</td>
<td>270</td>
<td>267</td>
<td>365</td>
</tr>
<tr>
<td>三级分类数据获取</td>
<td>50</td>
<td>15</td>
<td>3690</td>
<td>4007</td>
</tr>
<tr>
<td>首页全量数据获取</td>
<td>50</td>
<td>7 (静态资源)</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Nginx+Gateway</td>
<td>50</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Gateway+简单服务</td>
<td>50</td>
<td>2675</td>
<td>5</td>
<td>12</td>
</tr>
<tr>
<td>全链路</td>
<td>50</td>
<td>1225</td>
<td>34</td>
<td>45</td>
</tr>
</tbody></table>
<p><strong>结论：中间件越多，性能损耗越大，大多都损失在网络交互。</strong></p>
<p>优化：</p>
<p>SQL耗时越小越好，一般情况下微秒级别。</p>
<p>命中率越高越好，一般情况下不能低于95%</p>
<p>锁等待次数越低越好，等待时间越短越好。</p>
<h4 id="简单优化吞吐量测试"><a href="#简单优化吞吐量测试" class="headerlink" title="简单优化吞吐量测试"></a>简单优化吞吐量测试</h4><ol>
<li><p>压测首页一级菜单</p>
</li>
<li><p>直接压测三级菜单</p>
</li>
<li><p>压测首页全量数据（图片，js等静态数据）</p>
</li>
</ol>
<p>JMeter http取样器中选择高级，勾选”从HTML文件中获取所有的资源”</p>
<ol start="4">
<li>首页一级菜单渲染（thymeleaf缓存+db索引+取消日志）</li>
<li>首页一级菜单渲染（thymeleaf缓存）</li>
<li>优化之后的全量数据</li>
</ol>
<h4 id="nginx动静分离"><a href="#nginx动静分离" class="headerlink" title="nginx动静分离"></a>nginx动静分离</h4><ol>
<li>将所有项目的静态资源都nginx里面</li>
<li>指定一个规则：&#x2F;static&#x2F;***下的所有请求都有nginx直接返回</li>
<li>在nginx的html下创建static文件夹专门存放静态资源</li>
<li>然后修改index.html中的所有静态资源路径，在路径前加上static或&#x2F;static</li>
</ol>
<p>href&#x3D;” 替换href&#x3D;”&#x2F;static&#x2F;</p>
<script src=" 替换 <script src="/static/

<img  src=" 替换 <img 
                     lazyload
                     src="/images/loading.svg"
                     data-src="/static/

5. nginx的商城配置文件加入以下配置：

<figure class="
                     highlight plaintext"
                ><table><tr><td class="code"><pre><span class="line"> location /static/ &#123;</span><br><span class="line">     root /usr/share/nginx/html;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

6. JS 文件的路径也要重新配置

#### 模拟线上应用内存崩溃宕机情况

GC时间的占用是硬指标

JVM调优，合理分配内容

#### 优化三级分类数据获取

1. 将数据库的多次查询变为一次

   

## 缓存

### 缓存使用

#### 本地缓存与分布式缓存

​	为了系统性能的提升，我们一般都会将部分数据放入缓存中，加速访问。而db承担数据落盘工作。

哪些数据适合放入缓存？

1. 即时性、数据一致性要求不高的。
2. 访问量大且更新频率不高的数据（读多，写少）

#### 整合redis测试

1. 引入redis的启动器

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--   整合 redis --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

2. 加入redis的配置信息

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">spring:</span><br><span class="line">  redis:</span><br><span class="line">    host: 192.168.72.130</span><br><span class="line">    port: 6379</span><br></pre></td></tr></table></figure>

3. 引入配置bean

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@Autowired</span><br><span class="line">StringRedisTemplate stringRedisTemplate;</span><br></pre></td></tr></table></figure>

4. 测试bean是否引入

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="meta">@Autowired</span></span><br><span class="line"> StringRedisTemplate stringRedisTemplate;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testStringRedisTemplate</span><span class="params">()</span> &#123;</span><br><span class="line">     ValueOperations&lt;String, String&gt; stringStringValueOperations =</span><br><span class="line">             stringRedisTemplate.opsForValue();</span><br><span class="line">     stringStringValueOperations.set(<span class="string">&quot;hello&quot;</span>, <span class="string">&quot;world&quot;</span> + UUID.randomUUID().toString());</span><br><span class="line">     <span class="type">String</span> <span class="variable">hello</span> <span class="operator">=</span> stringStringValueOperations.get(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">     System.out.println(<span class="string">&quot;保存的数据是：&quot;</span> + hello);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>



#### 改造三级分类业务

1. 修改CategoryServiceImpl类中getCatalogJson方法

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> StringRedisTemplate stringRedisTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Map&lt;String, List&lt;Catelog2Vo&gt;&gt; <span class="title function_">getCatalogJson</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 加入缓存</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">catalogJSON</span> <span class="operator">=</span> stringRedisTemplate.opsForValue().get(<span class="string">&quot;catalogJSON&quot;</span>);</span><br><span class="line">    Map&lt;String, List&lt;Catelog2Vo&gt;&gt; catalogJson;</span><br><span class="line">    <span class="keyword">if</span> (StringUtils.isEmpty(catalogJSON)) &#123;</span><br><span class="line">        <span class="comment">// 缓存中没有</span></span><br><span class="line">        <span class="comment">// 从数据库中取数据</span></span><br><span class="line">        catalogJson = getCatalogJsonFromDb();</span><br><span class="line">        <span class="comment">// 查到的数据转为json对象放到缓存中</span></span><br><span class="line">        stringRedisTemplate.opsForValue().set(<span class="string">&quot;catalogJSON&quot;</span>, JSON.toJSONString(catalogJson));</span><br><span class="line">        <span class="keyword">return</span> catalogJson;</span><br><span class="line">    &#125;</span><br><span class="line">    catalogJson = JSON.parseObject(catalogJSON, <span class="keyword">new</span> <span class="title class_">TypeReference</span>&lt;Map&lt;String, List&lt;Catelog2Vo&gt;&gt;&gt;() &#123;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> catalogJson;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> Map&lt;String, List&lt;Catelog2Vo&gt;&gt; <span class="title function_">getCatalogJsonFromDb</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 一次将所有数据查出来</span></span><br><span class="line">    List&lt;CategoryEntity&gt; all = baseMapper.selectList(<span class="literal">null</span>);</span><br><span class="line">    <span class="comment">// 查出所有一级分类</span></span><br><span class="line">    List&lt;CategoryEntity&gt; levelFirstCategorys = getItem(all, <span class="number">0L</span>);</span><br><span class="line">    Map&lt;String, List&lt;Catelog2Vo&gt;&gt; collect = levelFirstCategorys.stream().collect(Collectors.toMap(k -&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> k.getCatId().toString();</span><br><span class="line">    &#125;, lv1 -&gt; &#123;</span><br><span class="line">        <span class="comment">// 每一个的一级分类，查到这个一级分类的二级分类</span></span><br><span class="line">        List&lt;CategoryEntity&gt; list2 = getItem(all, lv1.getParentCid());</span><br><span class="line">        List&lt;Catelog2Vo&gt; collect2 = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (list2 != <span class="literal">null</span>) &#123;</span><br><span class="line">            collect2 = list2.stream().map(lv2 -&gt; &#123;</span><br><span class="line">                <span class="type">Catelog2Vo</span> <span class="variable">catelog2Vo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Catelog2Vo</span>(lv1.getCatId().toString(), <span class="literal">null</span>, lv2.getCatId().toString()</span><br><span class="line">                        , lv2.getName());</span><br><span class="line">                List&lt;CategoryEntity&gt; list3 = getItem(all, lv2.getParentCid());</span><br><span class="line">                <span class="keyword">if</span> (list3 != <span class="literal">null</span>) &#123;</span><br><span class="line">                    List&lt;Catelog2Vo.Catelog3Vo&gt; collect3 = list3.stream().map(lv3 -&gt; &#123;</span><br><span class="line">                        Catelog2Vo.<span class="type">Catelog3Vo</span> <span class="variable">catelog3Vo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Catelog2Vo</span>.Catelog3Vo(lv2.getCatId().toString(),</span><br><span class="line">                                lv3.getCatId().toString(), lv3.getName());</span><br><span class="line">                        <span class="keyword">return</span> catelog3Vo;</span><br><span class="line">                    &#125;).collect(Collectors.toList());</span><br><span class="line">                    catelog2Vo.setCatalog3List(collect3);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> catelog2Vo;</span><br><span class="line">            &#125;).collect(Collectors.toList());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> collect2;</span><br><span class="line">    &#125;));</span><br><span class="line">    <span class="keyword">return</span> collect;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



#### 压力测试出的内存泄露及解决

使用原本redis 启动器自带的lettuce redis 客户端连接器会造成什么问题?

会产生对外内存溢出：OutOfDirectMemoryError

原因：lettuce的bug导致netty堆外内存溢出 -Xmx300m；netty如果没有指定堆外内存，默认使用-Xmx300m 

解决方案：

1. 可以使用-Dio.netty.maxDirectMemory调大这个最大内存（但是解决不了根本性问题）
2. 升级lettuce客户端版本
3. 切换使用jedis

3.1 去除使用lettuce依赖，加上jedis依赖

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--   整合 redis --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.lettuce<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lettuce-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>redis.clients<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jedis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

redisTemplate 与 lettuce 、jedis 的关系？

lettuce、jedis都是操作redis的底层客户端。Spring 在 RedisAutoConfiguration 中对这两个客户端进行再次封装，生成一个工厂连接类。

#### 缓存击穿、穿透、雪崩

穿透：直接返回null值

雪崩：随机设置过期时间

击穿：只有一个线程进行查库操作，获取锁在进行操作



#### 加锁解决缓存击穿问题

改造获取三级分类方法

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> Map&lt;String, List&lt;Catelog2Vo&gt;&gt; <span class="title function_">getCatalogJson</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 加入缓存</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">catalogJSON</span> <span class="operator">=</span> stringRedisTemplate.opsForValue().get(<span class="string">&quot;catalogJSON&quot;</span>);</span><br><span class="line">    Map&lt;String, List&lt;Catelog2Vo&gt;&gt; catalogJson;</span><br><span class="line">    <span class="keyword">if</span> (StringUtils.isEmpty(catalogJSON)) &#123;</span><br><span class="line">        <span class="comment">// 缓存中没有</span></span><br><span class="line">        <span class="comment">// 从数据库中取数据</span></span><br><span class="line">        catalogJson = getCatalogJsonFromDb();</span><br><span class="line">        <span class="keyword">return</span> catalogJson;</span><br><span class="line">    &#125;</span><br><span class="line">    catalogJson = JSON.parseObject(catalogJSON, <span class="keyword">new</span> <span class="title class_">TypeReference</span>&lt;Map&lt;String, List&lt;Catelog2Vo&gt;&gt;&gt;() &#123;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> catalogJson;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> Map&lt;String, List&lt;Catelog2Vo&gt;&gt; <span class="title function_">getCatalogJsonFromDb</span><span class="params">()</span> &#123;</span><br><span class="line">    Map&lt;String, List&lt;Catelog2Vo&gt;&gt; catalogJson;</span><br><span class="line">    <span class="comment">// 本地进程保证只有一个线程进入查询数据库</span></span><br><span class="line">    <span class="comment">// TODO 分布式接口需要替换成分布式锁</span></span><br><span class="line">    <span class="keyword">synchronized</span> (<span class="built_in">this</span>) &#123;</span><br><span class="line">        <span class="comment">// 进入到查询原子操作,再次执行缓存查询</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">catalogJSON</span> <span class="operator">=</span> stringRedisTemplate.opsForValue().get(<span class="string">&quot;catalogJSON&quot;</span>);</span><br><span class="line">        <span class="comment">// 不为空直接返回</span></span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.isEmpty(catalogJSON)) &#123;</span><br><span class="line">            catalogJson = JSON.parseObject(catalogJSON, <span class="keyword">new</span> <span class="title class_">TypeReference</span>&lt;Map&lt;String, List&lt;Catelog2Vo&gt;&gt;&gt;() &#123;</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="keyword">return</span> catalogJson;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;缓存中不存在三级菜单数据,需要调用db查询&quot;</span>);</span><br><span class="line">        <span class="comment">// 一次将所有数据查出来</span></span><br><span class="line">        List&lt;CategoryEntity&gt; all = baseMapper.selectList(<span class="literal">null</span>);</span><br><span class="line">        <span class="comment">// 查出所有一级分类</span></span><br><span class="line">        List&lt;CategoryEntity&gt; levelFirstCategorys = getItem(all, <span class="number">0L</span>);</span><br><span class="line">        catalogJson = levelFirstCategorys.stream().collect(Collectors.toMap(k -&gt; &#123;</span><br><span class="line">            <span class="keyword">return</span> k.getCatId().toString();</span><br><span class="line">        &#125;, lv1 -&gt; &#123;</span><br><span class="line">            <span class="comment">// 每一个的一级分类，查到这个一级分类的二级分类</span></span><br><span class="line">            List&lt;CategoryEntity&gt; list2 = getItem(all, lv1.getParentCid());</span><br><span class="line">            List&lt;Catelog2Vo&gt; collect2 = <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">if</span> (list2 != <span class="literal">null</span>) &#123;</span><br><span class="line">                collect2 = list2.stream().map(lv2 -&gt; &#123;</span><br><span class="line">                    <span class="type">Catelog2Vo</span> <span class="variable">catelog2Vo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Catelog2Vo</span>(lv1.getCatId().toString(), <span class="literal">null</span>,</span><br><span class="line">                            lv2.getCatId().toString()</span><br><span class="line">                            , lv2.getName());</span><br><span class="line">                    List&lt;CategoryEntity&gt; list3 = getItem(all, lv2.getParentCid());</span><br><span class="line">                    <span class="keyword">if</span> (list3 != <span class="literal">null</span>) &#123;</span><br><span class="line">                        List&lt;Catelog2Vo.Catelog3Vo&gt; collect3 = list3.stream().map(lv3 -&gt; &#123;</span><br><span class="line">                            Catelog2Vo.<span class="type">Catelog3Vo</span> <span class="variable">catelog3Vo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Catelog2Vo</span>.Catelog3Vo(lv2.getCatId().toString(),</span><br><span class="line">                                    lv3.getCatId().toString(), lv3.getName());</span><br><span class="line">                            <span class="keyword">return</span> catelog3Vo;</span><br><span class="line">                        &#125;).collect(Collectors.toList());</span><br><span class="line">                        catelog2Vo.setCatalog3List(collect3);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> catelog2Vo;</span><br><span class="line">                &#125;).collect(Collectors.toList());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> collect2;</span><br><span class="line">        &#125;));</span><br><span class="line">        <span class="comment">// 查库,将结果同步至缓存,必须是一个原子操作</span></span><br><span class="line">        System.out.println(<span class="string">&quot;将db返回的结果同步到缓存中...&quot;</span>);</span><br><span class="line">        <span class="comment">// 查到的数据转为json对象放到缓存中</span></span><br><span class="line">        stringRedisTemplate.opsForValue().set(<span class="string">&quot;catalogJSON&quot;</span>, JSON.toJSONString(catalogJson), <span class="number">1</span>, TimeUnit.DAYS);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> catalogJson;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

##### 锁的时序问题

保证查询db操作和更新缓存操作的原子性

1. 再次确认缓存中不存在数据
2. 查询数库
3. 将结果放入缓存



#### 本地锁在分布式下的问题

将Product 服务复制多份，分别使用不同的端口启动，然后使用网关地址进行压测

--server.port={指定不冲突的端口号}





## 分布式锁

#### 分布式锁原理与使用

1. 使用redis 提供的nx参数，判断该key是否已经存在内存中，如果存在则返回false，反之为true

2. 如果锁没有设置过期时间，加锁的服务刚好还没释放锁的时候宕机，导致其他服务无法获取到锁，一直轮询调用会造成其他服务崩溃。所以我们必须设置一个过期时间，保证这个锁必须自然释放。

   解决方案：设置过期时间

3. 释放锁的时候存在问题，因为释放锁的时候，都是同一个key，每个线程公用这个key。由于业务超时或者网络延迟，第一个线程超时了，第二个线程获取到锁，已经在处理业务；这个时候，第一个线程执行完业务，执行删除锁操作，就会删除调第二个线程使用的锁。所以我们必须在value值中设置一个唯一uuid号（如果出现碰撞可以使用雪花算法），用于区分每个线程调用的锁是不是属于你的。

   解决方案：每个线程执行的vlaue指定一个唯一的值

4. 由于释放锁的时候，查询value和比对value不是原子操作（即不是在redis上同时操作），由于网络存在传输延迟，导致获取value之后，还要在代码中执行删除操作，这个操作就有可能存在删除其他线程锁的问题。

   解决方案：使用lua

##### 修改方法

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Map&lt;String, List&lt;Catelog2Vo&gt;&gt; <span class="title function_">getCatalogJson</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 加入缓存</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">catalogJSON</span> <span class="operator">=</span> stringRedisTemplate.opsForValue().get(<span class="string">&quot;catalogJSON&quot;</span>);</span><br><span class="line">        Map&lt;String, List&lt;Catelog2Vo&gt;&gt; catalogJson;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isEmpty(catalogJSON)) &#123;</span><br><span class="line">            <span class="comment">// 缓存中没有，从数据库中取数据</span></span><br><span class="line">            catalogJson = getCatalogJsonFromDbWithDistributedLock();</span><br><span class="line">            <span class="keyword">return</span> catalogJson;</span><br><span class="line">        &#125;</span><br><span class="line">        catalogJson = JSON.parseObject(catalogJSON, <span class="keyword">new</span> <span class="title class_">TypeReference</span>&lt;Map&lt;String, List&lt;Catelog2Vo&gt;&gt;&gt;() &#123;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> catalogJson;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 本地锁,适用于单个服务</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Map&lt;String, List&lt;Catelog2Vo&gt;&gt; <span class="title function_">getCatalogJsonFromDbWithLocalLock</span><span class="params">()</span> &#123;</span><br><span class="line">        Map&lt;String, List&lt;Catelog2Vo&gt;&gt; catalogJson;</span><br><span class="line">        <span class="comment">// 本地进程保证只有一个线程进入查询数据库</span></span><br><span class="line">        <span class="comment">// TODO 分布式接口需要替换成分布式锁</span></span><br><span class="line">        <span class="keyword">synchronized</span> (<span class="built_in">this</span>) &#123;</span><br><span class="line">            <span class="comment">// 一次将所有数据查出来</span></span><br><span class="line">            catalogJson = getCatelogDataFromDb();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> catalogJson;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 分布式锁,适用于多服务</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Map&lt;String, List&lt;Catelog2Vo&gt;&gt; <span class="title function_">getCatalogJsonFromDbWithDistributedLock</span><span class="params">()</span> &#123;</span><br><span class="line">        Map&lt;String, List&lt;Catelog2Vo&gt;&gt; catalogJson = <span class="literal">null</span>;</span><br><span class="line">        <span class="comment">// 本地进程保证只有一个线程进入查询数据库</span></span><br><span class="line">        <span class="comment">// 分布式接口需要替换成分布式锁</span></span><br><span class="line">        <span class="comment">// 占用分布式锁,去redis占坑</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">uuid</span> <span class="operator">=</span> UUID.randomUUID().toString();</span><br><span class="line">        <span class="type">Boolean</span> <span class="variable">lock</span> <span class="operator">=</span> stringRedisTemplate.opsForValue().setIfAbsent(<span class="string">&quot;lock&quot;</span>, uuid, <span class="number">300</span>, TimeUnit.SECONDS);</span><br><span class="line">        <span class="comment">// 判断是否已经获取到锁</span></span><br><span class="line">        <span class="keyword">if</span> (lock) &#123;</span><br><span class="line">            <span class="comment">// 加锁成功,执行业务操作</span></span><br><span class="line">            <span class="comment">// 设置过期时间，必须和加锁是同步的，原子的</span></span><br><span class="line"><span class="comment">//            stringRedisTemplate.expire(&quot;lock&quot;,300,TimeUnit.SECONDS);</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                catalogJson = getCatelogDataFromDb();</span><br><span class="line">                <span class="keyword">return</span> catalogJson;</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                <span class="comment">// 使用lua脚本删除，原子操作</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">luaDelete</span> <span class="operator">=</span> <span class="string">&quot;if redis.call(\&quot;get\&quot;,KEYS[1]) == ARGV[1]\n&quot;</span> +</span><br><span class="line">                        <span class="string">&quot;then\n&quot;</span> +</span><br><span class="line">                        <span class="string">&quot;    return redis.call(\&quot;del\&quot;,KEYS[1])\n&quot;</span> +</span><br><span class="line">                        <span class="string">&quot;else\n&quot;</span> +</span><br><span class="line">                        <span class="string">&quot;    return 0\n&quot;</span> +</span><br><span class="line">                        <span class="string">&quot;end&quot;</span>;</span><br><span class="line">                <span class="type">Long</span> <span class="variable">lock1</span> <span class="operator">=</span> stringRedisTemplate.execute(<span class="keyword">new</span> <span class="title class_">DefaultRedisScript</span>&lt;Integer&gt;(luaDelete, Long.class),</span><br><span class="line">                        Arrays.asList(<span class="string">&quot;lock&quot;</span>), uuid);</span><br><span class="line">                System.out.println(<span class="string">&quot;删除分布式锁操作结果：&quot;</span> + lock1);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 获取值比对+比对成功删除=原子操作 lua脚本</span></span><br><span class="line"><span class="comment">//            String lockValue = stringRedisTemplate.opsForValue().get(&quot;lock&quot;);</span></span><br><span class="line"><span class="comment">//            if (uuid.equals(lockValue)) &#123;</span></span><br><span class="line"><span class="comment">//                // 比对成功删除自己的锁</span></span><br><span class="line"><span class="comment">//                stringRedisTemplate.delete(&quot;lock&quot;);</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 获取不到锁,自旋调用</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                wait(<span class="number">100</span>);</span><br><span class="line">                <span class="keyword">return</span> getCatalogJsonFromDbWithDistributedLock();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> catalogJson;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Map&lt;String, List&lt;Catelog2Vo&gt;&gt; <span class="title function_">getCatelogDataFromDb</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;缓存中不存在三级菜单数据,需要调用db查询&quot;</span>);</span><br><span class="line">        Map&lt;String, List&lt;Catelog2Vo&gt;&gt; catalogJson;<span class="comment">// 一次将所有数据查出来</span></span><br><span class="line">        <span class="comment">// 进入到查询原子操作,再次执行缓存查询</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">catalogJSON</span> <span class="operator">=</span> stringRedisTemplate.opsForValue().get(<span class="string">&quot;catalogJSON&quot;</span>);</span><br><span class="line">        <span class="comment">// 不为空直接返回</span></span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.isEmpty(catalogJSON)) &#123;</span><br><span class="line">            catalogJson = JSON.parseObject(catalogJSON, <span class="keyword">new</span> <span class="title class_">TypeReference</span>&lt;Map&lt;String, List&lt;Catelog2Vo&gt;&gt;&gt;() &#123;</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="keyword">return</span> catalogJson;</span><br><span class="line">        &#125;</span><br><span class="line">        List&lt;CategoryEntity&gt; all = baseMapper.selectList(<span class="literal">null</span>);</span><br><span class="line">        <span class="comment">// 查出所有一级分类</span></span><br><span class="line">        List&lt;CategoryEntity&gt; levelFirstCategorys = getItem(all, <span class="number">0L</span>);</span><br><span class="line">        catalogJson = levelFirstCategorys.stream().collect(Collectors.toMap(k -&gt; &#123;</span><br><span class="line">            <span class="keyword">return</span> k.getCatId().toString();</span><br><span class="line">        &#125;, lv1 -&gt; &#123;</span><br><span class="line">            <span class="comment">// 每一个的一级分类，查到这个一级分类的二级分类</span></span><br><span class="line">            List&lt;CategoryEntity&gt; list2 = getItem(all, lv1.getParentCid());</span><br><span class="line">            List&lt;Catelog2Vo&gt; collect2 = <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">if</span> (list2 != <span class="literal">null</span>) &#123;</span><br><span class="line">                collect2 = list2.stream().map(lv2 -&gt; &#123;</span><br><span class="line">                    <span class="type">Catelog2Vo</span> <span class="variable">catelog2Vo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Catelog2Vo</span>(lv1.getCatId().toString(), <span class="literal">null</span>,</span><br><span class="line">                            lv2.getCatId().toString()</span><br><span class="line">                            , lv2.getName());</span><br><span class="line">                    List&lt;CategoryEntity&gt; list3 = getItem(all, lv2.getParentCid());</span><br><span class="line">                    <span class="keyword">if</span> (list3 != <span class="literal">null</span>) &#123;</span><br><span class="line">                        List&lt;Catelog2Vo.Catelog3Vo&gt; collect3 = list3.stream().map(lv3 -&gt; &#123;</span><br><span class="line">                            Catelog2Vo.<span class="type">Catelog3Vo</span> <span class="variable">catelog3Vo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Catelog2Vo</span>.Catelog3Vo(lv2.getCatId().toString(),</span><br><span class="line">                                    lv3.getCatId().toString(), lv3.getName());</span><br><span class="line">                            <span class="keyword">return</span> catelog3Vo;</span><br><span class="line">                        &#125;).collect(Collectors.toList());</span><br><span class="line">                        catelog2Vo.setCatalog3List(collect3);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> catelog2Vo;</span><br><span class="line">                &#125;).collect(Collectors.toList());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> collect2;</span><br><span class="line">        &#125;));</span><br><span class="line">        <span class="comment">// 查库,将结果同步至缓存,必须是一个原子操作</span></span><br><span class="line">        System.out.println(<span class="string">&quot;将db返回的结果同步到缓存中...&quot;</span>);</span><br><span class="line">        <span class="comment">// 查到的数据转为json对象放到缓存中</span></span><br><span class="line">        stringRedisTemplate.opsForValue().set(<span class="string">&quot;catalogJSON&quot;</span>, JSON.toJSONString(catalogJson), <span class="number">1</span>, TimeUnit.DAYS);</span><br><span class="line">        <span class="keyword">return</span> catalogJson;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>



#### Redisson简介&整合

1. 引入依赖

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--        使用redisson作为所有分布式锁，分布式对象等功能框架--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.redisson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>redisson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.12.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

2. 配置redisson

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyRedissonConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(destroyMethod = &quot;shutdown&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> RedissonClient <span class="title function_">redisson</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 创建配置</span></span><br><span class="line">        <span class="type">Config</span> <span class="variable">config</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Config</span>();</span><br><span class="line">        <span class="comment">// 使用单体服务</span></span><br><span class="line">        config.useSingleServer().setAddress(<span class="string">&quot;redis://192.168.72.130:6379&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> Redisson.create(config);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

3. 测试是否已经引入bean

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">RedissonClient redissonClient;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testRedisson</span><span class="params">()</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;redisson客户端：&quot;</span>+redissonClient);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



### Redisson

#### Redisson-lock锁测试

在测试TestController下添加内容

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">RedissonClient redissonClient;</span><br><span class="line"></span><br><span class="line"><span class="meta">@GetMapping(&quot;/testRedisson&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testRedisson</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">// 获取第一把锁,只要key值一样,就是同一把锁</span></span><br><span class="line">    <span class="type">RLock</span> <span class="variable">lock</span> <span class="operator">=</span> redissonClient.getLock(<span class="string">&quot;my-lock&quot;</span>);</span><br><span class="line">    <span class="comment">// 阻塞加锁</span></span><br><span class="line">    lock.lock();</span><br><span class="line">    <span class="comment">// 默认加锁时间30s</span></span><br><span class="line">    <span class="comment">// 1.锁会自动续期,如果业务超长,运行期间自动给锁续上新的30s.不是担心业务时间过长,锁自动过期被删掉</span></span><br><span class="line">    <span class="comment">// 2.加锁的业务只要运行完成,就不会给当前锁续期,即使不手动续期,锁默认在30s以后自动删除</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;加锁成功,执行业务...&quot;</span>+Thread.currentThread().getId());</span><br><span class="line">        Thread.sleep(<span class="number">30000</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;释放锁...&quot;</span>+Thread.currentThread().getId());</span><br><span class="line">        lock.unlock();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;testRedisson&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



#### lock看门狗原理-reidisson 如何解决死锁

看门狗机制：自动为键值续期

1. lock.lock(10，TimeUnit.SECONS)； 在锁时间到了以后，不会自动续期，如果其他线程解锁会抛出异常；

   1.1 如果我们传递了锁的超时时间，就发送给redis执行脚本，进行占锁，默认超时就是我们只当的时间

   1.2 如果我们未指定锁的超时时间，就使用30*1000 【LockWatchdogTimeout看门狗的默认时间】

   ​	如果占锁成功，就会启动一个定时任务【重新给锁设置过期时间，新的过期时间就是看门狗的默认时间】，每个10s都会自动再次续期，续成30s

   ​	internallockLeaseTime【看门狗的默认时间】/ 3

注：最好的还是自定义过期时间



#### 读写锁测试

测试类TestController 加入以下内容：

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">StringRedisTemplate redisTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@GetMapping(&quot;/testReadWriteLockForWrite&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testReadWriteLockForWrite</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">RReadWriteLock</span> <span class="variable">testRWLock</span> <span class="operator">=</span> redissonClient.getReadWriteLock(<span class="string">&quot;testRWLock&quot;</span>);</span><br><span class="line">    <span class="type">RLock</span> <span class="variable">rLock</span> <span class="operator">=</span> testRWLock.writeLock();</span><br><span class="line">    <span class="type">String</span> <span class="variable">uuid</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        rLock.lock();</span><br><span class="line">        uuid = UUID.randomUUID().toString();</span><br><span class="line">        redisTemplate.opsForValue().set(<span class="string">&quot;testRW&quot;</span>, uuid);</span><br><span class="line">        Thread.sleep(<span class="number">10000</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        rLock.unlock();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> uuid;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@GetMapping(&quot;/testReadWriteLockForRead&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testReadWriteLockForRead</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">RReadWriteLock</span> <span class="variable">testRWLock</span> <span class="operator">=</span> redissonClient.getReadWriteLock(<span class="string">&quot;testRWLock&quot;</span>);</span><br><span class="line">    <span class="type">RLock</span> <span class="variable">rLock</span> <span class="operator">=</span> testRWLock.readLock();</span><br><span class="line">    <span class="type">String</span> <span class="variable">uuid</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        rLock.lock();</span><br><span class="line">        uuid = redisTemplate.opsForValue().get(<span class="string">&quot;testRW&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        rLock.unlock();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> uuid;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



#### 读写锁补充

保证一定能读到最新数据，修改期间，写锁是一个排他锁（互斥锁）。读锁是一个共享锁

写锁没释放读就必须等待

写 + 读：必须等待写锁释放

写 + 写：阻塞方式

读 + 读：相当于无锁，并发读，只会在redis中记录好，所有当前的读锁。他们都会同时加锁成功

读 + 写：有读锁。写也需要等待

只要有写的存在，都必须等待前面的锁释放



#### 闭锁测试

测试类TestController 加入以下内容：

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/testCountDownLatch/lockDoor&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testCountDownLatchForLockDoor</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">RCountDownLatch</span> <span class="variable">door</span> <span class="operator">=</span> redissonClient.getCountDownLatch(<span class="string">&quot;door&quot;</span>);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        door.trySetCount(<span class="number">3</span>);</span><br><span class="line">        door.await();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;班级全部人都走了...关门&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@GetMapping(&quot;/testCountDownLatch/goaway&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testCountDownLatchForGoAway</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">RCountDownLatch</span> <span class="variable">door</span> <span class="operator">=</span> redissonClient.getCountDownLatch(<span class="string">&quot;door&quot;</span>);</span><br><span class="line">    door.countDown();</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;有一个班级走了,还剩&quot;</span> + door.getCount() + <span class="string">&quot;个班级没走&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



#### 信号量测试

测试类TestController 加入以下内容：

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/testSemaphoreForPark&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testSemaphoreForPark</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">RSemaphore</span> <span class="variable">park</span> <span class="operator">=</span> redissonClient.getSemaphore(<span class="string">&quot;park&quot;</span>);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        park.acquire();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;ok&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@GetMapping(&quot;/testSemaphoreForGo&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testSemaphoreForGo</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">RSemaphore</span> <span class="variable">park</span> <span class="operator">=</span> redissonClient.getSemaphore(<span class="string">&quot;park&quot;</span>);</span><br><span class="line">    park.release();</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;ok&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

场景：分布式限流



### 缓存一致性解决

1. 双写模式

由于卡顿等原因，导致写缓存2在最前面，写缓存1在最后面就出现了不一致。

脏数据问题：这是暂时性的脏数据问题，但是在数据稳定，缓存过期以后，又能得到最新的正确数据。

读到的最新数据有延迟：最终一致性

2. 失效模式

解决方案：

无论是双写模式还是失效模式，都会导致缓存的不一致问题。即多个实例同时更新会出事。怎么办？

1. 如果是用户纬度数据（订单数据，用户数据），这种并发几率非常小，不用考虑这个问题，缓存数据加上过期事件，每隔一段时间触发读的主动更新即可。
2. 如果是菜单，商品介绍等基础数据，也可以去使用canal订阅binlog的方式。
3. 缓存数据+过期时间也足够解决大部分业务对于缓存的要求。
4. 通过加锁保证并发读写，写写的时候按顺序排好队。读读无所谓。所以适合使用读写锁。（业务不关心脏数据，允许临时的脏数据可忽略）

总结：

1. 我们能放入缓存的数据本就不应该是实时性、一致性要求超高的。所以缓存数据的时候加上过期时间，保证每天拿到当前最新数据即可。
2. 我们不应该过度设计，增加系统的复杂性。
3. 遇到实时性、一致性要求高的数据，就应该查数据库，即使慢点。

##### Canal

1. 根据订阅binlog，更新redis
2. 解决数据异构，分析用户兴趣爱好，生成另外一张表，例如：用户推荐表



### SpringCache

#### 简介

1. Spring从3.1开始定义了org.springframework.cache.Cache 和 org.springframework.cache.CacheManeger 接口来统一不同的缓存技术；并支持使用JCache(JSR-107)注解简化我们开发；

2. Cache接口为缓存的组件规范定义，包含缓存的各种操作集合；Cache接口下Spring提供各种xxxCache的实现；如：RedisCache，EhCacheCache，ConcurrentMapCache等；
3. 每次调用需要缓存功能的方法时，Spring会检查指定参数的指定目标方法是否已经被调用过；如果有就直接从缓存中获取方法调用后的结果，如果没有就调用方法缓存结果后返回给用户。下次调用直接从缓存中获取。
4. 使用Spring缓存抽象时我们需要关注以下两点：
   1. 确定方法需要被缓存以及他们的缓存策略；
   2. 从缓存中读取之前缓存存储的数据；



#### 整体&体验@Cacheable

1. 引入依赖

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-cache<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

2. 加入配置，CacheAutoConfiguration会导入RedisCacheConfiguration，自动配置好了缓存管理器RedisCacheManager

<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment">#使用redis缓存</span></span><br><span class="line"><span class="attr">spring.cache.type</span>=<span class="string">redis</span></span><br></pre></td></tr></table></figure>

3. 使用

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 每一个需要缓存的数据我们都来指定要放到那个名字的缓存</span></span><br><span class="line"><span class="meta">@Cacheable(&#123;&quot;category&quot;&#125;)</span> <span class="comment">// 代表当前方法的结果需要缓存，如果缓存中有,方法不用调用。如果缓存中没有，会调用方法，最后将方法的返回值缓存。</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> List&lt;CategoryEntity&gt; <span class="title function_">getLevelFirstCategorys</span><span class="params">()</span> &#123;</span><br><span class="line">    List&lt;CategoryEntity&gt; list = baseMapper.selectList(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;CategoryEntity&gt;().eq(<span class="string">&quot;parent_cid&quot;</span>, <span class="number">0</span>));</span><br><span class="line">    <span class="keyword">return</span> list;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



#### @Cacheable细节设置

##### 默认行为

1. 如果缓存中有，方法不用调用
2. key默认自动生成；缓存的名字；SimpleKey [] (自动生成的key值)
3. 缓存的value的值。默认使用jdk序列化机制，将序列化的数据存到redis
4. 默认事件 -1；

##### 自定义

1. 指定生成的缓存使用的key

   key属性指定，接受一个SpEL

   <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@Cacheable(value = &#123;&quot;category&quot;&#125;,key = &quot;&#x27;levelFirstCategorys&#x27;&quot;)</span><br></pre></td></tr></table></figure>

   使用方法名为key

   <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@Cacheable(value = &#123;&quot;category&quot;&#125;,key = &quot;#root.method.name&quot;)</span><br></pre></td></tr></table></figure>

2. 指定缓存的数据的存活时间

   统一设置存活时间，在配置文件中配置，是以毫秒为单位

   <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">spring.cache.redis.time-to-live=6000</span><br></pre></td></tr></table></figure>

3. 将数据保存为json格式



#### 自定义缓存设置

1. CacheAutoConfiguration 导入了 RedisCacheConfiguration ，自动配置了RedisCacheManager，初始化所有的缓存，每个缓存决定使用什么配置，如果redisCacheConfiguration有就用已有的，没有就用默认配置，想改缓存的配置，只需要给容器中放一个RedisCacheConfiguration即可，就会应用到当前RedisCacheManager管理的所有缓存分区中。
2. 建立一个MyCacheConfig，修改默认序列化配置

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//@EnableConfigurationProperties(CacheProperties.class)</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableCaching</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyCacheConfig</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    @Autowired</span></span><br><span class="line"><span class="comment">//    CacheProperties cacheProperties;</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    RedisCacheConfiguration <span class="title function_">redisCacheConfiguration</span><span class="params">(CacheProperties cacheProperties)</span> &#123;</span><br><span class="line">        <span class="type">RedisCacheConfiguration</span> <span class="variable">config</span> <span class="operator">=</span> RedisCacheConfiguration.defaultCacheConfig();</span><br><span class="line"><span class="comment">//        config = config.entryTtl();</span></span><br><span class="line">        <span class="comment">//key的序列化</span></span><br><span class="line">        config =</span><br><span class="line">                config.serializeKeysWith(RedisSerializationContext.SerializationPair.fromSerializer(<span class="keyword">new</span> <span class="title class_">StringRedisSerializer</span>()));</span><br><span class="line">        <span class="comment">//value的序列化</span></span><br><span class="line">        config =</span><br><span class="line">                config.serializeValuesWith(RedisSerializationContext.SerializationPair.fromSerializer(<span class="keyword">new</span> <span class="title class_">GenericJackson2JsonRedisSerializer</span>()));</span><br><span class="line">        CacheProperties.<span class="type">Redis</span> <span class="variable">redisProperties</span> <span class="operator">=</span> cacheProperties.getRedis();</span><br><span class="line">        <span class="keyword">if</span> (redisProperties.getTimeToLive() != <span class="literal">null</span>) &#123;</span><br><span class="line">            config = config.entryTtl(redisProperties.getTimeToLive());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (redisProperties.getKeyPrefix() != <span class="literal">null</span>) &#123;</span><br><span class="line">            config = config.prefixKeysWith(redisProperties.getKeyPrefix());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!redisProperties.isCacheNullValues()) &#123;</span><br><span class="line">            config = config.disableCachingNullValues();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!redisProperties.isUseKeyPrefix()) &#123;</span><br><span class="line">            config = config.disableKeyPrefix();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> config;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

3. 加入Cache的一些自定义配置。

<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment">#设置缓存时间</span></span><br><span class="line"><span class="attr">spring.cache.redis.time-to-live</span>=<span class="string">600000</span></span><br><span class="line"><span class="comment">#key的前缀，如果指定了前缀就用我们指定的前缀，如果没有就默认使用缓存的名字作为前缀</span></span><br><span class="line"><span class="comment">#spring.cache.redis.key-prefix=CACHE_</span></span><br><span class="line"><span class="comment">#缓存的前缀是否使用</span></span><br><span class="line"><span class="attr">spring.cache.redis.use-key-prefix</span>=<span class="string">true</span></span><br><span class="line"><span class="comment">#是否缓存空值 解决缓存穿透</span></span><br><span class="line"><span class="attr">spring.cache.redis.cache-null-values</span>=<span class="string">true</span></span><br></pre></td></tr></table></figure>



#### @CacheEvict

##### 从缓存中删除数据

1. 使用@Caching 组合操作进行操作

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@Caching(evict = &#123;@CacheEvict(value = &quot;category&quot;, key = &quot;&#x27;getLevelFirstCategory&#x27;&quot;),@CacheEvict(value = &quot;category&quot;, key = &quot;&#x27;getCatalogJson&#x27;&quot;)&#125;)</span><br></pre></td></tr></table></figure>

2. 指定删除某个分区下的所有数据

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@CacheEvict(value = &quot;category&quot; , allEntries = true)</span><br></pre></td></tr></table></figure>

3. 存储同一类型的数据，都可以指定成同一个分区。分区名默认就是缓存的前缀

4. @CachePut 使用双写模式
5. 修改之前的逻辑

CategoryServiceImpl

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 级联更新所有关联的数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> category</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="meta">@Caching(evict = &#123;@CacheEvict(value = &quot;category&quot;, key = &quot;&#x27;getLevelFirstCategorys&#x27;&quot;), @CacheEvict(value =</span></span><br><span class="line"><span class="meta">            &quot;category&quot;, key = &quot;&#x27;getCatalogJson&#x27;&quot;)&#125;)</span></span><br><span class="line"><span class="comment">//    @CacheEvict(value = &quot;category&quot; , allEntries = true)</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateCascade</span><span class="params">(CategoryEntity category)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.updateById(category);</span><br><span class="line">        categoryBrandRelationService.updateCategory(category.getCatId(), category.getName());</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">        <span class="comment">// 每一个需要缓存的数据我们都来指定要放到那个名字的缓存</span></span><br><span class="line">    <span class="meta">@Cacheable(value = &#123;&quot;category&quot;&#125;, key = &quot;#root.methodName&quot;)</span> <span class="comment">// 代表当前方法的结果需要缓存，如果缓存中有,方法不用调用。如果缓存中没有，会调用方法，最后将方法的返回值缓存。</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;CategoryEntity&gt; <span class="title function_">getLevelFirstCategorys</span><span class="params">()</span> &#123;</span><br><span class="line">        List&lt;CategoryEntity&gt; list = baseMapper.selectList(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;CategoryEntity&gt;().eq(<span class="string">&quot;parent_cid&quot;</span>, <span class="number">0</span>));</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Cacheable(value = &#123;&quot;category&quot;&#125;, key = &quot;#root.methodName&quot;)</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Map&lt;String, List&lt;Catelog2Vo&gt;&gt; <span class="title function_">getCatalogJson</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 加入缓存</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">catalogJSON</span> <span class="operator">=</span> stringRedisTemplate.opsForValue().get(<span class="string">&quot;getCatalogJson&quot;</span>);</span><br><span class="line">        Map&lt;String, List&lt;Catelog2Vo&gt;&gt; catalogJson;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isEmpty(catalogJSON)) &#123;</span><br><span class="line">            <span class="comment">// 缓存中没有，从数据库中取数据</span></span><br><span class="line">            catalogJson = getCatalogJsonFromDbWithDistributedLock();</span><br><span class="line">            <span class="keyword">return</span> catalogJson;</span><br><span class="line">        &#125;</span><br><span class="line">        catalogJson = JSON.parseObject(catalogJSON, <span class="keyword">new</span> <span class="title class_">TypeReference</span>&lt;Map&lt;String, List&lt;Catelog2Vo&gt;&gt;&gt;() &#123;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> catalogJson;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>



#### 原理与不足

##### Spring-Cache不足

1. 读模式

   缓存穿透：查询一个null数据。解决：缓存空数据；cache-null-value=true

   缓存击穿：大量并发进来同时查询一个正好过期的数据。解决：加锁；？默认是没有加锁的；在注解中加入sync=true属性（加锁，解决击穿）

   缓存雪崩：大量的key同时过期。解决：加随机时间。加上过期时间。spring.cache.redis.time-to-live=600000

2. 写模式（缓存与数据库一致）

   2.1 读写加锁

   2.2 引入Canal，感知到MySql的更新操作去更新缓存

   2.3 读多写多，直接去数据库查询。

总结：

常规数据（读多写少，即时性，一致性要求不高的数据）；完全可以使用Spring-Cache

特殊数据：特殊设计

##### 原理

​	CacheManager（RedisCacheManager） ——》Cache ——》Cache负责缓存的读写

​	查看RedisCache源码





## 商城业务

### 检索服务

#### 搭建页面环境

1. 在ES模块引入模板引擎
2. 将index.html加入资源文件template文件夹下，文件头引入名称空间，<html lang="en" xmlns:th="http://www.thymeleaf.org">
3. href=" 替换 href="/static/search/  ，src=" 替换 src="/static/search/
4. hosts 加入 域名映射配置

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">192.168.72.130 search.supermall.com</span><br></pre></td></tr></table></figure>

5. 修改nginx配置

   <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server_name  supermall.com *.supermall.com; #主机名、域名</span><br></pre></td></tr></table></figure>

6. 配置网关配置

   <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- id: super_mall_search_host_route</span><br><span class="line">  uri: lb://supermall-elasticsearch</span><br><span class="line">  predicates:</span><br><span class="line">    - Host=search.supermall.com    </span><br></pre></td></tr></table></figure>

   

#### 调试页面跳转

1. 调试搜索页面跳转首页

   <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;a href=&quot;http://supermall.com&quot;&gt;&lt;img src=&quot;/static/search/image/logo1.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;</span><br></pre></td></tr></table></figure>

2. 新建listPage 跳转方法，把index.html改成list.html

   <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SearchController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/list.html&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">listPage</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;list&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

3. 修改catalogLoder.js 文件，然后上传到nginx对应的文件夹下

   <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var cata3link = $(&quot;&lt;a href=\&quot;http://&#123;自己定义的域名&#125;/list.html?catalog3Id=&quot;+ctg3.id+&quot;\&quot; style=\&quot;color: #999;\&quot;&gt;&quot; + ctg3.name + &quot;&lt;/a&gt;&quot;);</span><br></pre></td></tr></table></figure>

4. 修改搜索方法的跳转元素

   <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;a href=&quot;javascript:search();&quot; &gt;&lt;img src=&quot;/static/index/img/img_09.png&quot; /&gt;&lt;/a&gt;</span><br></pre></td></tr></table></figure>

5. 修改跳转方法

   <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function search() &#123;</span><br><span class="line">    var keyword=$(&quot;#searchText&quot;).val()</span><br><span class="line">    window.location.href=&quot;http://search.supermall.com/list.html?keyword=&quot;+keyword;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

   



#### 检索查询参数模型分析抽取

1. 创建商城检索服务和接收检索的实体类

   MallSearchService.java

   <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/**</span><br><span class="line"> *</span><br><span class="line"> * @param searchParam 检索的所有参数</span><br><span class="line"> * @return</span><br><span class="line"> */</span><br><span class="line">Object search(SearchParam searchParam);</span><br></pre></td></tr></table></figure>

   SearchController.java

   <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SearchController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    MallSearchService mallSearchService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 自动将页面提交过来的所有请求参数封装成指定的对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> searchParam</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/list.html&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">listPage</span><span class="params">(SearchParam searchParam)</span>&#123;</span><br><span class="line">        <span class="type">Object</span> <span class="variable">search</span> <span class="operator">=</span> mallSearchService.search(searchParam);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;list&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

   SearchParam.java

   <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SearchParam</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 页面传递过来的全文匹配关键字</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String keyword;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 三级分类id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Long catalog3Id;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 排序条件</span></span><br><span class="line"><span class="comment">     * sort=saleCount_asc/desc</span></span><br><span class="line"><span class="comment">     * sort=skuPrice_asc/desc</span></span><br><span class="line"><span class="comment">     * sort=hotScore_asc/desc</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String sort;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 过滤条件</span></span><br><span class="line"><span class="comment">     * hasStock(是否有货),skuPrice区间,brandId,catalog3Id,attrs</span></span><br><span class="line"><span class="comment">     * hasStock=0/1</span></span><br><span class="line"><span class="comment">     * skuPrice=1_500/_500/500_</span></span><br><span class="line"><span class="comment">     * brandId=1</span></span><br><span class="line"><span class="comment">     * attrs=2_5寸:6寸</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 是否只显示有货</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer hasStock;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 价格区间查询</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String skuPrice;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 品牌id 支持多选</span></span><br><span class="line"><span class="comment">     * 如何多拼</span></span><br><span class="line"><span class="comment">     * brandId=1&amp;brandId=2</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Long&gt; brandId;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 属性</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; attrs;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 页码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer pageNum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

   1.1 商品检索分为三个入口：

   1. 选择分类进入商品检索

   2. 输入检索关键字展示检索页

   3. 选择筛选条件进入（最复杂）

      3.1 商城检索-检索条件分析

      1. 全文检索：skuTitle
      2. 排序：saleCount（销量），hotScore人（热度），skuPrice（价格）
      3. 过滤：hasStock，skuPrice区间，brandId，catalog3Id，attrs
      4. 聚合：attrs

      3.2 一个完整的查询

      <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">keyword=小米&amp;sort=saleCount_desc/asc&amp;hasStock=0/1&amp;skuPrice=400_1900&amp;brandId=1&amp;catalog3Id=1&amp;attrs=1_3G:4G:5G&amp;attrs=2_骁龙845&amp;attrs=4_高清屏</span><br></pre></td></tr></table></figure>

      

#### 检索返回结果模型分析抽取

1. 新建返回对象 SearchResults.java

   <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SearchResults</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询到的所有商品信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;SkuEsModel&gt; products;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 当前查询到的结果，涉及所有品牌信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;BrandVo&gt; brands;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 涉及到的所有属性</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;AttrVo&gt; attrs;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 涉及到的所有分类</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;CatalogVo&gt; catalogs;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ===============一下是分页信息=====================</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 当前页面</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer pageNum;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 总记录数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Long total;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 总页码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer totalPages;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ===============以上是返回到页面的所有信息=================</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Data</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">BrandVo</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> Long brandId;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> String brandName;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> String brandImg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Data</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">AttrVo</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> Long attrId;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> String attrName;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> List&lt;String&gt; attrValue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Data</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">CatalogVo</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> Long catalogId;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> String catalogName;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

   2. 修改SearchController

      <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自动将页面提交过来的所有请求参数封装成指定的对象</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> searchParam</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/list.html&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">listPage</span><span class="params">(SearchParam searchParam, Model model)</span> &#123;</span><br><span class="line">    <span class="comment">// 根据传递来的页面的查询参数,去ES中检索商品</span></span><br><span class="line">    <span class="type">SearchResults</span> <span class="variable">results</span> <span class="operator">=</span> mallSearchService.search(searchParam);</span><br><span class="line">    model.addAttribute(<span class="string">&quot;result&quot;</span>,results);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;list&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





#### 检索DSL测试

##### 查询部分

使用kibana管理界面测试检索内容，测试命令如下:

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET product/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot;: &#123;</span><br><span class="line">      &quot;must&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;match&quot;: &#123;</span><br><span class="line">            &quot;skuTitle&quot;: &quot;华为&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      &quot;filter&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;term&quot;: &#123;</span><br><span class="line">            &quot;catalogId&quot;: &quot;225&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;terms&quot;: &#123;</span><br><span class="line">            &quot;brandId&quot;: [</span><br><span class="line">              &quot;1&quot;,</span><br><span class="line">              &quot;2&quot;,</span><br><span class="line">              &quot;9&quot;</span><br><span class="line">            ]</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;nested&quot;: &#123;</span><br><span class="line">            &quot;path&quot;: &quot;attrs&quot;,</span><br><span class="line">            &quot;query&quot;: &#123;</span><br><span class="line">              &quot;bool&quot;: &#123;</span><br><span class="line">                &quot;must&quot;: [</span><br><span class="line">                  &#123;</span><br><span class="line">                    &quot;term&quot;: &#123;</span><br><span class="line">                      &quot;attrs.attrId&quot;: &#123;</span><br><span class="line">                        &quot;value&quot;: &quot;15&quot;</span><br><span class="line">                      &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                  &#125;,</span><br><span class="line">                  &#123;</span><br><span class="line">                    &quot;terms&quot;: &#123;</span><br><span class="line">                      &quot;attrs.attrValue&quot;: [</span><br><span class="line">                        &quot;海斯&quot;,</span><br><span class="line">                        &quot;以官网消息为准&quot;</span><br><span class="line">                      ]</span><br><span class="line">                    &#125;</span><br><span class="line">                  &#125;</span><br><span class="line">                ]</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;term&quot;: &#123;</span><br><span class="line">            &quot;hasStock&quot;: &#123;</span><br><span class="line">              &quot;value&quot;: &quot;true&quot;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;range&quot;: &#123;</span><br><span class="line">            &quot;skuPrice&quot;: &#123;</span><br><span class="line">              &quot;gte&quot;: 0,</span><br><span class="line">              &quot;lte&quot;: 60000</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;sort&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;skuPrice&quot;: &#123;</span><br><span class="line">        &quot;order&quot;: &quot;desc&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  &quot;from&quot;: 0,</span><br><span class="line">  &quot;size&quot;: 20,</span><br><span class="line">  &quot;highlight&quot;: &#123;</span><br><span class="line">    &quot;fields&quot;: &#123;&quot;skuTitle&quot;: &#123;&#125;&#125;,</span><br><span class="line">    &quot;pre_tags&quot;: &quot;&lt;b style=&#x27;color:red&#x27;&gt;&quot;,</span><br><span class="line">    &quot;post_tags&quot;: &quot;&lt;/b&gt;&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

1. must 中的条件参与评分，filter中的条件不参与；
2. must 中一般是keyword字段中带出的字符串；
3. 范围检索range
4. 分页用from和size
5. 关键字高亮highlight，配置需要高亮的字段，例如：skuTittle ，使用pre_tags配置前缀拼接，post_tags配置后置拼接。



##### 聚合部分

使用aggs进行聚合分析

在结果中的aggregations字段下存在聚合的结果，聚合中的结果key则为聚合的结果值，doc_count则为命中的条数。

使用子聚合查询聚合结果中的详细内容

由于之前做brandName字段不做检索 index=false和 doc_values = false；

因为需要修改映射值，所以必须重新创建一个索引，然后重新创建映射，然后再把数据导入到新的映射中去。

修改es服务中的EsConstant文件PRODUCT_INDEX常量为刚刚新建的映射索引。

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#聚合数据</span><br><span class="line">GET supermall_product/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match_all&quot;: &#123;&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;aggs&quot;: &#123;</span><br><span class="line">    &quot;brand_agg&quot;: &#123;</span><br><span class="line">      &quot;terms&quot;: &#123;</span><br><span class="line">        &quot;field&quot;: &quot;brandId&quot;,</span><br><span class="line">        &quot;size&quot;: 10</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;aggs&quot;: &#123;</span><br><span class="line">        &quot;brand_name_agg&quot;: &#123;</span><br><span class="line">          &quot;terms&quot;: &#123;</span><br><span class="line">            &quot;field&quot;: &quot;brandName&quot;,</span><br><span class="line">            &quot;size&quot;: 10</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;brand_img_agg&quot;:&#123;</span><br><span class="line">          &quot;terms&quot;: &#123;</span><br><span class="line">            &quot;field&quot;: &quot;brandImg&quot;,</span><br><span class="line">            &quot;size&quot;: 10</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;catalog_agg&quot;: &#123;</span><br><span class="line">      &quot;terms&quot;: &#123;</span><br><span class="line">        &quot;field&quot;: &quot;catalogId&quot;,</span><br><span class="line">        &quot;size&quot;: 10</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#迁移数据 </span><br><span class="line">#从product映射迁移到supermall_product映射</span><br><span class="line">POST _reindex</span><br><span class="line">&#123;</span><br><span class="line">  &quot;source&quot;: &#123;</span><br><span class="line">    &quot;index&quot;: &quot;product&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;dest&quot;: &#123;</span><br><span class="line">    &quot;index&quot;: &quot;supermall_product&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">#查询</span><br><span class="line">GET supermall_product/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot;: &#123;</span><br><span class="line">      &quot;must&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;match&quot;: &#123;</span><br><span class="line">            &quot;skuTitle&quot;: &quot;华为&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      &quot;filter&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;term&quot;: &#123;</span><br><span class="line">            &quot;catalogId&quot;: 225</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;terms&quot;: &#123;</span><br><span class="line">            &quot;brandId&quot;: [</span><br><span class="line">              &quot;4&quot;</span><br><span class="line">            ]</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;nested&quot;: &#123;</span><br><span class="line">            &quot;path&quot;: &quot;attrs&quot;,</span><br><span class="line">            &quot;query&quot;: &#123;</span><br><span class="line">              &quot;bool&quot;: &#123;</span><br><span class="line">                &quot;must&quot;: [</span><br><span class="line">                  &#123;</span><br><span class="line">                    &quot;term&quot;: &#123;</span><br><span class="line">                      &quot;attrs.attrId&quot;: &#123;</span><br><span class="line">                        &quot;value&quot;: &quot;1&quot;</span><br><span class="line">                      &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                  &#125;,</span><br><span class="line">                  &#123;</span><br><span class="line">                    &quot;terms&quot;: &#123;</span><br><span class="line">                      &quot;attrs.attrValue&quot;: [</span><br><span class="line">                        &quot;OLED&quot;,</span><br><span class="line">                        &quot;护眼模式&quot;</span><br><span class="line">                      ]</span><br><span class="line">                    &#125;</span><br><span class="line">                  &#125;</span><br><span class="line">                ]</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;sort&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;skuPrice&quot;: &#123;</span><br><span class="line">        &quot;order&quot;: &quot;desc&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  &quot;from&quot;: 0,</span><br><span class="line">  &quot;size&quot;: 20,</span><br><span class="line">  &quot;highlight&quot;: &#123;</span><br><span class="line">    &quot;fields&quot;: &#123;</span><br><span class="line">      &quot;skuTitle&quot;: &#123;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;pre_tags&quot;: &quot;&lt;b style=&#x27;color:red&#x27;&gt;&quot;,</span><br><span class="line">    &quot;post_tags&quot;: &quot;&lt;/b&gt;&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>ES</tag>
      </tags>
  </entry>
  <entry>
    <title>分布式电商项目-基础篇</title>
    <url>/2021/01/01/%E5%88%86%E5%B8%83%E5%BC%8F%E7%94%B5%E5%95%86%E9%A1%B9%E7%9B%AE-%E5%9F%BA%E7%A1%80%E7%AF%87/</url>
    <content><![CDATA[<h2 id="docker环境搭建"><a href="#docker环境搭建" class="headerlink" title="docker环境搭建"></a>docker环境搭建</h2><p>todo</p>
<h3 id="docker-通用命令集"><a href="#docker-通用命令集" class="headerlink" title="docker 通用命令集"></a>docker 通用命令集</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看容器进程</span></span><br><span class="line">docker ps -a </span><br><span class="line">docker ps</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">启动容器</span></span><br><span class="line">docker start $容器id</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">停止容器</span></span><br><span class="line">docker stop $容器id</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">停止所有的容器</span></span><br><span class="line">docker stop $(docker ps -a -q)</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">删除容器</span></span><br><span class="line">docker rm -f $容器id</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">删除所有的容器（只删除单个时把后面的变量改为image <span class="built_in">id</span>即可）</span></span><br><span class="line">docker rm $(docker ps -a -q)</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">删除指定<span class="built_in">id</span>的镜像</span></span><br><span class="line">docker rmi &lt;image id&gt;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">想要删除untagged images，也就是那些<span class="built_in">id</span>为的image的话可以用</span></span><br><span class="line"></span><br><span class="line">docker rmi $(docker images | grep &quot;^&quot; | awk &quot;&#123;print $3&#125;&quot;)</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">设置创建好的容器 开机自动启动</span></span><br><span class="line">docker update $容器id --restart=always</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">讲自己配置好的容器重新生成自己的镜像 上传到Docker Hub 上</span></span><br><span class="line">docker commit $容器id centersept0915/test:redistest</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">登录docker hub 账号</span></span><br><span class="line">docker login</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">你的用户名</span></span><br><span class="line">Username: centersept0915</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">你的密码</span></span><br><span class="line">Password: </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">讲生成好的镜像上传到hub 上</span></span><br><span class="line">docker push centersept0915/test:redistest</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">拉取镜像</span></span><br><span class="line">docker　pull  centersept0915/test:redistest</span><br></pre></td></tr></table></figure>



<h3 id="docker-安装-mysql"><a href="#docker-安装-mysql" class="headerlink" title="docker 安装 mysql"></a>docker 安装 mysql</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -p 3306:3306 --name mysql  -v /mydata/mysql/log:/var/log/mysql  -v /mydata/mysql/data:/var/lib/mysql  -v /mydata/mysql/conf:/etc/mysql  -e MYSQL_ROOT_PASSWORD=root  -d mysql:5.7</span><br></pre></td></tr></table></figure>

<p>命令解释：todo</p>
<p>使用mysql客户端工具连接服务器 </p>
<p>账户名：root 密码: root </p>
<h3 id="docker-安装以及操作-redis"><a href="#docker-安装以及操作-redis" class="headerlink" title="docker 安装以及操作 redis"></a>docker 安装以及操作 redis</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建redis 容器</span></span><br><span class="line">docker run -p 6379:6379 --name redis -v /mydata/redis/data:/data -v /mydata/redis/conf/redis.conf:/etc/redis/redis.conf -d redis redis-server /etc/redis/redis.conf</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">运行redis 客户端</span></span><br><span class="line">docker exec -it redis redis-cli</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>可以下载redis的客户端（redis desktop manageer）</p>
<p>[redis desktop manageer]: <a class="link"   href="https://redisdesktop.com/" >https://redisdesktop.com/<i class="fas fa-external-link-alt"></i></a>	“redis 桌面管理器”</p>
<p>进行界面操作</p>
<h2 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h2><p>重新编辑 maven 的 setting.xml ，添加一下配置到文件中 </p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">#配置阿里云镜像</span><br><span class="line"><span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus-aliyun<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirror0f</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirror0f</span>&gt;</span>mirror0f&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>Nexus aliyun<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">utl</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">配置jdk1.8编译项目</span><br><span class="line"><span class="tag">&lt;<span class="name">profiles</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>jdk-1.8<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">activation</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">activeByDefault</span>&gt;</span>true<span class="tag">&lt;/<span class="name">activeByDefault</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jdl</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">jdk</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activation</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1 8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">maven.compiler.compilerVersion</span>&gt;</span> 1.8<span class="tag">&lt;/<span class="name">maven.compiler.compilerVersion</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">profiles</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="IDEA-amp-VSCode"><a href="#IDEA-amp-VSCode" class="headerlink" title="IDEA &amp; VSCode"></a>IDEA &amp; VSCode</h2><h3 id="idea-配置-（后端开发工具）"><a href="#idea-配置-（后端开发工具）" class="headerlink" title="idea 配置 （后端开发工具）"></a>idea 配置 （后端开发工具）</h3><p>1.安装lombok插件 </p>
<p>快速生成类的构造函数，get&#x2F;set 方法等</p>
<p>2.安装mybatisx插件 </p>
<p>快速定位mapper 文件</p>
<h3 id="VSCode-配置-（前端开发工具）"><a href="#VSCode-配置-（前端开发工具）" class="headerlink" title="VSCode 配置 （前端开发工具）"></a>VSCode 配置 （前端开发工具）</h3><h4 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h4><p>1.Auto Close Tag </p>
<p>自动添加HTML&#x2F;XML关闭标签</p>
<p>2.Auto Rename Tag </p>
<p>自动重命名成对的HTML&#x2F;XML标签</p>
<p>3.Chinese (Simplified) Language Pack for Visual Studio Code插件 </p>
<p>汉化插件</p>
<p>4.ESLint </p>
<p>检查ES 语法</p>
<p>5.HTML CSS Support</p>
<p>6.HTML Snippets</p>
<p>7.JavaScript (ES6) code snippets</p>
<p>ES 语法提示</p>
<p>8.Live Server</p>
<p>启动一个开发本地服务器与动态页面动态重新加载功能</p>
<p>9.open in browser</p>
<p>这允许您在默认浏览器或应用程序中打开当前文件。</p>
<p>10.Vetur</p>
<p>Vue 语法支持 ，Vue 工具</p>
<h2 id="配置git-ssh"><a href="#配置git-ssh" class="headerlink" title="配置git-ssh"></a>配置git-ssh</h2><p>1.在电脑上安装git</p>
<p>todo</p>
<p>2.配置git的基本用户信息</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">全局配置git的用户名</span></span><br><span class="line">git config --global user.name &quot;your name&quot;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">全局配置git的邮箱</span></span><br><span class="line">git config --global user.email &quot;your email&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>3.配置ssh免登录</p>
<p>在控制台生成个人 ssh 私钥和公钥</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">生成私钥和公钥 连续三次回车确定</span></span><br><span class="line">ssh-keygen -t rsa -C &quot;your email&quot; </span><br></pre></td></tr></table></figure>

<p>执行完成之后，目录下会生成 id_rsa （私钥）和 id_rsa.pub（公钥）两个文件。</p>
<p>然后登录gitee(码云) 或者 github ，在设置中找到SSH KEY配置，将 id_rsa.pub 里的内容复制粘贴到里面去。</p>
<p>最后 使用 </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">码云测试是否添加成功</span></span><br><span class="line">ssh-T git@gitee.com </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">github测试是否添加成功</span></span><br><span class="line">ssh-T git@github.com </span><br></pre></td></tr></table></figure>

<h2 id="idea-搭建-后端服务项目环境"><a href="#idea-搭建-后端服务项目环境" class="headerlink" title="idea 搭建 后端服务项目环境"></a>idea 搭建 后端服务项目环境</h2><h3 id="导入码云上的项目"><a href="#导入码云上的项目" class="headerlink" title="导入码云上的项目"></a>导入码云上的项目</h3><p>复制仓库url，在idea新建选择 new &gt; Project from Version Control .. &gt; git 粘贴在URL 中，选择相应的工作目录。</p>
<p>如果没有配置gitee账号，需要自行登录。</p>
<h3 id="在项目上新建相应的微服务项目"><a href="#在项目上新建相应的微服务项目" class="headerlink" title="在项目上新建相应的微服务项目"></a>在项目上新建相应的微服务项目</h3><ol>
<li>商品服务（product）</li>
<li>仓储服务（ware）</li>
<li>订单服务（order）</li>
<li>优惠卷服务（coupon）</li>
<li>用户服务（member）</li>
</ol>
<h4 id="创建微服务模块"><a href="#创建微服务模块" class="headerlink" title="创建微服务模块"></a>创建微服务模块</h4><p>1.右键主项目 &gt; New &gt; Module.. &gt; Spring initializr  输入相关信息</p>
<p>2.每个服务统一包名和模块名称</p>
<p>com.组织名称.项目名称.模块名称….</p>
<p>3.选择微服务必要的maven 依赖</p>
<p>Spring  Web</p>
<p>Spring  Web  Service </p>
<p>OpenFeign 用于微服务之间的互相调用</p>
<p>4.创建完成微服务模块，在父目录下 新建一个 pom 文件，内容如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.centersept.supermall<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>super-mall<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>super-mall<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>baba-project<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>super-mall-coupon<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>super-mall-member<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>super-mall-order<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>super-mall-product<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>super-mall-ware<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>把编辑好的父Pom 文件，添加到 Idea maven 插件 管理中，方便打包部署。</p>
<h4 id="编辑-gitignore"><a href="#编辑-gitignore" class="headerlink" title="编辑.gitignore"></a>编辑.gitignore</h4><p>编辑这个文件可以 忽略提交这些文件，在这个文件中追加如下内容：</p>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">**/mvnw</span><br><span class="line">**/mvnw.cmd</span><br><span class="line">**/.mvn</span><br><span class="line">**/target/</span><br><span class="line">.idea</span><br><span class="line">**/.gitignore</span><br></pre></td></tr></table></figure>

<p>最后提交代码到码云，安装码云插件（gitee）。</p>
<h3 id="数据库-搭建配置"><a href="#数据库-搭建配置" class="headerlink" title="数据库 搭建配置"></a>数据库 搭建配置</h3><p>1.安装 Power Designer 建模软件</p>
<p>[]: <a class="link"   href="http://forspeed.rbread01.cn/down/powerdesigner1029.zip" >http://forspeed.rbread01.cn/down/powerdesigner1029.zip<i class="fas fa-external-link-alt"></i></a></p>
<p>注：表不做外键关联，因为数据量太大，外键会浪费数据库的性能。</p>
<p>2.根据业务进行数据建模，然后生成相应的 sql 语句</p>
<p>3.点击菜单栏 Database &gt; generate Database &gt; Preview , 查看生成的 sql 语句</p>
<p>4.每个服务模块建立一个数据库，然后分别执行相应的业务sql，创建表结构。</p>
<h3 id="搭建后台管理系统"><a href="#搭建后台管理系统" class="headerlink" title="搭建后台管理系统"></a>搭建后台管理系统</h3><h4 id="人人开源项目"><a href="#人人开源项目" class="headerlink" title="人人开源项目"></a>人人开源项目</h4><p><strong>注：在 git 搜索人人开源，使用别人的构建好的脚手架，进行快速开发</strong></p>
<p>renren-fast 和 renren-fast-vue 能快速构建，后台管理系统。</p>
<p>renren-generator 快速生成代码层</p>
<h4 id="引入后台项目中"><a href="#引入后台项目中" class="headerlink" title="引入后台项目中"></a>引入后台项目中</h4><p>1.打开git bash ,执行，克隆项目到文件夹中</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://gitee.com/renrenio/renren-fast.git </span><br><span class="line"></span><br><span class="line">git <span class="built_in">clone</span> https://gitee.com/renrenio/renren-fast-vue.git</span><br></pre></td></tr></table></figure>

<p>2.删除克隆的项目中的 .git 文件夹，然后 renren-fast 复制整个文件夹到你的项目中，然后更改 父Pom 加上 该模块，更改后的配置为：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.centersept.supermall<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>super-mall<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">name</span>&gt;</span>super-mall<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">description</span>&gt;</span>baba-project<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">module</span>&gt;</span>super-mall-coupon<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">module</span>&gt;</span>super-mall-member<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">module</span>&gt;</span>super-mall-order<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">module</span>&gt;</span>super-mall-product<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">module</span>&gt;</span>renren-fast<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">module</span>&gt;</span><span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>3.创建相应的数据库和表，执行项目中db文件夹下的sql文件（根据数据库选择相应的语句），执行完成之后，可以更改项目配置文件夹中关于db数据源的配置，然后启动项目。</p>
<h4 id="构建前端项目"><a href="#构建前端项目" class="headerlink" title="构建前端项目"></a>构建前端项目</h4><p>1.安装 Node.js</p>
<p>todo</p>
<p>2.配置好node，打开前端项目下的终端，执行 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装包文件依赖</span></span><br><span class="line">npm install </span><br><span class="line"><span class="comment"># 启动前端项目</span></span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure>

<p>2.1 安装中出现了错误</p>
<p>1.node-gyp  这个包需要安装 python 作为依赖 所以我们需要安装python，在管理员powershell 中执行以下语句：</p>
<p>Error: Can’t find Python executable “python”, you can set the PYTHON env variable.</p>
<p>方法一：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装windows-build-tools</span></span><br><span class="line">npm install --global --production windows-build-tools</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装node-gyp</span></span><br><span class="line">npm install --global node-gyp</span><br></pre></td></tr></table></figure>

<p>方法二：</p>
<p>使用管理员运行VSCode 再执行 npm install 命令</p>
<h5 id="注：node-sass-安装报错"><a href="#注：node-sass-安装报错" class="headerlink" title="注：node-sass 安装报错"></a>注：node-sass 安装报错</h5><p>node-sass是一个项目依赖，在一个项目中在使用sass语法的时候，必须通过sass-loader来解析sass，从而使sass语法变成浏览器能够识别的CSS语法，而node-sass模块就是对sass-loader的支持模块，所以不安装node-sass，sass-loader就不能正常工作</p>
<p><strong>要考虑到 node-sass 和 node.js 的版本兼容性</strong></p>
<p>参考：<a class="link"   href="https://www.npmjs.com/package/node-sass" >https://www.npmjs.com/package/node-sass<i class="fas fa-external-link-alt"></i></a></p>
<p>3.成功之后，浏览器打开 localhost:8001，账号：admin 密码：admin 登录.（没验证码，一定是没有启动后端服务） </p>
<h3 id="逆向工程搭建-amp-使用"><a href="#逆向工程搭建-amp-使用" class="headerlink" title="逆向工程搭建&amp;使用"></a>逆向工程搭建&amp;使用</h3><p>1.克隆项目下来</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://gitee.com/renrenio/renren-generator.git</span><br></pre></td></tr></table></figure>

<p>2.删除.git 配置 ，然后把文件复制到后台工程目录下，修改pom 文件，引入该项目。</p>
<p>3.修改逆向工程的application.yml 配置文件的数据源配置，修改为自己的</p>
<p>4.修改generator.properties 生成代码的基本配置，主要修改以下配置</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">mainPath</span>=<span class="string">com.centersept.supermall</span></span><br><span class="line"><span class="comment">#包名</span></span><br><span class="line"><span class="attr">package</span>=<span class="string">com.centersept.supermall</span></span><br><span class="line"><span class="comment">#需要生成的模块</span></span><br><span class="line"><span class="attr">moduleName</span>=<span class="string">product</span></span><br><span class="line"><span class="comment">#作者</span></span><br><span class="line"><span class="attr">author</span>=<span class="string">center_sept</span></span><br><span class="line"><span class="comment">#Email</span></span><br><span class="line"><span class="attr">email</span>=<span class="string">253079439@qq.com</span></span><br><span class="line"><span class="comment">#表前缀（类名不会包含表前缀）</span></span><br><span class="line"><span class="attr">tablePrefix</span>=<span class="string">pms_</span></span><br></pre></td></tr></table></figure>

<p>5.直接启动逆向工程，使用浏览器直接输入localhost 访问自动生成代码系统。</p>
<p>5.1 进入菜单 renren-fast , 选择全部的表，点击生成代码来生成代码。</p>
<p>5.2 解压生成的文件，把解压的main文件夹，复制到你生成的模块下。</p>
<p>6.导入代码之后，存在报错，还需要生成一个公共的模块，把公共代码导入进去，其他服务依赖这个公共模块。</p>
<p>6.1 每个模块加入一下依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.centersept.supermall<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>super-mall-common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>7.从renren-fast 模块，把utils 和 xss 里的类copy 到 common 模块</p>
<p>7.1 修改pom 的依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--    mybatis-plus--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--    lombok  --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.httpcomponents<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>httpcore<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-lang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;dependency&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;groupId&gt;org.apache.tomcat.embed&lt;/groupId&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;artifactId&gt;tomcat-embed-core&lt;/artifactId&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;version&gt;9.0.36&lt;/version&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;/dependency&gt;--&gt;</span></span><br></pre></td></tr></table></figure>

<p>8.修改逆向工程中的controller模板 Controller.java.vm, 注释掉shiro的注解</p>
<p>9.最后再次生成代码，复制粘贴到项目中。</p>
<h3 id="配置-amp-测试模块的CRUD"><a href="#配置-amp-测试模块的CRUD" class="headerlink" title="配置&amp;测试模块的CRUD"></a>配置&amp;测试模块的CRUD</h3><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>1.配置数据源</p>
<p>1.1 common pom的依赖添加，导入数据库的驱动</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"> <span class="comment">&lt;!--        mysql 驱动--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            一般tomcat 里自带的jar包 所以设置为provided 如果存在不需要引入--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>1.2  生成application.yml 配置文件，将数据源配置进去</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://192.168.72.130:3306/supermall_pms</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br></pre></td></tr></table></figure>

<p>2.配置mybatis-plus</p>
<p>2.1 配置mybatisPlus ,在启动类加入注解，扫描mapper 接口，生成代理类，注入到spring 容器中，让spring 进行管理</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@MapperScan(&quot;com.centersept.supermall.product.dao&quot;)</span><br></pre></td></tr></table></figure>

<p>2.2 在配置文件追加一下内容</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="comment">#mapper 的路径 ，classpath* 全路径扫描，即java的类路径下；classpath 即 resource 路径下</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:/mapper/**/*.xml</span></span><br><span class="line">  <span class="comment">#配置主键使用规则</span></span><br><span class="line">  <span class="attr">global-config:</span></span><br><span class="line">    <span class="attr">db-config:</span></span><br><span class="line">      <span class="comment">#主键自增</span></span><br><span class="line">      <span class="attr">id-type:</span> <span class="string">auto</span></span><br></pre></td></tr></table></figure>

<h4 id="测试是否能crud"><a href="#测试是否能crud" class="headerlink" title="测试是否能crud"></a>测试是否能crud</h4><p>在 test 文件夹下的测试类，添加以下内容测试。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">   BrandService brandService;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">void</span> <span class="title function_">contextLoads</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="type">BrandEntity</span> <span class="variable">brandEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BrandEntity</span>();</span><br><span class="line">       brandEntity.setDescript(<span class="string">&quot;测试&quot;</span>);</span><br><span class="line">       brandEntity.setName(<span class="string">&quot;测试&quot;</span>);</span><br><span class="line">       <span class="type">boolean</span> <span class="variable">b</span> <span class="operator">=</span> brandService.save(brandEntity);</span><br><span class="line">       System.out.println(b);</span><br><span class="line">       brandEntity.setBrandId(<span class="number">1L</span>);</span><br><span class="line">       brandEntity.setDescript(<span class="string">&quot;修改测试&quot;</span>);</span><br><span class="line">       b = brandService.updateById(brandEntity);</span><br><span class="line">       System.out.println(b);</span><br><span class="line">        List&lt;BrandEntity&gt; queryListDto = brandService.list(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;BrandEntity&gt;().eq(<span class="string">&quot;brand_id&quot;</span>,<span class="number">1L</span>));</span><br><span class="line">       System.out.println(queryListDto.toString());</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<h3 id="逆向工程生成全部模块的业务代码"><a href="#逆向工程生成全部模块的业务代码" class="headerlink" title="逆向工程生成全部模块的业务代码"></a>逆向工程生成全部模块的业务代码</h3><p>1.每个模块的pom 都加上common 模块的依赖</p>
<p>2.配置每个模块的数据库Url 为对应的库</p>
<p>3.每个模块的端口号都修改，从8000开始，+1000 递增，方便每个模块生成多个服务，直接在后面加1。</p>
<p>即 订单模块定义8000 开始，再加一个订单服务则对用端口为8001。仓储模块则使用9000。</p>
<h2 id="分布式组件"><a href="#分布式组件" class="headerlink" title="分布式组件"></a>分布式组件</h2><h3 id="Spring-cloud-netflix"><a href="#Spring-cloud-netflix" class="headerlink" title="Spring-cloud-netflix"></a>Spring-cloud-netflix</h3><p>todo</p>
<h3 id="Spring-cloud-alibaba-分布式框架解决方案"><a href="#Spring-cloud-alibaba-分布式框架解决方案" class="headerlink" title="Spring-cloud-alibaba 分布式框架解决方案"></a>Spring-cloud-alibaba 分布式框架解决方案</h3><p>SpringCloud Alibaba-Nacos: 注册中心(服务发现&#x2F;注册 )<br>SpringCloud Alibaba-Nacos配置中心(动态配置管理)<br>SpringCloud- Ribbon:负载均衡<br>SpringCloud- Feign:声明式HTTP客户端(调用远程服务)<br>SpringCloud Alibaba-Sentinel:服务容错(限流、降级、熔断)<br>SpringCloud- Gateway: API 网关(webflux 编程模式)<br>SpringCloud- Sleuth:调用链监控<br>SpringCloud Alibaba-Seata:原Fescar, 即分布式事务解决方案</p>
<h3 id="引入分布式框架Spring-cloud-alibaba"><a href="#引入分布式框架Spring-cloud-alibaba" class="headerlink" title="引入分布式框架Spring-cloud-alibaba"></a>引入分布式框架Spring-cloud-alibaba</h3><p>在公共模块common 的pom 加入 一下配置：</p>
<p><strong>注：框架的版本和spring-boot的版本要同步</strong>，具体参考官方文档。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="Nacos-注册中心"><a href="#Nacos-注册中心" class="headerlink" title="Nacos 注册中心"></a>Nacos 注册中心</h4><p>1.首先，修改 pom.xml 文件，引入在公共common模块引入 Nacos Discovery Starter。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h5 id="2-Nacos-server-配置"><a href="#2-Nacos-server-配置" class="headerlink" title="2.Nacos server 配置"></a>2.Nacos server 配置</h5><p><strong>注：window下操作</strong></p>
<p>2.1 <a class="link"   href="https://github.com/alibaba/nacos/releases" >https://github.com/alibaba/nacos/releases<i class="fas fa-external-link-alt"></i></a>  下载 Nacos server , 我下载的是这个版本 </p>
<p>2.2 下载完成后，解压，startup.cmd 启动</p>
<p>2.2.1 出现启动不了，窗口一闪的情况。</p>
<p>解决：你的jdk环境变量没有配置好，必须把jdk环境置顶，也就是上移，让系统优先选择。</p>
<p>最后，在微服务业务模块中加入以下配置</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring.cloud.nacos.discovery.server-addr</span>=<span class="string">127.0.0.1:8848</span></span><br></pre></td></tr></table></figure>

<p>3.使用 @EnableDiscoveryClient 注解开启服务注册与发现功能，启动项目</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"> <span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProviderApplication</span> &#123;</span><br><span class="line"></span><br><span class="line"> 	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"> 		SpringApplication.run(Application.class, args);</span><br><span class="line"> 	&#125;</span><br><span class="line"></span><br><span class="line"> 	<span class="meta">@RestController</span></span><br><span class="line"> 	<span class="keyword">class</span> <span class="title class_">EchoController</span> &#123;</span><br><span class="line"> 		<span class="meta">@GetMapping(value = &quot;/echo/&#123;string&#125;&quot;)</span></span><br><span class="line"> 		<span class="keyword">public</span> String <span class="title function_">echo</span><span class="params">(<span class="meta">@PathVariable</span> String string)</span> &#123;</span><br><span class="line"> 				<span class="keyword">return</span> string;</span><br><span class="line"> 		&#125;</span><br><span class="line"> 	&#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<p>4.使用浏览器登录 <a class="link"   href="http://localhost:8848/nacos/" >http://localhost:8848/nacos/<i class="fas fa-external-link-alt"></i></a> ，账号密码 nacos ,但是并没有我们注册的服务。</p>
<p>那是因为微服务模块配置文件没有配置apllication.name 这个属性，加入之后就可以发现了。</p>
<p>4.1 修改配置文件之后出现</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">org.springframework.boot.context.properties.ConfigurationPropertiesBean</span><br></pre></td></tr></table></figure>

<p>因为 springboot版本和springcloud版本不兼容，换一个版本试试。换成Greenwich.SR3 版本的。</p>
<h5 id="Nacos服务中心-部署到-docker"><a href="#Nacos服务中心-部署到-docker" class="headerlink" title="Nacos服务中心 部署到 docker"></a>Nacos服务中心 部署到 docker</h5><p>1.获取镜像</p>
<p>todo</p>
<h4 id="OpenFeigh-测试远程调用"><a href="#OpenFeigh-测试远程调用" class="headerlink" title="OpenFeigh 测试远程调用"></a>OpenFeigh 测试远程调用</h4><h5 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h5><p>todo</p>
<h5 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h5><p>1.引入依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>2.项目接入feigh</p>
<p>2.1在优惠券服务取一个controller类文件，定义一个数据返回List</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/member/list&quot;)</span></span><br><span class="line">   <span class="keyword">public</span> R <span class="title function_">membercoupons</span><span class="params">()</span>&#123;</span><br><span class="line">       <span class="type">CouponEntity</span> <span class="variable">couponEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CouponEntity</span>();</span><br><span class="line">       couponEntity.setCouponName(<span class="string">&quot;测试优惠券&quot;</span>);</span><br><span class="line">       <span class="keyword">return</span> R.ok().put(<span class="string">&quot;coupons&quot;</span>,Arrays.asList(couponEntity));</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<p>2.2 在会员模块下创建feigh包，这个文件夹用于声明feigh接口。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@FeignClient(&quot;supermall-coupon&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">CouponFeighService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/coupon/coupon/member/list&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">membercoupons</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2.3 在会员服务的启动类中加入注解，开启远程调用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@EnableFeignClients(basePackages = &quot;com.centersept.supermall.member.feigh&quot;)</span><br></pre></td></tr></table></figure>

<p>也可以在可以在接口上加入@Component 注解，交给spring 注入。</p>
<p>2.4 在会员模块下的MemberController类中加入一下内容，远程调用优惠券服务</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">    CouponFeighService couponFeignService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/coupons&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">MemberEntity</span> <span class="variable">memberEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MemberEntity</span>();</span><br><span class="line">        memberEntity.setNickname(<span class="string">&quot;大帅逼&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">R</span> <span class="variable">membercoupons</span> <span class="operator">=</span> couponFeignService.membercoupons();</span><br><span class="line">        <span class="keyword">return</span> R.ok().put(<span class="string">&quot;member&quot;</span>,memberEntity).put(<span class="string">&quot;coupons&quot;</span>,membercoupons.get(<span class="string">&quot;coupons&quot;</span>));</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>2.5 浏览器输入<a class="link"   href="http://localhost:9000/member/member/coupons%EF%BC%8C%E6%B5%8B%E8%AF%95%E6%98%AF%E5%90%A6%E8%BF%9E%E9%80%9A%E3%80%82" >http://localhost:9000/member/member/coupons，测试是否连通。<i class="fas fa-external-link-alt"></i></a></p>
<h4 id="Nacos-配置中心"><a href="#Nacos-配置中心" class="headerlink" title="Nacos 配置中心"></a>Nacos 配置中心</h4><h5 id="简单配置实例"><a href="#简单配置实例" class="headerlink" title="简单配置实例"></a>简单配置实例</h5><p>1.在common 模块引入nacos 配置中心的依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>2.在应用的&#x2F;src&#x2F;main&#x2F;resources&#x2F;bootstrap.properties 配置文件中配置Nacos Config 元数据，现在 coupon 模块创建</p>
<p>3.在controller层 创建一个测试的用户代码，如下</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Value(&quot;$&#123;user.testname&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String testUserName;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;user.age&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer testAge;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/test&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> R.ok().put(<span class="string">&quot;testUserName&quot;</span>,testUserName).put(<span class="string">&quot;testAge&quot;</span>,testAge);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p><strong>注：user.name   spring 会自动去读取计算机的名字</strong></p>
<p>4.在 application.properties 中配置相应的属性，如下</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">user.testname</span>=<span class="string">超人</span></span><br><span class="line"><span class="attr">user.age</span>=<span class="string">25</span></span><br></pre></td></tr></table></figure>

<p>5.为了不让我们重新打包重启，则在配置中心加上配置。启动的如下日志已经提醒，从 nacos 配置中心获取配置信息的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2020-07-16 21:00:46.045  INFO 14188 --- [           main] b.c.PropertySourceBootstrapConfiguration : Located property source: CompositePropertySource &#123;name=&#x27;NACOS&#x27;, propertySources=[NacosPropertySource &#123;name=&#x27;supermall-coupon.properties&#x27;&#125;]&#125;</span><br></pre></td></tr></table></figure>

<p>我们需要在 Nacos 配置中心配置相应的配置文件</p>
<p>6.打开Nacos 管理界面，点击配置列表，然后新建一个 DataId 为 supermall-coupon.properties 的命名，再然后把配置的内容写到配置内容栏里面，发布。</p>
<p>7.这个时候还没有结束，还需要在配置属性的类里面，加上@RefreshScope 注解，才能达到热更新的效果。</p>
<p>8.因为配置中心是bootstrap.properties 中配置加载的，所以相同的配置项，优先加载Nacos 配置中心的配置。</p>
<h5 id="命名空间与配置分组"><a href="#命名空间与配置分组" class="headerlink" title="命名空间与配置分组"></a>命名空间与配置分组</h5><p>1.命名空间</p>
<p>配置隔离   </p>
<p>默认：public </p>
<p>1.开发，测试，生产</p>
<h6 id="配置命名空间"><a href="#配置命名空间" class="headerlink" title="配置命名空间"></a>配置命名空间</h6><p>1.在命名空间中，分别添加开发，测试，生产 的命名空间。</p>
<p>2.打开配置列表，发现页面上已经有我们添加的命名空间。</p>
<p>3.然后我们在新的命名空间中添加我们的配置项。我们可以直接在public 的命名空间中，选择已经配置好的配置，然后克隆到其他命名空间就可以了。</p>
<p>4.如果我们要在不同环境切换配置命名空间，可以在bootstrap.properties 中 增加命名空间配置项</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring.cloud.nacos.config.namespace</span>=<span class="string">98af8d57-dd3a-4b68-b1a1-945ee78f1239</span></span><br></pre></td></tr></table></figure>

<p>5.也可以每个微服务创建一个命名空间。</p>
<hr>
<p>2.配置集</p>
<p>所有的配置的集合</p>
<p>3.配置集ID</p>
<p>类似配置文件名</p>
<p>4.配置分组</p>
<p>默认所有的配置集都属于：DEFAULT_GROUP</p>
<p>需要在boostrap.properties 加入以下配置</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment">#配置分组的命名</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.group</span>=<span class="string">test  </span></span><br></pre></td></tr></table></figure>

<p><strong>一般来说一个微服务使用命名空间来隔离，然后使用分组来隔离环境的配置。</strong></p>
<h5 id="加载多配置源"><a href="#加载多配置源" class="headerlink" title="加载多配置源"></a>加载多配置源</h5><p>1.新建一个配置 ，把数据源的配置当道这个配置中来，Data ID 为 datasource.yml ,Group 为 dev, 配置格式为YAML 配置内容为以下内容：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://192.168.72.130:3306/supermall_sms</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br></pre></td></tr></table></figure>

<p>2.mybatis 的配置，也可以创建一个出来进行加载,配置如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="comment">#mapper 的路径 ，classpath* 全路径扫描，即java的类路径下；classpath 即 resource 路径下</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:/mapper/**/*.xml</span></span><br><span class="line">  <span class="comment">#配置主键使用规则</span></span><br><span class="line">  <span class="attr">global-config:</span></span><br><span class="line">    <span class="attr">db-config:</span></span><br><span class="line">      <span class="comment">#主键自增</span></span><br><span class="line">      <span class="attr">id-type:</span> <span class="string">auto</span></span><br></pre></td></tr></table></figure>

<p>3.新建一个其他的配置，统一进行管理</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">supermall-coupon</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8000</span></span><br></pre></td></tr></table></figure>

<p>4.把这些创建好的配置，配置到项目中，在bootstrap.properties 中加入以下配置</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># datasource</span></span><br><span class="line"><span class="string">spring.cloud.nacos.config.ext-config[0].data-id=datasource.yml</span></span><br><span class="line"><span class="string">spring.cloud.nacos.config.ext-config[0].group=dev</span></span><br><span class="line"><span class="comment">#是否动态刷新</span></span><br><span class="line"><span class="string">spring.cloud.nacos.config.ext-config[0].refresh=true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># mybatis</span></span><br><span class="line"><span class="string">spring.cloud.nacos.config.ext-config[1].data-id=mybatis.yml</span></span><br><span class="line"><span class="string">spring.cloud.nacos.config.ext-config[1].group=dev</span></span><br><span class="line"><span class="comment">#是否动态刷新</span></span><br><span class="line"><span class="string">spring.cloud.nacos.config.ext-config[1].refresh=true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#other</span></span><br><span class="line"><span class="string">spring.cloud.nacos.config.ext-config[2].data-id=other.yml</span></span><br><span class="line"><span class="string">spring.cloud.nacos.config.ext-config[2].group=dev</span></span><br><span class="line"><span class="comment">#是否动态刷新</span></span><br><span class="line"><span class="string">spring.cloud.nacos.config.ext-config[2].refresh=true</span></span><br></pre></td></tr></table></figure>



<h4 id="SpringCloud-Gateway-网关"><a href="#SpringCloud-Gateway-网关" class="headerlink" title="SpringCloud-Gateway 网关"></a>SpringCloud-Gateway 网关</h4><p>网关作为流量的入口，常用功能包括路由转发、权限校验、限流控制等。而springcloud gateway<br>作为SpringCloud官方推出的第二代网关框架，取代了Zuul 网关（网飞）。</p>
<p><strong>主要作用 ：动态路由，鉴权</strong></p>
<p>rps：32213  每秒请求数</p>
<p>组件：Route,Predicate,Filter</p>
<p><strong>注：官方文档中有很多配置实例，可以直接上去查看。</strong></p>
<p>1.创建gatewey 模块，加入网关模块，以及引入common 模块</p>
<p>2.加入nacos 依赖，然后配置nacos的配置，新建bootstrap.properties ,加入以下配置：</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring.application.name</span>=<span class="string">&lt;你的应用名称&gt;</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.discovery.server-addr</span>=<span class="string">&lt;服务所在ip&gt;:8848</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.server-addr</span>=<span class="string">&lt;服务所在ip&gt;:8848</span></span><br></pre></td></tr></table></figure>

<p>3.排除数据库配置,在启动类上加入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@EnableDiscoveryClient</span><br><span class="line">@SpringBootApplication(exclude = &#123;DataSourceAutoConfiguration.class&#125;)</span><br></pre></td></tr></table></figure>

<p>4.测试路由断言</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">gateway:</span></span><br><span class="line">      <span class="attr">routes:</span></span><br><span class="line"><span class="comment">#        - id: test_route</span></span><br><span class="line"><span class="comment">#          uri: https://www.baidu.com</span></span><br><span class="line"><span class="comment">#          predicates:</span></span><br><span class="line"><span class="comment">#            - Query=url,baidu</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#        - id: qq_route</span></span><br><span class="line"><span class="comment">#          uri: https://www.qq.com</span></span><br><span class="line"><span class="comment">#          predicates:</span></span><br><span class="line"><span class="comment">#            - Query=url,qq</span></span><br><span class="line"></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">product_route</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">lb://supermall-product</span></span><br><span class="line">          <span class="attr">predicates:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">Path=/api/product/**</span></span><br><span class="line">          <span class="attr">filters:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">RewritePath=/api/(?&lt;segment&gt;.*),/$\&#123;segment&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">admin_route</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">lb://renren-fast</span></span><br><span class="line">          <span class="attr">predicates:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">Path=/api/**</span></span><br><span class="line">          <span class="attr">filters:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">RewritePath=/api/(?&lt;segment&gt;.*),/renren-fast/$\&#123;segment&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="前端基础"><a href="#前端基础" class="headerlink" title="前端基础"></a>前端基础</h2><h3 id="技术栈简介"><a href="#技术栈简介" class="headerlink" title="技术栈简介"></a>技术栈简介</h3><h4 id="ES6-语法"><a href="#ES6-语法" class="headerlink" title="ES6 语法"></a>ES6 语法</h4><p>JavaScript 是它的实现</p>
<h5 id="前端基础-1"><a href="#前端基础-1" class="headerlink" title="前端基础"></a>前端基础</h5><p>1.let 声明变量</p>
<p>var 声明的变量往往会越域<br>let 声明的变量有严格局部作用域</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">let</span> b - <span class="number">2</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a); <span class="number">1</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(b);1<span class="attr">ReferenceError</span>:b is not defined</span><br></pre></td></tr></table></figure>

<p>var 会存在变量提升<br>let 不存在变量提升</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">console.log(×); /l undefined</span><br><span class="line">var x =10;</span><br><span class="line">console.log(y); //ReferenceError: y is not defined</span><br><span class="line">let y = 20;</span><br></pre></td></tr></table></figure>

<p>2.const 声明常量（只读变量）</p>
<p>声明之后不允许改变</p>
<p>一旦声明必须初始化，否则报错</p>
<p>3.解构表达式</p>
<p>数组解构</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">12</span>,<span class="number">3</span>]</span><br><span class="line"><span class="comment">// let a = arr[0]</span></span><br><span class="line"><span class="comment">// let b = arr[1]</span></span><br><span class="line"><span class="comment">// let c = arr[2]</span></span><br><span class="line"><span class="keyword">let</span> [a,b,c] = arr</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a,b,c)</span><br></pre></td></tr></table></figure>

<p>对象解构</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> person = &#123;</span><br><span class="line"><span class="attr">name</span>: <span class="string">&quot;jack&quot;</span>,</span><br><span class="line"><span class="attr">age</span>: <span class="number">21</span>,</span><br><span class="line"><span class="attr">language</span>: [<span class="string">&quot;java&quot;</span>, <span class="string">&quot;js&quot;</span>, <span class="string">&quot;css&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> name = person.<span class="property">name</span></span><br><span class="line"><span class="keyword">const</span> age = person.<span class="property">age</span></span><br><span class="line"><span class="keyword">const</span> language = person.<span class="property">language</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123;name,age,language&#125; = person</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(name,age,language)</span><br><span class="line"><span class="comment">// 别名解构</span></span><br><span class="line"><span class="keyword">const</span> &#123;name：userName,<span class="attr">age</span>:superAge,language&#125; = person</span><br></pre></td></tr></table></figure>

<p>4.字符串扩展</p>
<p>字符串API</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&quot;hello.wue&quot;</span><span class="string">&quot;;</span></span><br><span class="line"><span class="string">console.log(str.startswith(hello&quot;</span>))<span class="comment">//trui</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">endswith</span>(<span class="string">&quot;.vue&quot;</span>)<span class="comment">//true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">includes</span>(<span class="string">&quot;e&quot;</span>));<span class="comment">//true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">includes</span>(<span class="string">&quot;hello&quot;</span>)<span class="comment">//true</span></span><br></pre></td></tr></table></figure>

<p>字符串模板</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 反引号 `</span><br><span class="line">//1、多行字符串</span><br><span class="line">let ss = `</span><br><span class="line">&lt;div&gt;</span><br><span class="line">&lt;span&gt;hello world&lt;span&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">`</span><br><span class="line">console.log(ss)</span><br></pre></td></tr></table></figure>

<p>字符串插入变量</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//2、字符串插入变量和表达式。变量名写在$&#123;&#125;中，$&#123;&#125;中可以放入JavaScript表达式。</span></span><br><span class="line"><span class="keyword">let</span> info = 我是$&#123;abc&#125;，今年$&#123;age+<span class="number">10</span>&#125;了,我想说$&#123;<span class="title function_">fun</span>()&#125;;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">logo</span>(info)</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fun</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;hello&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>5.函数优化</p>
<p>5.1 函数参数默认值</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 在ES6以前，我们无法给一个函数的设置默认值，只能采用变通写去:</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">add</span>(<span class="params">a，b</span>)&#123;</span><br><span class="line">/判斯b是否为空，为空就拾认值<span class="number">1</span></span><br><span class="line">b  = b || <span class="number">1</span> ;</span><br><span class="line"><span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 传一个参数</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">add</span>(<span class="number">10</span>));</span><br><span class="line"><span class="comment">// 现在可以这么写：直接给参数写上默认值，没传就会自动使用默认值</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">add</span>(<span class="params">a，b=<span class="number">1</span></span>)&#123;</span><br><span class="line"><span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>5.2 不定参数</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fun</span>(<span class="params">..values</span>)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(values.<span class="property">length</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fun</span>(<span class="number">1</span>，<span class="number">2</span>) <span class="comment">//2</span></span><br><span class="line"><span class="title function_">fun</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>) <span class="comment">//4</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>5.3 箭头函数</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 原来声明一个函数</span></span><br><span class="line"><span class="keyword">var</span> func = <span class="keyword">function</span> (<span class="params">obj</span>) &#123;</span><br><span class="line"> <span class="variable language_">console</span>.<span class="title function_">log</span>(obj)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 现在</span></span><br><span class="line"><span class="keyword">var</span> <span class="title function_">funcNew</span> = obj =&gt; <span class="variable language_">console</span>.<span class="title function_">log</span>(obj)</span><br><span class="line"><span class="comment">// 原来</span></span><br><span class="line"><span class="keyword">var</span> sum = <span class="keyword">function</span>(<span class="params">a,b</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> a+b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 现在</span></span><br><span class="line"><span class="keyword">var</span> <span class="title function_">sum2</span> = (<span class="params">a,b</span>) =&gt; a+b;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span>  <span class="title function_">hello</span> (person) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;hello,&quot;</span>+person.<span class="property">name</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 箭头函数，加解构表达式</span></span><br><span class="line"><span class="keyword">var</span> <span class="title function_">hello2</span> = (<span class="params">&#123;name&#125;</span>) =&gt; <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;hello,&quot;</span>+person.<span class="property">name</span>)</span><br><span class="line"><span class="title function_">hello2</span>(person)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>6.对象优化</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> person = &#123;</span><br><span class="line"><span class="attr">name</span>: <span class="string">&quot;jack&quot;</span>,</span><br><span class="line"><span class="attr">age</span>: <span class="number">21</span>,</span><br><span class="line"><span class="attr">language</span>: [<span class="string">&quot;java&quot;</span>, <span class="string">&quot;js&quot;</span>, <span class="string">&quot;css&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Object</span>.<span class="title function_">keys</span>(person));/[<span class="string">&quot;name&quot;</span>,<span class="string">&quot;age&quot;</span>，<span class="string">&quot;language&quot;</span>l</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Object</span>.<span class="title function_">values</span>(person));<span class="number">77</span>[<span class="string">&quot;jack&quot;</span>， <span class="number">21</span>，<span class="title class_">Array</span>(<span class="number">3</span>)]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Object</span>.<span class="title function_">entries</span>(person));<span class="comment">//[Array(2)，Array(2)，Array(2)]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> target = &#123;<span class="attr">a</span>:<span class="number">1</span>&#125;</span><br><span class="line"><span class="keyword">const</span> source1 = &#123;<span class="attr">b</span>:<span class="number">2</span>&#125;</span><br><span class="line"><span class="keyword">const</span> source2 = &#123;<span class="attr">c</span>:<span class="number">3</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//&#123;a:1,b:2,c:3&#125;</span></span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">assign</span>(target,source1,source2)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 声明对象简写</span></span><br><span class="line"><span class="keyword">const</span> age = <span class="number">23</span></span><br><span class="line"><span class="keyword">const</span> name = <span class="string">&quot;张三&quot;</span></span><br><span class="line"><span class="keyword">const</span> person1 =  &#123;<span class="attr">age</span>:age,<span class="attr">name</span>:name&#125;</span><br><span class="line"><span class="comment">// 属性名和变量值一样 直接一下简写</span></span><br><span class="line"><span class="keyword">const</span> person2 = &#123;age,name&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 对象函数属性简写</span></span><br><span class="line"><span class="keyword">let</span> person3 = &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&quot;jack&quot;</span>,</span><br><span class="line">    <span class="attr">eat</span>: <span class="keyword">function</span> (<span class="params">food</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span> + <span class="string">&quot;在吃&quot;</span> + food)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 箭头函数不能用this, 用 对象.属性</span></span><br><span class="line">    <span class="attr">eat</span>: <span class="function"><span class="params">foot</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(person3.<span class="property">name</span> + <span class="string">&quot;在吃&quot;</span> + food),</span><br><span class="line">    eat3 (foot) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span> + <span class="string">&quot;在吃&quot;</span> + food)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 对象扩展运算符</span></span><br><span class="line"><span class="comment">// 拷贝对象（深拷贝）</span></span><br><span class="line"><span class="keyword">let</span> p1 = &#123;<span class="attr">name</span>:<span class="string">&quot;tom&quot;</span>,<span class="attr">age</span>:<span class="number">12</span>&#125;</span><br><span class="line"><span class="keyword">let</span> someone = &#123;...person1&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(someone) <span class="comment">// &#123;name:&quot;tom&quot;,age:12&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 合并对象</span></span><br><span class="line"><span class="keyword">let</span> age1 = &#123;<span class="attr">age</span>:<span class="number">12</span>&#125;</span><br><span class="line"><span class="keyword">let</span> name1 = &#123;<span class="attr">name</span>:<span class="string">&quot;tom&quot;</span>&#125;</span><br><span class="line"><span class="keyword">let</span> p2 = &#123;<span class="attr">name1</span>:<span class="string">&quot;am&quot;</span>&#125;</span><br><span class="line"> p2 = &#123;...age1,...name1&#125; </span><br></pre></td></tr></table></figure>



<p>7.map 和 reduce</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//数组中新增了map和reduce 方法</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//map():接收一个函数，将原数组中的所有元素用这个函数处理后放入新数组返回</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arr = [<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;20&#x27;</span>,<span class="string">&#x27;-3&#x27;</span>,<span class="string">&#x27;222&#x27;</span>]</span><br><span class="line"></span><br><span class="line">arr = arr.<span class="title function_">map</span>(<span class="function">(<span class="params">item</span>)=&gt;</span>&#123;item*<span class="number">2</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// reduce() 为数组中的每个元素一次执行回调函数，不包括数组中被删除或从未被赋值的元素</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// arr.reduce(callback,[initialValue])</span></span><br><span class="line"></span><br><span class="line"><span class="number">1.</span><span class="title function_">previousValue</span>(上一次调用回调返回的值，或者是提供的初始值（initialvalue）</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span><span class="title function_">currentvalue</span>(数组中当前被处理的元素)</span><br><span class="line"><span class="number">3.</span>index（当前元素在数组中的素引)</span><br><span class="line"><span class="number">4.</span>array (调用reduce的数组)</span><br><span class="line"></span><br><span class="line">arr.<span class="title function_">reduce</span>(<span class="function">(<span class="params">a,b</span>)=&gt;</span>&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;上次值&quot;</span>+a)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;当前值&quot;</span>+b)</span><br><span class="line"><span class="keyword">return</span> a+b</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>



<p>8.Promise (异步编排)</p>
<p>问题：ajax 一步一步的递归调用</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1.Promise 可以封装异步操作</span></span><br><span class="line"><span class="keyword">let</span> p = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>)=&gt;</span>&#123;</span><br><span class="line">	<span class="comment">// 1.异步操作</span></span><br><span class="line">	&amp;.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">	<span class="attr">url</span>:<span class="string">&quot;mock/user.json&quot;</span>,</span><br><span class="line">	<span class="attr">success</span>:<span class="keyword">function</span>(<span class="params">data</span>)&#123;</span><br><span class="line">		<span class="title function_">resolve</span>(data)</span><br><span class="line">	&#125;,</span><br><span class="line">	<span class="attr">error</span>:<span class="keyword">function</span>(<span class="params">err</span>)&#123;</span><br><span class="line">		<span class="title function_">reject</span>(err)</span><br><span class="line">	&#125;</span><br><span class="line">	&#125;)</span><br><span class="line">	<span class="keyword">if</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">		<span class="title function_">resolve</span>(data)</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="title function_">reject</span>(error)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;)</span><br><span class="line">p.<span class="title function_">then</span>(<span class="function">(<span class="params">obj</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">return</span>	<span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>)=&gt;</span>&#123;</span><br><span class="line">	<span class="comment">// 1.异步操作</span></span><br><span class="line">	&amp;.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">	<span class="attr">url</span>:<span class="string">`mock/user_corse_<span class="subst">$&#123;obj.id&#125;</span>.json`</span>,</span><br><span class="line">	<span class="attr">success</span>:<span class="keyword">function</span>(<span class="params">data</span>)&#123;</span><br><span class="line">		<span class="title function_">resolve</span>(data)</span><br><span class="line">	&#125;,</span><br><span class="line">	<span class="attr">error</span>:<span class="keyword">function</span>(<span class="params">err</span>)&#123;</span><br><span class="line">		<span class="title function_">reject</span>(err)</span><br><span class="line">	&#125;</span><br><span class="line">	&#125;)</span><br><span class="line">&#125;)</span><br><span class="line">&#125;).<span class="title function_">catch</span>((err)&#123;</span><br><span class="line"></span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>)=&gt;</span>&#123;</span><br><span class="line"><span class="comment">// 1.异步操作</span></span><br><span class="line">	&amp;.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">	<span class="attr">url</span>:<span class="string">`mock/cors_score_<span class="subst">$&#123;data.id&#125;</span>.json`</span>,</span><br><span class="line">	<span class="attr">success</span>:<span class="keyword">function</span>(<span class="params">data</span>)&#123;</span><br><span class="line">		<span class="variable language_">console</span>.<span class="title function_">log</span>(data)</span><br><span class="line">	&#125;,</span><br><span class="line">	<span class="attr">error</span>:<span class="keyword">function</span>(<span class="params">err</span>)&#123;</span><br><span class="line">		<span class="variable language_">console</span>.<span class="title function_">log</span>(err)</span><br><span class="line">	&#125;</span><br><span class="line">	&#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">get</span>(<span class="params">url, data</span>)&#123;	</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Proeise</span>((resolve,reject)-&gt;&#123;</span><br><span class="line">	$.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">		<span class="attr">url</span>: url,</span><br><span class="line">		<span class="attr">data</span>: data,</span><br><span class="line">		<span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">data</span>)&#123;</span><br><span class="line">			<span class="title function_">resolve</span>(data);</span><br><span class="line">		&#125;,</span><br><span class="line">		<span class="attr">error</span>: <span class="keyword">function</span> (<span class="params">err</span>)&#123;</span><br><span class="line">			<span class="title function_">reject</span>(err)</span><br><span class="line">        &#125;)</span><br><span class="line">&#125;); </span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">get</span>(<span class="string">&quot;mock/user.json&quot;</span>)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">get</span>(<span class="string">`mock/user_corse_<span class="subst">$&#123;data.id&#125;</span>.json`</span>)</span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">get</span>(<span class="string">`mock/cors_score_<span class="subst">$&#123;data.id&#125;</span>.json`</span>)</span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>)=&gt;</span>&#123;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(data)</span><br><span class="line">&#125;).<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>)=&gt;</span>&#123;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(err)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>9.模块化</p>
<p>9.1 什么是模块化</p>
<p>模块化就是把代码进行拆分，方便重复利用。类似java中的导包，要使用一个包，必须先导包。而s中没有包的概念，换来的是模块。<br>模块功能主要由两个命令构成.’export”和”import’.<br>export：命令用于规定模块的对外接口。<br>import：命令用于导入其他模块提供的功能。</p>
<p>9.2  export 导出</p>
<p>给导入另外起名，使用以下格式</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  sum (a,b) &#123;</span><br><span class="line">    <span class="keyword">return</span> a+b;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>9.3  import 导入</p>
<h4 id="vue"><a href="#vue" class="headerlink" title="vue"></a>vue</h4><h5 id="MVVM"><a href="#MVVM" class="headerlink" title="MVVM"></a>MVVM</h5><p>todo</p>
<p>官网看引入教程</p>
<h4 id="nodejs"><a href="#nodejs" class="headerlink" title="nodejs"></a>nodejs</h4><h4 id=""><a href="#" class="headerlink" title=""></a></h4><hr>
<h2 id="开始搭建前端模块"><a href="#开始搭建前端模块" class="headerlink" title="开始搭建前端模块"></a>开始搭建前端模块</h2><h3 id="Vue模块化开发"><a href="#Vue模块化开发" class="headerlink" title="Vue模块化开发"></a>Vue模块化开发</h3><h4 id="搭建Vue脚手架"><a href="#搭建Vue脚手架" class="headerlink" title="搭建Vue脚手架"></a>搭建Vue脚手架</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">全局安装webpack</span></span><br><span class="line">npm install webpack -g </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">全局安装Vue的脚手架</span></span><br><span class="line">npm install -g @vue/cli-init</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">新建一个项目工作文件，然后vue脚手架使用webpack模块初始化一个(自己的项目名称)</span></span><br><span class="line">vue init webpack super-mall-vue</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动新建好的vue项目</span></span><br><span class="line">npm run dev</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">打包项目</span></span><br><span class="line">npm run build</span><br></pre></td></tr></table></figure>

<h4 id="创建一个组件"><a href="#创建一个组件" class="headerlink" title="创建一个组件"></a>创建一个组件</h4><p>1.在src&#x2F;components 下创建vue 文件，内容是vue的基本三大属性</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  </span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style lang=&quot;sass&quot; scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>2.在src&#x2F;router 下，编辑index.js，添加一下代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import hello from &#x27;@/components/&#123;你的文件名&#125;&#x27;</span><br><span class="line"></span><br><span class="line">export default new Router(&#123;</span><br><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      path:&#x27;/&#123;你的文件名&#125;&#x27;,</span><br><span class="line">      name:&#x27;&#123;你的组件命名&#125;&#x27;,</span><br><span class="line">      component:hello</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h4 id="引用ElementUI"><a href="#引用ElementUI" class="headerlink" title="引用ElementUI"></a>引用ElementUI</h4><h5 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i element-ui</span><br></pre></td></tr></table></figure>

<h5 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h5><p>在 main.js 中写入以下内容：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ElementUI</span> <span class="keyword">from</span> <span class="string">&#x27;element-ui&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;element-ui/lib/theme-chalk/index.css&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">ElementUI</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">  <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">  <span class="attr">render</span>: <span class="function"><span class="params">h</span> =&gt;</span> <span class="title function_">h</span>(<span class="title class_">App</span>)</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="使用elementUI-提供的布局以及配置动态路由菜单"><a href="#使用elementUI-提供的布局以及配置动态路由菜单" class="headerlink" title="使用elementUI 提供的布局以及配置动态路由菜单"></a>使用elementUI 提供的布局以及配置动态路由菜单</h3><p>1.替换App.vue 中的内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;el-container style=&quot;height: 500px; border: 1px solid #eee&quot;&gt;</span><br><span class="line">  &lt;el-aside width=&quot;200px&quot; style=&quot;background-color: rgb(238, 241, 246)&quot;&gt;</span><br><span class="line">    &lt;el-menu :default-openeds=&quot;[&#x27;1&#x27;, &#x27;3&#x27;]&quot; router=&#x27;true&#x27;&gt;</span><br><span class="line">      &lt;el-submenu index=&quot;1&quot;&gt;</span><br><span class="line">        &lt;template slot=&quot;title&quot;&gt;&lt;i class=&quot;el-icon-message&quot;&gt;&lt;/i&gt;导航一&lt;/template&gt;</span><br><span class="line">        &lt;el-menu-item-group&gt;</span><br><span class="line">          &lt;template slot=&quot;title&quot;&gt;分组一&lt;/template&gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;1-1&quot;&gt;选项1&lt;/el-menu-item&gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;1-2&quot;&gt;选项2&lt;/el-menu-item&gt;</span><br><span class="line">        &lt;/el-menu-item-group&gt;</span><br><span class="line">        &lt;el-menu-item-group title=&quot;分组2&quot;&gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;1-3&quot;&gt;选项3&lt;/el-menu-item&gt;</span><br><span class="line">        &lt;/el-menu-item-group&gt;</span><br><span class="line">        &lt;el-submenu index=&quot;1-4&quot;&gt;</span><br><span class="line">          &lt;template slot=&quot;title&quot;&gt;选项4&lt;/template&gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;1-4-1&quot;&gt;选项4-1&lt;/el-menu-item&gt;</span><br><span class="line">        &lt;/el-submenu&gt;</span><br><span class="line">      &lt;/el-submenu&gt;</span><br><span class="line">      &lt;el-submenu index=&quot;2&quot;&gt;</span><br><span class="line">        &lt;template slot=&quot;title&quot;&gt;&lt;i class=&quot;el-icon-menu&quot;&gt;&lt;/i&gt;导航二&lt;/template&gt;</span><br><span class="line">        &lt;el-menu-item-group&gt;</span><br><span class="line">          &lt;template slot=&quot;title&quot;&gt;分组一&lt;/template&gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;2-1&quot;&gt;选项1&lt;/el-menu-item&gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;2-2&quot;&gt;选项2&lt;/el-menu-item&gt;</span><br><span class="line">        &lt;/el-menu-item-group&gt;</span><br><span class="line">        &lt;el-menu-item-group title=&quot;分组2&quot;&gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;2-3&quot;&gt;选项3&lt;/el-menu-item&gt;</span><br><span class="line">        &lt;/el-menu-item-group&gt;</span><br><span class="line">        &lt;el-submenu index=&quot;2-4&quot;&gt;</span><br><span class="line">          &lt;template slot=&quot;title&quot;&gt;选项4&lt;/template&gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;2-4-1&quot;&gt;选项4-1&lt;/el-menu-item&gt;</span><br><span class="line">        &lt;/el-submenu&gt;</span><br><span class="line">      &lt;/el-submenu&gt;</span><br><span class="line">      &lt;el-submenu index=&quot;3&quot;&gt;</span><br><span class="line">        &lt;template slot=&quot;title&quot;&gt;&lt;i class=&quot;el-icon-setting&quot;&gt;&lt;/i&gt;导航三&lt;/template&gt;</span><br><span class="line">        &lt;el-menu-item-group&gt;</span><br><span class="line">          &lt;template slot=&quot;title&quot;&gt;分组一&lt;/template&gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;3-1&quot;&gt;选项1&lt;/el-menu-item&gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;3-2&quot;&gt;选项2&lt;/el-menu-item&gt;</span><br><span class="line">        &lt;/el-menu-item-group&gt;</span><br><span class="line">        &lt;el-menu-item-group title=&quot;分组2&quot;&gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;3-3&quot;&gt;选项3&lt;/el-menu-item&gt;</span><br><span class="line">        &lt;/el-menu-item-group&gt;</span><br><span class="line">        &lt;el-submenu index=&quot;3-4&quot;&gt;</span><br><span class="line">          &lt;template slot=&quot;title&quot;&gt;选项4&lt;/template&gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;3-4-1&quot;&gt;选项4-1&lt;/el-menu-item&gt;</span><br><span class="line">        &lt;/el-submenu&gt;</span><br><span class="line">      &lt;/el-submenu&gt;</span><br><span class="line">    &lt;/el-menu&gt;</span><br><span class="line">  &lt;/el-aside&gt;</span><br><span class="line"></span><br><span class="line">  &lt;el-container&gt;</span><br><span class="line">    &lt;el-header style=&quot;text-align: right; font-size: 12px&quot;&gt;</span><br><span class="line">      &lt;el-dropdown&gt;</span><br><span class="line">        &lt;i class=&quot;el-icon-setting&quot; style=&quot;margin-right: 15px&quot;&gt;&lt;/i&gt;</span><br><span class="line">        &lt;el-dropdown-menu slot=&quot;dropdown&quot;&gt;</span><br><span class="line">          &lt;el-dropdown-item&gt;查看&lt;/el-dropdown-item&gt;</span><br><span class="line">          &lt;el-dropdown-item&gt;新增&lt;/el-dropdown-item&gt;</span><br><span class="line">          &lt;el-dropdown-item&gt;删除&lt;/el-dropdown-item&gt;</span><br><span class="line">        &lt;/el-dropdown-menu&gt;</span><br><span class="line">      &lt;/el-dropdown&gt;</span><br><span class="line">      &lt;span&gt;王小虎&lt;/span&gt;</span><br><span class="line">    &lt;/el-header&gt;</span><br><span class="line"></span><br><span class="line">    &lt;el-main&gt;</span><br><span class="line">      &lt;el-table :data=&quot;tableData&quot;&gt;</span><br><span class="line">        &lt;el-table-column prop=&quot;date&quot; label=&quot;日期&quot; width=&quot;140&quot;&gt;</span><br><span class="line">        &lt;/el-table-column&gt;</span><br><span class="line">        &lt;el-table-column prop=&quot;name&quot; label=&quot;姓名&quot; width=&quot;120&quot;&gt;</span><br><span class="line">        &lt;/el-table-column&gt;</span><br><span class="line">        &lt;el-table-column prop=&quot;address&quot; label=&quot;地址&quot;&gt;</span><br><span class="line">        &lt;/el-table-column&gt;</span><br><span class="line">      &lt;/el-table&gt;</span><br><span class="line">    &lt;/el-main&gt;</span><br><span class="line">  &lt;/el-container&gt;</span><br><span class="line">&lt;/el-container&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">      const item = &#123;</span><br><span class="line">        date: &#x27;2016-05-02&#x27;,</span><br><span class="line">        name: &#x27;王小虎&#x27;,</span><br><span class="line">        address: &#x27;上海市普陀区金沙江路 1518 弄&#x27;</span><br><span class="line">      &#125;;</span><br><span class="line">      return &#123;</span><br><span class="line">        tableData: Array(20).fill(item)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">  .el-header &#123;</span><br><span class="line">    background-color: #B3C0D1;</span><br><span class="line">    color: #333;</span><br><span class="line">    line-height: 60px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .el-aside &#123;</span><br><span class="line">    color: #333;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>2.删除<code>&lt;el-main&gt;</code>中的内容，替换成<router-link/>的标签，然后在<el-menu>中加入属性router&#x3D;”true”,最后<el-menu-item>标签中加入route&#x3D;’&#x2F;{Vue Router 路径对象}’，是为了点击菜单达到替换内容的目的</p>
<h3 id="VSCode-加入vue代码片段"><a href="#VSCode-加入vue代码片段" class="headerlink" title="VSCode,加入vue代码片段"></a>VSCode,加入vue代码片段</h3><p>1.点击文件-首选项-用户代码-点击新建代码片段-取名vue.json,然后替换一下内容</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;Print to console&quot;</span>: &#123;</span><br><span class="line">	<span class="string">&quot;prefix&quot;</span>: <span class="string">&quot;vue&quot;</span>,</span><br><span class="line">	<span class="string">&quot;body&quot;</span>: [</span><br><span class="line">		<span class="string">&quot;&lt;template&gt;&quot;</span>,</span><br><span class="line">		<span class="string">&quot;  &lt;div&gt;&quot;</span>,</span><br><span class="line">		<span class="string">&quot;  &lt;/div&gt;&quot;</span>,</span><br><span class="line">		<span class="string">&quot;&lt;/template&gt;&quot;</span>,</span><br><span class="line">		<span class="string">&quot;&quot;</span>,</span><br><span class="line">		<span class="string">&quot;&lt;script&gt;&quot;</span>,</span><br><span class="line">		<span class="string">&quot;  export default &#123;&quot;</span>,</span><br><span class="line">		<span class="string">&quot;  data() &#123;&quot;</span>,</span><br><span class="line">		<span class="string">&quot;    return &#123;&quot;</span>,</span><br><span class="line">		<span class="string">&quot;&quot;</span>,</span><br><span class="line">		<span class="string">&quot;    &#125;;&quot;</span>,</span><br><span class="line">		<span class="string">&quot;  &#125;,&quot;</span>,</span><br><span class="line">		<span class="string">&quot;  created() &#123;&quot;</span>,</span><br><span class="line">		<span class="string">&quot;&quot;</span>,</span><br><span class="line">		<span class="string">&quot;  &#125;,&quot;</span>,</span><br><span class="line">		<span class="string">&quot;  mounted() &#123;&quot;</span>,</span><br><span class="line">		<span class="string">&quot;&quot;</span>,</span><br><span class="line">		<span class="string">&quot;  &#125;,&quot;</span>,</span><br><span class="line">		<span class="string">&quot;  methods: &#123;&quot;</span>,</span><br><span class="line">		<span class="string">&quot;&quot;</span>,</span><br><span class="line">		<span class="string">&quot;  &#125;,&quot;</span>,</span><br><span class="line">		<span class="string">&quot;&#125;&quot;</span>,</span><br><span class="line">		<span class="string">&quot;&lt;/script&gt;&quot;</span>,</span><br><span class="line">		<span class="string">&quot;&quot;</span>,</span><br><span class="line">		<span class="string">&quot;&lt;style lang=&#x27;scss&#x27; scoped&gt;&quot;</span>,</span><br><span class="line">		<span class="string">&quot;$4&quot;</span>,</span><br><span class="line">		<span class="string">&quot;&lt;/style&gt;&quot;</span></span><br><span class="line">	],</span><br><span class="line">	<span class="string">&quot;description&quot;</span>: <span class="string">&quot;Log output to console&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h2 id="商品服务"><a href="#商品服务" class="headerlink" title="商品服务"></a>商品服务</h2><h3 id="三级分类"><a href="#三级分类" class="headerlink" title="三级分类"></a>三级分类</h3><h4 id="查询树形展示三级分类数据"><a href="#查询树形展示三级分类数据" class="headerlink" title="查询树形展示三级分类数据"></a>查询树形展示三级分类数据</h4><p>1.在PMS库中的pms_category表，导入菜单分类数据</p>
<p>2.然后在product模块中，对应的service文件中编写三级分类业务逻辑</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> List&lt;CategoryEntity&gt; <span class="title function_">menu</span><span class="params">()</span> &#123;</span><br><span class="line">       List&lt;CategoryEntity&gt; allList = baseMapper.selectList(<span class="literal">null</span>);</span><br><span class="line">       <span class="comment">// 找到所有的一级分类</span></span><br><span class="line">       List&lt;CategoryEntity&gt; level1Nenus = allList.stream().filter(categoryEntity -&gt; categoryEntity.getParentCid() == <span class="number">0</span></span><br><span class="line">       ).map((item) -&gt; &#123;</span><br><span class="line">           item.setChildren(getChildren(item, allList));</span><br><span class="line">           <span class="keyword">return</span> item;</span><br><span class="line">       &#125;).sorted((item1, item2) -&gt; &#123;</span><br><span class="line">           <span class="keyword">return</span> (item1.getSort() == <span class="literal">null</span> ? <span class="number">0</span> : item1.getSort()) - (item2.getSort() == <span class="literal">null</span> ? <span class="number">0</span> : item2.getSort());</span><br><span class="line">       &#125;).collect(Collectors.toList());</span><br><span class="line">       <span class="keyword">return</span> level1Nenus;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> List&lt;CategoryEntity&gt; <span class="title function_">getChildren</span><span class="params">(CategoryEntity currentItem, List&lt;CategoryEntity&gt; allList)</span> &#123;</span><br><span class="line">       List&lt;CategoryEntity&gt; collect = allList.stream().filter((item) -&gt; &#123;</span><br><span class="line">           <span class="keyword">return</span> item.getParentCid().equals(currentItem.getCatId());</span><br><span class="line">       &#125;).map((item) -&gt; &#123;</span><br><span class="line">           item.setChildren(getChildren(item, allList));</span><br><span class="line">           <span class="keyword">return</span> item;</span><br><span class="line">       &#125;).sorted((item1, item2) -&gt; &#123;</span><br><span class="line">           <span class="keyword">return</span> (item1.getSort() == <span class="literal">null</span> ? <span class="number">0</span> : item1.getSort()) - (item2.getSort() == <span class="literal">null</span> ? <span class="number">0</span> : item2.getSort());</span><br><span class="line">       &#125;).collect(Collectors.toList());</span><br><span class="line">       <span class="keyword">return</span> collect;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<h4 id="配置网关路由与路径重写和网关统一配置跨域"><a href="#配置网关路由与路径重写和网关统一配置跨域" class="headerlink" title="配置网关路由与路径重写和网关统一配置跨域"></a>配置网关路由与路径重写和网关统一配置跨域</h4><p>1.启动前端代码，再启动后端服务，进入系统的系统管理-&gt;菜单管理，添加商品系统的一级目录，然后再添加这个一级目录的分类维护的子目录，path为product&#x2F;category。</p>
<p>2.然后根据这个path的属性，在前端src&#x2F;views&#x2F;modules 下创建一个product文件夹，然后在这个文件夹下创建category.vue 文件，文件内容如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;el-tree :data=&quot;data&quot; :props=&quot;defaultProps&quot; @node-click=&quot;handleNodeClick&quot;&gt;&lt;/el-tree&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        data: [&#123;</span><br><span class="line">          label: &#x27;一级 1&#x27;,</span><br><span class="line">          children: [&#123;</span><br><span class="line">            label: &#x27;二级 1-1&#x27;,</span><br><span class="line">            children: [&#123;</span><br><span class="line">              label: &#x27;三级 1-1-1&#x27;</span><br><span class="line">            &#125;]</span><br><span class="line">          &#125;]</span><br><span class="line">        &#125;, &#123;</span><br><span class="line">          label: &#x27;一级 2&#x27;,</span><br><span class="line">          children: [&#123;</span><br><span class="line">            label: &#x27;二级 2-1&#x27;,</span><br><span class="line">            children: [&#123;</span><br><span class="line">              label: &#x27;三级 2-1-1&#x27;</span><br><span class="line">            &#125;]</span><br><span class="line">          &#125;, &#123;</span><br><span class="line">            label: &#x27;二级 2-2&#x27;,</span><br><span class="line">            children: [&#123;</span><br><span class="line">              label: &#x27;三级 2-2-1&#x27;</span><br><span class="line">            &#125;]</span><br><span class="line">          &#125;]</span><br><span class="line">        &#125;, &#123;</span><br><span class="line">          label: &#x27;一级 3&#x27;,</span><br><span class="line">          children: [&#123;</span><br><span class="line">            label: &#x27;二级 3-1&#x27;,</span><br><span class="line">            children: [&#123;</span><br><span class="line">              label: &#x27;三级 3-1-1&#x27;</span><br><span class="line">            &#125;]</span><br><span class="line">          &#125;, &#123;</span><br><span class="line">            label: &#x27;二级 3-2&#x27;,</span><br><span class="line">            children: [&#123;</span><br><span class="line">              label: &#x27;三级 3-2-1&#x27;</span><br><span class="line">            &#125;]</span><br><span class="line">          &#125;]</span><br><span class="line">        &#125;],</span><br><span class="line">        defaultProps: &#123;</span><br><span class="line">          children: &#x27;children&#x27;,</span><br><span class="line">          label: &#x27;label&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      handleNodeClick(data) &#123;</span><br><span class="line">        console.log(data);</span><br><span class="line">      &#125;,</span><br><span class="line">      getMenu()&#123;</span><br><span class="line">        this.$http(&#123;</span><br><span class="line">          url: this.$http.adornUrl(&#x27;/product/category/menu&#x27;),</span><br><span class="line">          method: &#x27;get&#x27;</span><br><span class="line">        &#125;).then((&#123;data&#125;) =&gt; &#123;</span><br><span class="line">          console.log(&#x27;菜单&#x27;+data)</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">     activated () &#123;</span><br><span class="line">      this.getMenu()</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>3.配置好请求，打开页面，发现请求404，我们要配置项目父目录下static-&gt;config的index.js 文件中的api请求接口路径，把所有服务请求都提交到网关服务去，修改如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 开发环境</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">;(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">SITE_CONFIG</span> = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// api接口请求地址</span></span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">SITE_CONFIG</span>[<span class="string">&#x27;baseUrl&#x27;</span>] = <span class="string">&#x27;http://localhost:88/api&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// cdn地址 = 域名 + 版本号</span></span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">SITE_CONFIG</span>[<span class="string">&#x27;domain&#x27;</span>]  = <span class="string">&#x27;./&#x27;</span>; <span class="comment">// 域名</span></span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">SITE_CONFIG</span>[<span class="string">&#x27;version&#x27;</span>] = <span class="string">&#x27;&#x27;</span>;   <span class="comment">// 版本号(年月日时分)</span></span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">SITE_CONFIG</span>[<span class="string">&#x27;cdnUrl&#x27;</span>]  = <span class="variable language_">window</span>.<span class="property">SITE_CONFIG</span>.<span class="property">domain</span> + <span class="variable language_">window</span>.<span class="property">SITE_CONFIG</span>.<span class="property">version</span>;</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>4.配置好之后，还需要配置网关模块的配置文件，修改如下：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">gateway:</span></span><br><span class="line">      <span class="attr">routes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">product_route</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">lb://supermall-product</span></span><br><span class="line">          <span class="attr">predicates:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">Path=/api/product/**</span></span><br><span class="line">          <span class="attr">filters:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">RewritePath=/api/(?&lt;segment&gt;.*),/$\&#123;segment&#125;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">admin_route</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">lb://renren-fast</span></span><br><span class="line">          <span class="attr">predicates:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">Path=/api/**</span></span><br><span class="line">          <span class="attr">filters:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">RewritePath=/api/(?&lt;segment&gt;.*),/renren-fast/$\&#123;segment&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>5.再把后端管理项目加入到nacos 服务发现中，配置nacos服务发现，重启网关服务。</p>
<p>6.但是我们发现，请求给了403，看控制台报错是没有配置跨域策略，所以我们必须在网关配置跨域策略，加入以下文件</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.cors.CorsConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.cors.reactive.CorsWebFilter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.cors.reactive.UrlBasedCorsConfigurationSource;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SupermallCorsConfiguration</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> CorsWebFilter <span class="title function_">corsWebFilter</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">UrlBasedCorsConfigurationSource</span> <span class="variable">source</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UrlBasedCorsConfigurationSource</span>();</span><br><span class="line"></span><br><span class="line">        <span class="type">CorsConfiguration</span> <span class="variable">corsConfiguration</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CorsConfiguration</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1、配置跨域</span></span><br><span class="line">        corsConfiguration.addAllowedHeader(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        corsConfiguration.addAllowedMethod(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        corsConfiguration.addAllowedOrigin(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        <span class="comment">// 允许携带cookie</span></span><br><span class="line">        corsConfiguration.setAllowCredentials(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        source.registerCorsConfiguration(<span class="string">&quot;/**&quot;</span>,corsConfiguration);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">CorsWebFilter</span>(source);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>7.重新请求，发现还是403，看了错误显示跨域配置了多个值，导致的报错，经过查找发现，后台管理服务中也增加了跨域策略，所以我们需要删除它，在io.renren.config目录下的CorsConfig 。</p>
<h4 id="树型展示三级分类数据"><a href="#树型展示三级分类数据" class="headerlink" title="树型展示三级分类数据"></a>树型展示三级分类数据</h4><p>1.修改category.vue文件，如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;el-tree :data=&quot;menus&quot; :props=&quot;defaultProps&quot; @node-click=&quot;handleNodeClick&quot;&gt;&lt;/el-tree&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        menus: [],</span><br><span class="line">        defaultProps: &#123;</span><br><span class="line">          children: &#x27;children&#x27;,</span><br><span class="line">          label: &#x27;name&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      handleNodeClick(data) &#123;</span><br><span class="line">        console.log(data);</span><br><span class="line">      &#125;,</span><br><span class="line">      getMenu()&#123;</span><br><span class="line">        this.$http(&#123;</span><br><span class="line">          url: this.$http.adornUrl(&#x27;/product/category/menu&#x27;),</span><br><span class="line">          method: &#x27;get&#x27;</span><br><span class="line">        &#125;).then((&#123;data&#125;) =&gt; &#123;</span><br><span class="line">          this.menus = data.data</span><br><span class="line">          console.log(&#x27;菜单=========&#x27;,data.data)</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">     activated () &#123;</span><br><span class="line">      this.getMenu()</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="页面效果"><a href="#页面效果" class="headerlink" title="页面效果"></a>页面效果</h4><p>修改过的页面内容如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;el-tree</span><br><span class="line">    :data=&quot;menus&quot;</span><br><span class="line">    :props=&quot;defaultProps&quot;</span><br><span class="line">    :expand-on-click-node=&quot;false&quot;</span><br><span class="line">    default-expand-all</span><br><span class="line">    show-checkbox</span><br><span class="line">    node-key=&quot;catId&quot;</span><br><span class="line">  &gt;</span><br><span class="line">    &lt;span class=&quot;custom-tree-node&quot; slot-scope=&quot;&#123; node, data &#125;&quot;&gt;</span><br><span class="line">      &lt;span&gt;&#123;&#123; node.label &#125;&#125;&lt;/span&gt;</span><br><span class="line">      &lt;span&gt;</span><br><span class="line">        &lt;el-button</span><br><span class="line">          v-if=&quot;node.level &lt;= 2&quot;</span><br><span class="line">          type=&quot;text&quot;</span><br><span class="line">          size=&quot;mini&quot;</span><br><span class="line">          @click=&quot;() =&gt; append(data)&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          Append</span><br><span class="line">        &lt;/el-button&gt;</span><br><span class="line">        &lt;el-button</span><br><span class="line">          v-if=&quot;node.childNodes.length == 0&quot;</span><br><span class="line">          type=&quot;text&quot;</span><br><span class="line">          size=&quot;mini&quot;</span><br><span class="line">          @click=&quot;() =&gt; remove(node, data)&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          Delete</span><br><span class="line">        &lt;/el-button&gt;</span><br><span class="line">      &lt;/span&gt;</span><br><span class="line">    &lt;/span&gt;&lt;/el-tree</span><br><span class="line">  &gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      menus: [],</span><br><span class="line">      defaultProps: &#123;</span><br><span class="line">        children: &quot;children&quot;,</span><br><span class="line">        label: &quot;name&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    append(data) &#123;</span><br><span class="line">      console.log(&quot;append&quot;, data);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    remove(node, data) &#123;</span><br><span class="line">      console.log(&quot;remove&quot;, node, data);</span><br><span class="line">    &#125;,</span><br><span class="line">    getMenu() &#123;</span><br><span class="line">      this.$http(&#123;</span><br><span class="line">        url: this.$http.adornUrl(&quot;/product/category/menu&quot;),</span><br><span class="line">        method: &quot;get&quot;</span><br><span class="line">      &#125;).then((&#123; data &#125;) =&gt; &#123;</span><br><span class="line">        this.menus = data.data;</span><br><span class="line">        console.log(&quot;菜单=========&quot;, data.data);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  activated() &#123;</span><br><span class="line">    this.getMenu();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h4 id="逻辑删除"><a href="#逻辑删除" class="headerlink" title="逻辑删除"></a>逻辑删除</h4><p>以下为官方操作文档路径</p>
<p><a class="link"   href="https://baomidou.com/guide/logic-delete.html#%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95%EF%BC%9A" >https://baomidou.com/guide/logic-delete.html#%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95%EF%BC%9A<i class="fas fa-external-link-alt"></i></a></p>
<p>1.使用mybatis-plus插件集成的便利性，修改application.yml，加上如下配置</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="comment">#mapper 的路径 ，classpath* 全路径扫描，即java的类路径下；classpath 即 resource 路径下</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:/mapper/**/*.xml</span></span><br><span class="line">  <span class="comment">#配置主键使用规则</span></span><br><span class="line">  <span class="attr">global-config:</span></span><br><span class="line">    <span class="attr">db-config:</span></span><br><span class="line">      <span class="comment">#主键自增</span></span><br><span class="line">      <span class="attr">id-type:</span> <span class="string">auto</span></span><br><span class="line">      <span class="attr">logic-delete-value:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">logic-not-delete-value:</span> <span class="number">0</span></span><br></pre></td></tr></table></figure>

<p>2.修改DO实体类，把逻辑删除的字段加上@TableLogic 注解</p>
<p>3.然后使用postman 调用请求接口，为了看到逻辑删除执行的语句，我们需要修改日志框架的日志级别为debug级别，配置文件加入以下配置</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">level:</span></span><br><span class="line">    <span class="attr">com.centersept.supermall:</span> <span class="string">debug</span></span><br></pre></td></tr></table></figure>

<h4 id="删除效果细化"><a href="#删除效果细化" class="headerlink" title="删除效果细化"></a>删除效果细化</h4><p>category.vue 修改之后的内容为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;el-tree</span><br><span class="line">    :data=&quot;menus&quot;</span><br><span class="line">    :props=&quot;defaultProps&quot;</span><br><span class="line">    :expand-on-click-node=&quot;false&quot;</span><br><span class="line">    show-checkbox</span><br><span class="line">    node-key=&quot;catId&quot;</span><br><span class="line">    :default-expanded-keys=&quot;expandedKey&quot;</span><br><span class="line">  &gt;</span><br><span class="line">    &lt;span class=&quot;custom-tree-node&quot; slot-scope=&quot;&#123; node, data &#125;&quot;&gt;</span><br><span class="line">      &lt;span&gt;&#123;&#123; node.label &#125;&#125;&lt;/span&gt;</span><br><span class="line">      &lt;span&gt;</span><br><span class="line">        &lt;el-button</span><br><span class="line">          v-if=&quot;node.level &lt;= 2&quot;</span><br><span class="line">          type=&quot;text&quot;</span><br><span class="line">          size=&quot;mini&quot;</span><br><span class="line">          @click=&quot;() =&gt; append(data)&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          Append</span><br><span class="line">        &lt;/el-button&gt;</span><br><span class="line">        &lt;el-button</span><br><span class="line">          v-if=&quot;node.childNodes.length == 0&quot;</span><br><span class="line">          type=&quot;text&quot;</span><br><span class="line">          size=&quot;mini&quot;</span><br><span class="line">          @click=&quot;() =&gt; remove(node, data)&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          Delete</span><br><span class="line">        &lt;/el-button&gt;</span><br><span class="line">      &lt;/span&gt;</span><br><span class="line">    &lt;/span&gt;&lt;/el-tree</span><br><span class="line">  &gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      menus: [],</span><br><span class="line">      expandedKey: [],</span><br><span class="line">      defaultProps: &#123;</span><br><span class="line">        children: &quot;children&quot;,</span><br><span class="line">        label: &quot;name&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    append(data) &#123;</span><br><span class="line">      console.log(&quot;append&quot;, data);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    remove(node, data) &#123;</span><br><span class="line">      var ids = [data.catId];</span><br><span class="line">      this.$confirm(`是否删除【$&#123;data.name&#125;】菜单?`, &quot;提示&quot;, &#123;</span><br><span class="line">        confirmButtonText: &quot;确定&quot;,</span><br><span class="line">        cancelButtonText: &quot;取消&quot;,</span><br><span class="line">        type: &quot;warning&quot;</span><br><span class="line">      &#125;)</span><br><span class="line">        .then(() =&gt; &#123;</span><br><span class="line">          this.$http(&#123;</span><br><span class="line">            url: this.$http.adornUrl(&quot;/product/category/delete&quot;),</span><br><span class="line">            method: &quot;post&quot;,</span><br><span class="line">            data: this.$http.adornData(ids, false)</span><br><span class="line">          &#125;).then((&#123; data &#125;) =&gt; &#123;</span><br><span class="line">            this.$message(&#123;</span><br><span class="line">              message: &quot;菜单删除成功&quot;,</span><br><span class="line">              type: &quot;success&quot;</span><br><span class="line">            &#125;);</span><br><span class="line">            //刷新出新的菜单</span><br><span class="line">            this.getMenus();</span><br><span class="line">            //设置需要默认展开的菜单</span><br><span class="line">            this.expandedKey = [node.parent.data.catId];</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(() =&gt; &#123;&#125;);</span><br><span class="line">      console.log(&quot;remove&quot;, node, data);</span><br><span class="line">    &#125;,</span><br><span class="line">    getMenus() &#123;</span><br><span class="line">      this.$http(&#123;</span><br><span class="line">        url: this.$http.adornUrl(&quot;/product/category/menu&quot;),</span><br><span class="line">        method: &quot;get&quot;</span><br><span class="line">      &#125;).then((&#123; data &#125;) =&gt; &#123;</span><br><span class="line">        this.menus = data.data;</span><br><span class="line">        console.log(&quot;菜单=========&quot;, data.data);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  activated() &#123;</span><br><span class="line">    this.getMenus();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h4 id="新增效果完成"><a href="#新增效果完成" class="headerlink" title="新增效果完成"></a>新增效果完成</h4><p>category.vue 修改之后的内容为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;el-tree</span><br><span class="line">      :data=&quot;menus&quot;</span><br><span class="line">      :props=&quot;defaultProps&quot;</span><br><span class="line">      :expand-on-click-node=&quot;false&quot;</span><br><span class="line">      show-checkbox</span><br><span class="line">      node-key=&quot;catId&quot;</span><br><span class="line">      :default-expanded-keys=&quot;expandedKey&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;span class=&quot;custom-tree-node&quot; slot-scope=&quot;&#123; node, data &#125;&quot;&gt;</span><br><span class="line">        &lt;span&gt;&#123;&#123; node.label &#125;&#125;&lt;/span&gt;</span><br><span class="line">        &lt;span&gt;</span><br><span class="line">          &lt;el-button</span><br><span class="line">            v-if=&quot;node.level &lt;= 2&quot;</span><br><span class="line">            type=&quot;text&quot;</span><br><span class="line">            size=&quot;mini&quot;</span><br><span class="line">            @click=&quot;() =&gt; append(data)&quot;</span><br><span class="line">          &gt;</span><br><span class="line">            Append</span><br><span class="line">          &lt;/el-button&gt;</span><br><span class="line">          &lt;el-button</span><br><span class="line">            v-if=&quot;node.childNodes.length == 0&quot;</span><br><span class="line">            type=&quot;text&quot;</span><br><span class="line">            size=&quot;mini&quot;</span><br><span class="line">            @click=&quot;() =&gt; remove(node, data)&quot;</span><br><span class="line">          &gt;</span><br><span class="line">            Delete</span><br><span class="line">          &lt;/el-button&gt;</span><br><span class="line">        &lt;/span&gt;</span><br><span class="line">      &lt;/span&gt;&lt;/el-tree</span><br><span class="line">    &gt;</span><br><span class="line">    &lt;el-dialog</span><br><span class="line">      :title=&quot;title&quot;</span><br><span class="line">      :visible.sync=&quot;dialogVisible&quot;</span><br><span class="line">      width=&quot;30%&quot;</span><br><span class="line">      :close-on-click-modal=&quot;false&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;el-form :model=&quot;category&quot;&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;分类名称&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;category.name&quot; autocomplete=&quot;off&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">      &lt;/el-form&gt;</span><br><span class="line">      &lt;span slot=&quot;footer&quot; class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">        &lt;el-button @click=&quot;dialogVisible = false&quot;&gt;取 消&lt;/el-button&gt;</span><br><span class="line">        &lt;el-button type=&quot;primary&quot; @click=&quot;addCategory&quot;&gt;确 定&lt;/el-button&gt;</span><br><span class="line">      &lt;/span&gt;</span><br><span class="line">    &lt;/el-dialog&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      category: &#123;</span><br><span class="line">        name: &quot;&quot;,</span><br><span class="line">        parentCid: 0,</span><br><span class="line">        catLevel: 0,</span><br><span class="line">        showStatus: 1,</span><br><span class="line">        sort: 0,</span><br><span class="line">        productUnit: &quot;&quot;,</span><br><span class="line">        icon: &quot;&quot;,</span><br><span class="line">        catId: null</span><br><span class="line">      &#125;,</span><br><span class="line">      dialogVisible: false,</span><br><span class="line">      menus: [],</span><br><span class="line">      expandedKey: [],</span><br><span class="line">      defaultProps: &#123;</span><br><span class="line">        children: &quot;children&quot;,</span><br><span class="line">        label: &quot;name&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    append(data) &#123;</span><br><span class="line">      console.log(&quot;append&quot;, data);</span><br><span class="line">      this.dialogVisible = true;</span><br><span class="line">      this.category.parentCid = data.catId;</span><br><span class="line">      this.category.catLevel = data.catLevel * 1 + 1;</span><br><span class="line">      this.category.catId = null;</span><br><span class="line">      this.category.name = &quot;&quot;;</span><br><span class="line">      this.category.icon = &quot;&quot;;</span><br><span class="line">      this.category.productUnit = &quot;&quot;;</span><br><span class="line">      this.category.sort = 0;</span><br><span class="line">      this.category.showStatus = 1;</span><br><span class="line">    &#125;,</span><br><span class="line">    //添加三级分类</span><br><span class="line">    addCategory() &#123;</span><br><span class="line">      console.log(&quot;提交的三级分类数据&quot;, this.category);</span><br><span class="line">      this.$http(&#123;</span><br><span class="line">        url: this.$http.adornUrl(&quot;/product/category/save&quot;),</span><br><span class="line">        method: &quot;post&quot;,</span><br><span class="line">        data: this.$http.adornData(this.category, false)</span><br><span class="line">      &#125;).then((&#123; data &#125;) =&gt; &#123;</span><br><span class="line">        this.$message(&#123;</span><br><span class="line">          message: &quot;菜单保存成功&quot;,</span><br><span class="line">          type: &quot;success&quot;</span><br><span class="line">        &#125;);</span><br><span class="line">        //关闭对话框</span><br><span class="line">        this.dialogVisible = false;</span><br><span class="line">        //刷新出新的菜单</span><br><span class="line">        this.getMenus();</span><br><span class="line">        //设置需要默认展开的菜单</span><br><span class="line">        this.expandedKey = [this.category.parentCid];</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    remove(node, data) &#123;</span><br><span class="line">      var ids = [data.catId];</span><br><span class="line">      this.$confirm(`是否删除【$&#123;data.name&#125;】菜单?`, &quot;提示&quot;, &#123;</span><br><span class="line">        confirmButtonText: &quot;确定&quot;,</span><br><span class="line">        cancelButtonText: &quot;取消&quot;,</span><br><span class="line">        type: &quot;warning&quot;</span><br><span class="line">      &#125;)</span><br><span class="line">        .then(() =&gt; &#123;</span><br><span class="line">          this.$http(&#123;</span><br><span class="line">            url: this.$http.adornUrl(&quot;/product/category/delete&quot;),</span><br><span class="line">            method: &quot;post&quot;,</span><br><span class="line">            data: this.$http.adornData(ids, false)</span><br><span class="line">          &#125;).then((&#123; data &#125;) =&gt; &#123;</span><br><span class="line">            this.$message(&#123;</span><br><span class="line">              message: &quot;菜单删除成功&quot;,</span><br><span class="line">              type: &quot;success&quot;</span><br><span class="line">            &#125;);</span><br><span class="line">            //刷新出新的菜单</span><br><span class="line">            this.getMenus();</span><br><span class="line">            //设置需要默认展开的菜单</span><br><span class="line">            this.expandedKey = [node.parent.data.catId];</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(() =&gt; &#123;&#125;);</span><br><span class="line">      console.log(&quot;remove&quot;, node, data);</span><br><span class="line">    &#125;,</span><br><span class="line">    getMenus() &#123;</span><br><span class="line">      this.$http(&#123;</span><br><span class="line">        url: this.$http.adornUrl(&quot;/product/category/menu&quot;),</span><br><span class="line">        method: &quot;get&quot;</span><br><span class="line">      &#125;).then((&#123; data &#125;) =&gt; &#123;</span><br><span class="line">        this.menus = data.data;</span><br><span class="line">        console.log(&quot;菜单=========&quot;, data.data);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  activated() &#123;</span><br><span class="line">    this.getMenus();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h4 id="基本修改效果完成"><a href="#基本修改效果完成" class="headerlink" title="基本修改效果完成"></a>基本修改效果完成</h4><p>category.vue 修改之后的内容为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;el-tree</span><br><span class="line">      :data=&quot;menus&quot;</span><br><span class="line">      :props=&quot;defaultProps&quot;</span><br><span class="line">      :expand-on-click-node=&quot;false&quot;</span><br><span class="line">      show-checkbox</span><br><span class="line">      node-key=&quot;catId&quot;</span><br><span class="line">      :default-expanded-keys=&quot;expandedKey&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;span class=&quot;custom-tree-node&quot; slot-scope=&quot;&#123; node, data &#125;&quot;&gt;</span><br><span class="line">        &lt;span&gt;&#123;&#123; node.label &#125;&#125;&lt;/span&gt;</span><br><span class="line">        &lt;span&gt;</span><br><span class="line">          &lt;el-button</span><br><span class="line">            v-if=&quot;node.level &lt;= 2&quot;</span><br><span class="line">            type=&quot;text&quot;</span><br><span class="line">            size=&quot;mini&quot;</span><br><span class="line">            @click=&quot;() =&gt; append(data)&quot;</span><br><span class="line">          &gt;</span><br><span class="line">            Append</span><br><span class="line">          &lt;/el-button&gt;</span><br><span class="line">          &lt;el-button type=&quot;text&quot; size=&quot;mini&quot; @click=&quot;edit(data)&quot;</span><br><span class="line">            &gt;edit&lt;/el-button</span><br><span class="line">          &gt;</span><br><span class="line">          &lt;el-button</span><br><span class="line">            v-if=&quot;node.childNodes.length == 0&quot;</span><br><span class="line">            type=&quot;text&quot;</span><br><span class="line">            size=&quot;mini&quot;</span><br><span class="line">            @click=&quot;() =&gt; remove(node, data)&quot;</span><br><span class="line">          &gt;</span><br><span class="line">            Delete</span><br><span class="line">          &lt;/el-button&gt;</span><br><span class="line">        &lt;/span&gt;</span><br><span class="line">      &lt;/span&gt;&lt;/el-tree</span><br><span class="line">    &gt;</span><br><span class="line">    &lt;el-dialog</span><br><span class="line">      :title=&quot;title&quot;</span><br><span class="line">      :visible.sync=&quot;dialogVisible&quot;</span><br><span class="line">      width=&quot;30%&quot;</span><br><span class="line">      :close-on-click-modal=&quot;false&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;el-form :model=&quot;category&quot;&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;分类名称&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;category.name&quot; autocomplete=&quot;off&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;图标&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;category.icon&quot; autocomplete=&quot;off&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;计量单位&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;category.productUnit&quot; autocomplete=&quot;off&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">      &lt;/el-form&gt;</span><br><span class="line">      &lt;span slot=&quot;footer&quot; class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">        &lt;el-button @click=&quot;dialogVisible = false&quot;&gt;取 消&lt;/el-button&gt;</span><br><span class="line">        &lt;el-button type=&quot;primary&quot; @click=&quot;submitData&quot;&gt;确 定&lt;/el-button&gt;</span><br><span class="line">      &lt;/span&gt;</span><br><span class="line">    &lt;/el-dialog&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      title: &quot;&quot;,</span><br><span class="line">      dialogType: &quot;&quot;, //edit,add</span><br><span class="line">      category: &#123;</span><br><span class="line">        name: &quot;&quot;,</span><br><span class="line">        parentCid: 0,</span><br><span class="line">        catLevel: 0,</span><br><span class="line">        showStatus: 1,</span><br><span class="line">        sort: 0,</span><br><span class="line">        productUnit: &quot;&quot;,</span><br><span class="line">        icon: &quot;&quot;,</span><br><span class="line">        catId: null</span><br><span class="line">      &#125;,</span><br><span class="line">      dialogVisible: false,</span><br><span class="line">      menus: [],</span><br><span class="line">      expandedKey: [],</span><br><span class="line">      defaultProps: &#123;</span><br><span class="line">        children: &quot;children&quot;,</span><br><span class="line">        label: &quot;name&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    submitData() &#123;</span><br><span class="line">      if (this.dialogType == &quot;add&quot;) &#123;</span><br><span class="line">        this.addCategory();</span><br><span class="line">      &#125;</span><br><span class="line">      if (this.dialogType == &quot;edit&quot;) &#123;</span><br><span class="line">        this.editCategory();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    edit(data) &#123;</span><br><span class="line">      console.log(&quot;要修改的数据&quot;, data);</span><br><span class="line">      this.dialogType = &quot;edit&quot;;</span><br><span class="line">      this.title = &quot;修改分类&quot;;</span><br><span class="line">      this.dialogVisible = true;</span><br><span class="line"></span><br><span class="line">      //发送请求获取当前节点最新的数据</span><br><span class="line">      this.$http(&#123;</span><br><span class="line">        url: this.$http.adornUrl(`/product/category/info/$&#123;data.catId&#125;`),</span><br><span class="line">        method: &quot;get&quot;</span><br><span class="line">      &#125;).then((&#123; data &#125;) =&gt; &#123;</span><br><span class="line">        //请求成功</span><br><span class="line">        console.log(&quot;要回显的数据&quot;, data);</span><br><span class="line">        this.category.name = data.data.name;</span><br><span class="line">        this.category.catId = data.data.catId;</span><br><span class="line">        this.category.icon = data.data.icon;</span><br><span class="line">        this.category.productUnit = data.data.productUnit;</span><br><span class="line">        this.category.parentCid = data.data.parentCid;</span><br><span class="line">        this.category.catLevel = data.data.catLevel;</span><br><span class="line">        this.category.sort = data.data.sort;</span><br><span class="line">        this.category.showStatus = data.data.showStatus;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    //修改三级分类数据</span><br><span class="line">    editCategory() &#123;</span><br><span class="line">      var &#123; catId, name, icon, productUnit &#125; = this.category;</span><br><span class="line">      this.$http(&#123;</span><br><span class="line">        url: this.$http.adornUrl(&quot;/product/category/update&quot;),</span><br><span class="line">        method: &quot;post&quot;,</span><br><span class="line">        data: this.$http.adornData(&#123; catId, name, icon, productUnit &#125;, false)</span><br><span class="line">      &#125;).then((&#123; data &#125;) =&gt; &#123;</span><br><span class="line">        this.$message(&#123;</span><br><span class="line">          message: &quot;菜单修改成功&quot;,</span><br><span class="line">          type: &quot;success&quot;</span><br><span class="line">        &#125;);</span><br><span class="line">        //关闭对话框</span><br><span class="line">        this.dialogVisible = false;</span><br><span class="line">        //刷新出新的菜单</span><br><span class="line">        this.getMenus();</span><br><span class="line">        //设置需要默认展开的菜单</span><br><span class="line">        this.expandedKey = [this.category.parentCid];</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    append(data) &#123;</span><br><span class="line">      console.log(&quot;append&quot;, data);</span><br><span class="line">      this.dialogType = &quot;add&quot;;</span><br><span class="line">      this.title = &quot;添加分类&quot;;</span><br><span class="line">      this.dialogVisible = true;</span><br><span class="line">      this.category.parentCid = data.catId;</span><br><span class="line">      this.category.catLevel = data.catLevel * 1 + 1;</span><br><span class="line">      this.category.catId = null;</span><br><span class="line">      this.category.name = &quot;&quot;;</span><br><span class="line">      this.category.icon = &quot;&quot;;</span><br><span class="line">      this.category.productUnit = &quot;&quot;;</span><br><span class="line">      this.category.sort = 0;</span><br><span class="line">      this.category.showStatus = 1;</span><br><span class="line">    &#125;,</span><br><span class="line">    //添加三级分类</span><br><span class="line">    addCategory() &#123;</span><br><span class="line">      console.log(&quot;提交的三级分类数据&quot;, this.category);</span><br><span class="line">      this.$http(&#123;</span><br><span class="line">        url: this.$http.adornUrl(&quot;/product/category/save&quot;),</span><br><span class="line">        method: &quot;post&quot;,</span><br><span class="line">        data: this.$http.adornData(this.category, false)</span><br><span class="line">      &#125;).then((&#123; data &#125;) =&gt; &#123;</span><br><span class="line">        this.$message(&#123;</span><br><span class="line">          message: &quot;菜单保存成功&quot;,</span><br><span class="line">          type: &quot;success&quot;</span><br><span class="line">        &#125;);</span><br><span class="line">        //关闭对话框</span><br><span class="line">        this.dialogVisible = false;</span><br><span class="line">        //刷新出新的菜单</span><br><span class="line">        this.getMenus();</span><br><span class="line">        //设置需要默认展开的菜单</span><br><span class="line">        this.expandedKey = [this.category.parentCid];</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    remove(node, data) &#123;</span><br><span class="line">      var ids = [data.catId];</span><br><span class="line">      this.$confirm(`是否删除【$&#123;data.name&#125;】菜单?`, &quot;提示&quot;, &#123;</span><br><span class="line">        confirmButtonText: &quot;确定&quot;,</span><br><span class="line">        cancelButtonText: &quot;取消&quot;,</span><br><span class="line">        type: &quot;warning&quot;</span><br><span class="line">      &#125;)</span><br><span class="line">        .then(() =&gt; &#123;</span><br><span class="line">          this.$http(&#123;</span><br><span class="line">            url: this.$http.adornUrl(&quot;/product/category/delete&quot;),</span><br><span class="line">            method: &quot;post&quot;,</span><br><span class="line">            data: this.$http.adornData(ids, false)</span><br><span class="line">          &#125;).then((&#123; data &#125;) =&gt; &#123;</span><br><span class="line">            this.$message(&#123;</span><br><span class="line">              message: &quot;菜单删除成功&quot;,</span><br><span class="line">              type: &quot;success&quot;</span><br><span class="line">            &#125;);</span><br><span class="line">            //刷新出新的菜单</span><br><span class="line">            this.getMenus();</span><br><span class="line">            //设置需要默认展开的菜单</span><br><span class="line">            this.expandedKey = [node.parent.data.catId];</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(() =&gt; &#123;&#125;);</span><br><span class="line">      console.log(&quot;remove&quot;, node, data);</span><br><span class="line">    &#125;,</span><br><span class="line">    getMenus() &#123;</span><br><span class="line">      this.$http(&#123;</span><br><span class="line">        url: this.$http.adornUrl(&quot;/product/category/menu&quot;),</span><br><span class="line">        method: &quot;get&quot;</span><br><span class="line">      &#125;).then((&#123; data &#125;) =&gt; &#123;</span><br><span class="line">        this.menus = data.data;</span><br><span class="line">        console.log(&quot;菜单=========&quot;, data.data);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  activated() &#123;</span><br><span class="line">    this.getMenus();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h4 id="拖拽效果"><a href="#拖拽效果" class="headerlink" title="拖拽效果"></a>拖拽效果</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;el-tree</span><br><span class="line">      :data=&quot;menus&quot;</span><br><span class="line">      :props=&quot;defaultProps&quot;</span><br><span class="line">      :expand-on-click-node=&quot;false&quot;</span><br><span class="line">      show-checkbox</span><br><span class="line">      :draggable=&quot;draggable&quot;</span><br><span class="line">      :allow-drop=&quot;allowDrop&quot;</span><br><span class="line">      node-key=&quot;catId&quot;</span><br><span class="line">      :default-expanded-keys=&quot;expandedKey&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;span class=&quot;custom-tree-node&quot; slot-scope=&quot;&#123; node, data &#125;&quot;&gt;</span><br><span class="line">        &lt;span&gt;&#123;&#123; node.label &#125;&#125;&lt;/span&gt;</span><br><span class="line">        &lt;span&gt;</span><br><span class="line">          &lt;el-button</span><br><span class="line">            v-if=&quot;node.level &lt;= 2&quot;</span><br><span class="line">            type=&quot;text&quot;</span><br><span class="line">            size=&quot;mini&quot;</span><br><span class="line">            @click=&quot;() =&gt; append(data)&quot;</span><br><span class="line">          &gt;</span><br><span class="line">            Append</span><br><span class="line">          &lt;/el-button&gt;</span><br><span class="line">          &lt;el-button type=&quot;text&quot; size=&quot;mini&quot; @click=&quot;edit(data)&quot;</span><br><span class="line">            &gt;edit&lt;/el-button</span><br><span class="line">          &gt;</span><br><span class="line">          &lt;el-button</span><br><span class="line">            v-if=&quot;node.childNodes.length == 0&quot;</span><br><span class="line">            type=&quot;text&quot;</span><br><span class="line">            size=&quot;mini&quot;</span><br><span class="line">            @click=&quot;() =&gt; remove(node, data)&quot;</span><br><span class="line">          &gt;</span><br><span class="line">            Delete</span><br><span class="line">          &lt;/el-button&gt;</span><br><span class="line">        &lt;/span&gt;</span><br><span class="line">      &lt;/span&gt;&lt;/el-tree</span><br><span class="line">    &gt;</span><br><span class="line">    &lt;el-dialog</span><br><span class="line">      :title=&quot;title&quot;</span><br><span class="line">      :visible.sync=&quot;dialogVisible&quot;</span><br><span class="line">      width=&quot;30%&quot;</span><br><span class="line">      :close-on-click-modal=&quot;false&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;el-form :model=&quot;category&quot;&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;分类名称&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;category.name&quot; autocomplete=&quot;off&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;图标&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;category.icon&quot; autocomplete=&quot;off&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;计量单位&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;category.productUnit&quot; autocomplete=&quot;off&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">      &lt;/el-form&gt;</span><br><span class="line">      &lt;span slot=&quot;footer&quot; class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">        &lt;el-button @click=&quot;dialogVisible = false&quot;&gt;取 消&lt;/el-button&gt;</span><br><span class="line">        &lt;el-button type=&quot;primary&quot; @click=&quot;submitData&quot;&gt;确 定&lt;/el-button&gt;</span><br><span class="line">      &lt;/span&gt;</span><br><span class="line">    &lt;/el-dialog&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      draggable: true,</span><br><span class="line">      maxLevel: 0,</span><br><span class="line">      title: &quot;&quot;,</span><br><span class="line">      dialogType: &quot;&quot;, //edit,add</span><br><span class="line">      category: &#123;</span><br><span class="line">        name: &quot;&quot;,</span><br><span class="line">        parentCid: 0,</span><br><span class="line">        catLevel: 0,</span><br><span class="line">        showStatus: 1,</span><br><span class="line">        sort: 0,</span><br><span class="line">        productUnit: &quot;&quot;,</span><br><span class="line">        icon: &quot;&quot;,</span><br><span class="line">        catId: null</span><br><span class="line">      &#125;,</span><br><span class="line">      dialogVisible: false,</span><br><span class="line">      menus: [],</span><br><span class="line">      expandedKey: [],</span><br><span class="line">      defaultProps: &#123;</span><br><span class="line">        children: &quot;children&quot;,</span><br><span class="line">        label: &quot;name&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    allowDrop(draggingNode, dropNode, type) &#123;</span><br><span class="line">      //1、被拖动的当前节点以及所在的父节点总层数不能大于3</span><br><span class="line"></span><br><span class="line">      //1）、被拖动的当前节点总层数</span><br><span class="line">      console.log(&quot;allowDrop:&quot;, draggingNode, dropNode, type);</span><br><span class="line">      //</span><br><span class="line">      this.countNodeLevel(draggingNode);</span><br><span class="line">      //当前正在拖动的节点+父节点所在的深度不大于3即可</span><br><span class="line">      let deep = Math.abs(this.maxLevel - draggingNode.level) + 1;</span><br><span class="line">      console.log(&quot;深度：&quot;, deep);</span><br><span class="line"></span><br><span class="line">      //   this.maxLevel</span><br><span class="line">      if (type == &quot;inner&quot;) &#123;</span><br><span class="line">        // console.log(</span><br><span class="line">        //   `this.maxLevel：$&#123;this.maxLevel&#125;；draggingNode.data.catLevel：$&#123;draggingNode.data.catLevel&#125;；dropNode.level：$&#123;dropNode.level&#125;`</span><br><span class="line">        // );</span><br><span class="line">        return deep + dropNode.level &lt;= 3;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        return deep + dropNode.parent.level &lt;= 3;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    countNodeLevel(node) &#123;</span><br><span class="line">      //找到所有子节点，求出最大深度</span><br><span class="line">      if (node.childNodes != null &amp;&amp; node.childNodes.length &gt; 0) &#123;</span><br><span class="line">        for (let i = 0; i &lt; node.childNodes.length; i++) &#123;</span><br><span class="line">          if (node.childNodes[i].level &gt; this.maxLevel) &#123;</span><br><span class="line">            this.maxLevel = node.childNodes[i].level;</span><br><span class="line">          &#125;</span><br><span class="line">          this.countNodeLevel(node.childNodes[i]);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    submitData() &#123;</span><br><span class="line">      if (this.dialogType == &quot;add&quot;) &#123;</span><br><span class="line">        this.addCategory();</span><br><span class="line">      &#125;</span><br><span class="line">      if (this.dialogType == &quot;edit&quot;) &#123;</span><br><span class="line">        this.editCategory();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    edit(data) &#123;</span><br><span class="line">      console.log(&quot;要修改的数据&quot;, data);</span><br><span class="line">      this.dialogType = &quot;edit&quot;;</span><br><span class="line">      this.title = &quot;修改分类&quot;;</span><br><span class="line">      this.dialogVisible = true;</span><br><span class="line"></span><br><span class="line">      //发送请求获取当前节点最新的数据</span><br><span class="line">      this.$http(&#123;</span><br><span class="line">        url: this.$http.adornUrl(`/product/category/info/$&#123;data.catId&#125;`),</span><br><span class="line">        method: &quot;get&quot;</span><br><span class="line">      &#125;).then((&#123; data &#125;) =&gt; &#123;</span><br><span class="line">        //请求成功</span><br><span class="line">        console.log(&quot;要回显的数据&quot;, data);</span><br><span class="line">        this.category.name = data.data.name;</span><br><span class="line">        this.category.catId = data.data.catId;</span><br><span class="line">        this.category.icon = data.data.icon;</span><br><span class="line">        this.category.productUnit = data.data.productUnit;</span><br><span class="line">        this.category.parentCid = data.data.parentCid;</span><br><span class="line">        this.category.catLevel = data.data.catLevel;</span><br><span class="line">        this.category.sort = data.data.sort;</span><br><span class="line">        this.category.showStatus = data.data.showStatus;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    //修改三级分类数据</span><br><span class="line">    editCategory() &#123;</span><br><span class="line">      var &#123; catId, name, icon, productUnit &#125; = this.category;</span><br><span class="line">      this.$http(&#123;</span><br><span class="line">        url: this.$http.adornUrl(&quot;/product/category/update&quot;),</span><br><span class="line">        method: &quot;post&quot;,</span><br><span class="line">        data: this.$http.adornData(&#123; catId, name, icon, productUnit &#125;, false)</span><br><span class="line">      &#125;).then((&#123; data &#125;) =&gt; &#123;</span><br><span class="line">        this.$message(&#123;</span><br><span class="line">          message: &quot;菜单修改成功&quot;,</span><br><span class="line">          type: &quot;success&quot;</span><br><span class="line">        &#125;);</span><br><span class="line">        //关闭对话框</span><br><span class="line">        this.dialogVisible = false;</span><br><span class="line">        //刷新出新的菜单</span><br><span class="line">        this.getMenus();</span><br><span class="line">        //设置需要默认展开的菜单</span><br><span class="line">        this.expandedKey = [this.category.parentCid];</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    append(data) &#123;</span><br><span class="line">      console.log(&quot;append&quot;, data);</span><br><span class="line">      this.dialogType = &quot;add&quot;;</span><br><span class="line">      this.title = &quot;添加分类&quot;;</span><br><span class="line">      this.dialogVisible = true;</span><br><span class="line">      this.category.parentCid = data.catId;</span><br><span class="line">      this.category.catLevel = data.catLevel * 1 + 1;</span><br><span class="line">      this.category.catId = null;</span><br><span class="line">      this.category.name = &quot;&quot;;</span><br><span class="line">      this.category.icon = &quot;&quot;;</span><br><span class="line">      this.category.productUnit = &quot;&quot;;</span><br><span class="line">      this.category.sort = 0;</span><br><span class="line">      this.category.showStatus = 1;</span><br><span class="line">    &#125;,</span><br><span class="line">    //添加三级分类</span><br><span class="line">    addCategory() &#123;</span><br><span class="line">      console.log(&quot;提交的三级分类数据&quot;, this.category);</span><br><span class="line">      this.$http(&#123;</span><br><span class="line">        url: this.$http.adornUrl(&quot;/product/category/save&quot;),</span><br><span class="line">        method: &quot;post&quot;,</span><br><span class="line">        data: this.$http.adornData(this.category, false)</span><br><span class="line">      &#125;).then((&#123; data &#125;) =&gt; &#123;</span><br><span class="line">        this.$message(&#123;</span><br><span class="line">          message: &quot;菜单保存成功&quot;,</span><br><span class="line">          type: &quot;success&quot;</span><br><span class="line">        &#125;);</span><br><span class="line">        //关闭对话框</span><br><span class="line">        this.dialogVisible = false;</span><br><span class="line">        //刷新出新的菜单</span><br><span class="line">        this.getMenus();</span><br><span class="line">        //设置需要默认展开的菜单</span><br><span class="line">        this.expandedKey = [this.category.parentCid];</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    remove(node, data) &#123;</span><br><span class="line">      var ids = [data.catId];</span><br><span class="line">      this.$confirm(`是否删除【$&#123;data.name&#125;】菜单?`, &quot;提示&quot;, &#123;</span><br><span class="line">        confirmButtonText: &quot;确定&quot;,</span><br><span class="line">        cancelButtonText: &quot;取消&quot;,</span><br><span class="line">        type: &quot;warning&quot;</span><br><span class="line">      &#125;)</span><br><span class="line">        .then(() =&gt; &#123;</span><br><span class="line">          this.$http(&#123;</span><br><span class="line">            url: this.$http.adornUrl(&quot;/product/category/delete&quot;),</span><br><span class="line">            method: &quot;post&quot;,</span><br><span class="line">            data: this.$http.adornData(ids, false)</span><br><span class="line">          &#125;).then((&#123; data &#125;) =&gt; &#123;</span><br><span class="line">            this.$message(&#123;</span><br><span class="line">              message: &quot;菜单删除成功&quot;,</span><br><span class="line">              type: &quot;success&quot;</span><br><span class="line">            &#125;);</span><br><span class="line">            //刷新出新的菜单</span><br><span class="line">            this.getMenus();</span><br><span class="line">            //设置需要默认展开的菜单</span><br><span class="line">            this.expandedKey = [node.parent.data.catId];</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(() =&gt; &#123;&#125;);</span><br><span class="line">      console.log(&quot;remove&quot;, node, data);</span><br><span class="line">    &#125;,</span><br><span class="line">    getMenus() &#123;</span><br><span class="line">      this.$http(&#123;</span><br><span class="line">        url: this.$http.adornUrl(&quot;/product/category/menu&quot;),</span><br><span class="line">        method: &quot;get&quot;</span><br><span class="line">      &#125;).then((&#123; data &#125;) =&gt; &#123;</span><br><span class="line">        this.menus = data.data;</span><br><span class="line">        console.log(&quot;菜单=========&quot;, data.data);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  activated() &#123;</span><br><span class="line">    this.getMenus();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h4 id="拖拽数据收集"><a href="#拖拽数据收集" class="headerlink" title="拖拽数据收集"></a>拖拽数据收集</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;el-tree</span><br><span class="line">      :data=&quot;menus&quot;</span><br><span class="line">      :props=&quot;defaultProps&quot;</span><br><span class="line">      :expand-on-click-node=&quot;false&quot;</span><br><span class="line">      show-checkbox</span><br><span class="line">      node-key=&quot;catId&quot;</span><br><span class="line">      :default-expanded-keys=&quot;expandedKey&quot;</span><br><span class="line">      :draggable=&quot;draggable&quot;</span><br><span class="line">      :allow-drop=&quot;allowDrop&quot;</span><br><span class="line">      @node-drop=&quot;handleDrop&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;span class=&quot;custom-tree-node&quot; slot-scope=&quot;&#123; node, data &#125;&quot;&gt;</span><br><span class="line">        &lt;span&gt;&#123;&#123; node.label &#125;&#125;&lt;/span&gt;</span><br><span class="line">        &lt;span&gt;</span><br><span class="line">          &lt;el-button</span><br><span class="line">            v-if=&quot;node.level &lt;= 2&quot;</span><br><span class="line">            type=&quot;text&quot;</span><br><span class="line">            size=&quot;mini&quot;</span><br><span class="line">            @click=&quot;() =&gt; append(data)&quot;</span><br><span class="line">          &gt;</span><br><span class="line">            Append</span><br><span class="line">          &lt;/el-button&gt;</span><br><span class="line">          &lt;el-button type=&quot;text&quot; size=&quot;mini&quot; @click=&quot;edit(data)&quot;</span><br><span class="line">            &gt;edit&lt;/el-button</span><br><span class="line">          &gt;</span><br><span class="line">          &lt;el-button</span><br><span class="line">            v-if=&quot;node.childNodes.length == 0&quot;</span><br><span class="line">            type=&quot;text&quot;</span><br><span class="line">            size=&quot;mini&quot;</span><br><span class="line">            @click=&quot;() =&gt; remove(node, data)&quot;</span><br><span class="line">          &gt;</span><br><span class="line">            Delete</span><br><span class="line">          &lt;/el-button&gt;</span><br><span class="line">        &lt;/span&gt;</span><br><span class="line">      &lt;/span&gt;&lt;/el-tree</span><br><span class="line">    &gt;</span><br><span class="line">    &lt;el-dialog</span><br><span class="line">      :title=&quot;title&quot;</span><br><span class="line">      :visible.sync=&quot;dialogVisible&quot;</span><br><span class="line">      width=&quot;30%&quot;</span><br><span class="line">      :close-on-click-modal=&quot;false&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;el-form :model=&quot;category&quot;&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;分类名称&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;category.name&quot; autocomplete=&quot;off&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;图标&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;category.icon&quot; autocomplete=&quot;off&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;计量单位&quot;&gt;</span><br><span class="line">          &lt;el-input</span><br><span class="line">            v-model=&quot;category.productUnit&quot;</span><br><span class="line">            autocomplete=&quot;off&quot;</span><br><span class="line">          &gt;&lt;/el-input&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">      &lt;/el-form&gt;</span><br><span class="line">      &lt;span slot=&quot;footer&quot; class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">        &lt;el-button @click=&quot;dialogVisible = false&quot;&gt;取 消&lt;/el-button&gt;</span><br><span class="line">        &lt;el-button type=&quot;primary&quot; @click=&quot;submitData&quot;&gt;确 定&lt;/el-button&gt;</span><br><span class="line">      &lt;/span&gt;</span><br><span class="line">    &lt;/el-dialog&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      updateNodes: [],</span><br><span class="line">      draggable: true,</span><br><span class="line">      maxLevel: 0,</span><br><span class="line">      title: &quot;&quot;,</span><br><span class="line">      dialogType: &quot;&quot;, //edit,add</span><br><span class="line">      category: &#123;</span><br><span class="line">        name: &quot;&quot;,</span><br><span class="line">        parentCid: 0,</span><br><span class="line">        catLevel: 0,</span><br><span class="line">        showStatus: 1,</span><br><span class="line">        sort: 0,</span><br><span class="line">        productUnit: &quot;&quot;,</span><br><span class="line">        icon: &quot;&quot;,</span><br><span class="line">        catId: null</span><br><span class="line">      &#125;,</span><br><span class="line">      dialogVisible: false,</span><br><span class="line">      menus: [],</span><br><span class="line">      expandedKey: [],</span><br><span class="line">      defaultProps: &#123;</span><br><span class="line">        children: &quot;children&quot;,</span><br><span class="line">        label: &quot;name&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    // 菜单拖拽 start =======================================================</span><br><span class="line">    handleDrop(draggingNode, dropNode, dropType, ev) &#123;</span><br><span class="line">      console.log(&quot;handleDrop: &quot;, draggingNode, dropNode, dropType);</span><br><span class="line">      //1、当前节点最新的父节点id</span><br><span class="line">      let pCid = 0;</span><br><span class="line">      let siblings = null;</span><br><span class="line">      if (dropType == &quot;before&quot; || dropType == &quot;after&quot;) &#123;</span><br><span class="line">        pCid =</span><br><span class="line">          dropNode.parent.data.catId == undefined</span><br><span class="line">            ? 0</span><br><span class="line">            : dropNode.parent.data.catId;</span><br><span class="line">        siblings = dropNode.parent.childNodes;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        pCid = dropNode.data.catId;</span><br><span class="line">        siblings = dropNode.childNodes;</span><br><span class="line">      &#125;</span><br><span class="line">      this.pCid.push(pCid);</span><br><span class="line">      //2、当前拖拽节点的最新顺序，</span><br><span class="line">      for (let i = 0; i &lt; siblings.length; i++) &#123;</span><br><span class="line">        if (siblings[i].data.catId == draggingNode.data.catId) &#123;</span><br><span class="line">          //如果遍历的是当前正在拖拽的节点</span><br><span class="line">          let catLevel = draggingNode.level;</span><br><span class="line">          if (siblings[i].level != draggingNode.level) &#123;</span><br><span class="line">            //当前节点的层级发生变化</span><br><span class="line">            catLevel = siblings[i].level;</span><br><span class="line">            //修改他子节点的层级</span><br><span class="line">            this.updateChildNodeLevel(siblings[i]);</span><br><span class="line">          &#125;</span><br><span class="line">          this.updateNodes.push(&#123;</span><br><span class="line">            catId: siblings[i].data.catId,</span><br><span class="line">            sort: i,</span><br><span class="line">            parentCid: pCid,</span><br><span class="line">            catLevel: catLevel</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          this.updateNodes.push(&#123; catId: siblings[i].data.catId, sort: i &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      //3、当前拖拽节点的最新层级</span><br><span class="line">      console.log(&quot;updateNodes&quot;, this.updateNodes);</span><br><span class="line">    &#125;,</span><br><span class="line">    updateChildNodeLevel(node) &#123;</span><br><span class="line">      if (node.childNodes.length &gt; 0) &#123;</span><br><span class="line">        for (let i = 0; i &lt; node.childNodes.length; i++) &#123;</span><br><span class="line">          var cNode = node.childNodes[i].data;</span><br><span class="line">          this.updateNodes.push(&#123;</span><br><span class="line">            catId: cNode.catId,</span><br><span class="line">            catLevel: node.childNodes[i].level</span><br><span class="line">          &#125;);</span><br><span class="line">          this.updateChildNodeLevel(node.childNodes[i]);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    allowDrop(draggingNode, dropNode, type) &#123;</span><br><span class="line">      //1、被拖动的当前节点以及所在的父节点总层数不能大于3</span><br><span class="line"></span><br><span class="line">      //1）、被拖动的当前节点总层数</span><br><span class="line">      console.log(&quot;allowDrop:&quot;, draggingNode, dropNode, type);</span><br><span class="line">      //</span><br><span class="line">      this.countNodeLevel(draggingNode);</span><br><span class="line">      //当前正在拖动的节点+父节点所在的深度不大于3即可</span><br><span class="line">      let deep = Math.abs(this.maxLevel - draggingNode.level) + 1;</span><br><span class="line">      console.log(&quot;深度：&quot;, deep);</span><br><span class="line"></span><br><span class="line">      //   this.maxLevel</span><br><span class="line">      if (type == &quot;inner&quot;) &#123;</span><br><span class="line">        // console.log(</span><br><span class="line">        //   `this.maxLevel：$&#123;this.maxLevel&#125;；draggingNode.data.catLevel：$&#123;draggingNode.data.catLevel&#125;；dropNode.level：$&#123;dropNode.level&#125;`</span><br><span class="line">        // );</span><br><span class="line">        return deep + dropNode.level &lt;= 3;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        return deep + dropNode.parent.level &lt;= 3;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    countNodeLevel(node) &#123;</span><br><span class="line">      //找到所有子节点，求出最大深度</span><br><span class="line">      if (node.childNodes != null &amp;&amp; node.childNodes.length &gt; 0) &#123;</span><br><span class="line">        for (let i = 0; i &lt; node.childNodes.length; i++) &#123;</span><br><span class="line">          if (node.childNodes[i].level &gt; this.maxLevel) &#123;</span><br><span class="line">            this.maxLevel = node.childNodes[i].level;</span><br><span class="line">          &#125;</span><br><span class="line">          this.countNodeLevel(node.childNodes[i]);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 菜单拖拽 end =======================================================</span><br><span class="line">    submitData() &#123;</span><br><span class="line">      if (this.dialogType == &quot;add&quot;) &#123;</span><br><span class="line">        this.addCategory();</span><br><span class="line">      &#125;</span><br><span class="line">      if (this.dialogType == &quot;edit&quot;) &#123;</span><br><span class="line">        this.editCategory();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    edit(data) &#123;</span><br><span class="line">      console.log(&quot;要修改的数据&quot;, data);</span><br><span class="line">      this.dialogType = &quot;edit&quot;;</span><br><span class="line">      this.title = &quot;修改分类&quot;;</span><br><span class="line">      this.dialogVisible = true;</span><br><span class="line"></span><br><span class="line">      //发送请求获取当前节点最新的数据</span><br><span class="line">      this.$http(&#123;</span><br><span class="line">        url: this.$http.adornUrl(`/product/category/info/$&#123;data.catId&#125;`),</span><br><span class="line">        method: &quot;get&quot;</span><br><span class="line">      &#125;).then((&#123; data &#125;) =&gt; &#123;</span><br><span class="line">        //请求成功</span><br><span class="line">        console.log(&quot;要回显的数据&quot;, data);</span><br><span class="line">        this.category.name = data.data.name;</span><br><span class="line">        this.category.catId = data.data.catId;</span><br><span class="line">        this.category.icon = data.data.icon;</span><br><span class="line">        this.category.productUnit = data.data.productUnit;</span><br><span class="line">        this.category.parentCid = data.data.parentCid;</span><br><span class="line">        this.category.catLevel = data.data.catLevel;</span><br><span class="line">        this.category.sort = data.data.sort;</span><br><span class="line">        this.category.showStatus = data.data.showStatus;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    //修改三级分类数据</span><br><span class="line">    editCategory() &#123;</span><br><span class="line">      var &#123; catId, name, icon, productUnit &#125; = this.category;</span><br><span class="line">      this.$http(&#123;</span><br><span class="line">        url: this.$http.adornUrl(&quot;/product/category/update&quot;),</span><br><span class="line">        method: &quot;post&quot;,</span><br><span class="line">        data: this.$http.adornData(&#123; catId, name, icon, productUnit &#125;, false)</span><br><span class="line">      &#125;).then((&#123; data &#125;) =&gt; &#123;</span><br><span class="line">        this.$message(&#123;</span><br><span class="line">          message: &quot;菜单修改成功&quot;,</span><br><span class="line">          type: &quot;success&quot;</span><br><span class="line">        &#125;);</span><br><span class="line">        //关闭对话框</span><br><span class="line">        this.dialogVisible = false;</span><br><span class="line">        //刷新出新的菜单</span><br><span class="line">        this.getMenus();</span><br><span class="line">        //设置需要默认展开的菜单</span><br><span class="line">        this.expandedKey = [this.category.parentCid];</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    append(data) &#123;</span><br><span class="line">      console.log(&quot;append&quot;, data);</span><br><span class="line">      this.dialogType = &quot;add&quot;;</span><br><span class="line">      this.title = &quot;添加分类&quot;;</span><br><span class="line">      this.dialogVisible = true;</span><br><span class="line">      this.category.parentCid = data.catId;</span><br><span class="line">      this.category.catLevel = data.catLevel * 1 + 1;</span><br><span class="line">      this.category.catId = null;</span><br><span class="line">      this.category.name = &quot;&quot;;</span><br><span class="line">      this.category.icon = &quot;&quot;;</span><br><span class="line">      this.category.productUnit = &quot;&quot;;</span><br><span class="line">      this.category.sort = 0;</span><br><span class="line">      this.category.showStatus = 1;</span><br><span class="line">    &#125;,</span><br><span class="line">    //添加三级分类</span><br><span class="line">    addCategory() &#123;</span><br><span class="line">      console.log(&quot;提交的三级分类数据&quot;, this.category);</span><br><span class="line">      this.$http(&#123;</span><br><span class="line">        url: this.$http.adornUrl(&quot;/product/category/save&quot;),</span><br><span class="line">        method: &quot;post&quot;,</span><br><span class="line">        data: this.$http.adornData(this.category, false)</span><br><span class="line">      &#125;).then((&#123; data &#125;) =&gt; &#123;</span><br><span class="line">        this.$message(&#123;</span><br><span class="line">          message: &quot;菜单保存成功&quot;,</span><br><span class="line">          type: &quot;success&quot;</span><br><span class="line">        &#125;);</span><br><span class="line">        //关闭对话框</span><br><span class="line">        this.dialogVisible = false;</span><br><span class="line">        //刷新出新的菜单</span><br><span class="line">        this.getMenus();</span><br><span class="line">        //设置需要默认展开的菜单</span><br><span class="line">        this.expandedKey = [this.category.parentCid];</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    remove(node, data) &#123;</span><br><span class="line">      var ids = [data.catId];</span><br><span class="line">      this.$confirm(`是否删除【$&#123;data.name&#125;】菜单?`, &quot;提示&quot;, &#123;</span><br><span class="line">        confirmButtonText: &quot;确定&quot;,</span><br><span class="line">        cancelButtonText: &quot;取消&quot;,</span><br><span class="line">        type: &quot;warning&quot;</span><br><span class="line">      &#125;)</span><br><span class="line">        .then(() =&gt; &#123;</span><br><span class="line">          this.$http(&#123;</span><br><span class="line">            url: this.$http.adornUrl(&quot;/product/category/delete&quot;),</span><br><span class="line">            method: &quot;post&quot;,</span><br><span class="line">            data: this.$http.adornData(ids, false)</span><br><span class="line">          &#125;).then((&#123; data &#125;) =&gt; &#123;</span><br><span class="line">            this.$message(&#123;</span><br><span class="line">              message: &quot;菜单删除成功&quot;,</span><br><span class="line">              type: &quot;success&quot;</span><br><span class="line">            &#125;);</span><br><span class="line">            //刷新出新的菜单</span><br><span class="line">            this.getMenus();</span><br><span class="line">            //设置需要默认展开的菜单</span><br><span class="line">            this.expandedKey = [node.parent.data.catId];</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(() =&gt; &#123;&#125;);</span><br><span class="line">      console.log(&quot;remove&quot;, node, data);</span><br><span class="line">    &#125;,</span><br><span class="line">    getMenus() &#123;</span><br><span class="line">      this.$http(&#123;</span><br><span class="line">        url: this.$http.adornUrl(&quot;/product/category/menu&quot;),</span><br><span class="line">        method: &quot;get&quot;</span><br><span class="line">      &#125;).then((&#123; data &#125;) =&gt; &#123;</span><br><span class="line">        this.menus = data.data;</span><br><span class="line">        console.log(&quot;菜单=========&quot;, data.data);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  activated() &#123;</span><br><span class="line">    this.getMenus();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h4 id="拖拽功能完成"><a href="#拖拽功能完成" class="headerlink" title="拖拽功能完成"></a>拖拽功能完成</h4><p>1.后端代码增加接口 CategoryController</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 批量更新菜单排序</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/update/sort&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">updateSort</span><span class="params">(<span class="meta">@RequestBody</span> CategoryEntity[] category)</span> &#123;</span><br><span class="line">        categoryService.updateBatchById(Arrays.asList(category));</span><br><span class="line">        <span class="keyword">return</span> R.ok();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>2.单行修改频繁调用不够友好，需要使用按钮进行批量修改。单行提交代码省略。</p>
<h4 id="最终菜单页面完成代码效果"><a href="#最终菜单页面完成代码效果" class="headerlink" title="最终菜单页面完成代码效果"></a>最终菜单页面完成代码效果</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;el-switch</span><br><span class="line">      v-model=&quot;draggable&quot;</span><br><span class="line">      active-text=&quot;开启拖拽&quot;</span><br><span class="line">      inactive-text=&quot;关闭拖拽&quot;</span><br><span class="line">    &gt;&lt;/el-switch&gt;</span><br><span class="line">    &lt;el-button v-if=&quot;draggable&quot; @click=&quot;batchSave&quot;&gt;批量保存&lt;/el-button&gt;</span><br><span class="line">    &lt;el-button type=&quot;danger&quot; @click=&quot;batchDelete&quot;&gt;批量删除&lt;/el-button&gt;</span><br><span class="line">    &lt;el-tree</span><br><span class="line">      :data=&quot;menus&quot;</span><br><span class="line">      :props=&quot;defaultProps&quot;</span><br><span class="line">      :expand-on-click-node=&quot;false&quot;</span><br><span class="line">      show-checkbox</span><br><span class="line">      node-key=&quot;catId&quot;</span><br><span class="line">      :default-expanded-keys=&quot;expandedKey&quot;</span><br><span class="line">      :draggable=&quot;draggable&quot;</span><br><span class="line">      :allow-drop=&quot;allowDrop&quot;</span><br><span class="line">      @node-drop=&quot;handleDrop&quot;</span><br><span class="line">      ref=&quot;menuTree&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;span class=&quot;custom-tree-node&quot; slot-scope=&quot;&#123; node, data &#125;&quot;&gt;</span><br><span class="line">        &lt;span&gt;&#123;&#123; node.label &#125;&#125;&lt;/span&gt;</span><br><span class="line">        &lt;span&gt;</span><br><span class="line">          &lt;el-button</span><br><span class="line">            v-if=&quot;node.level &lt;= 2&quot;</span><br><span class="line">            type=&quot;text&quot;</span><br><span class="line">            size=&quot;mini&quot;</span><br><span class="line">            @click=&quot;() =&gt; append(data)&quot;</span><br><span class="line">          &gt;</span><br><span class="line">            Append</span><br><span class="line">          &lt;/el-button&gt;</span><br><span class="line">          &lt;el-button type=&quot;text&quot; size=&quot;mini&quot; @click=&quot;edit(data)&quot;</span><br><span class="line">            &gt;edit&lt;/el-button</span><br><span class="line">          &gt;</span><br><span class="line">          &lt;el-button</span><br><span class="line">            v-if=&quot;node.childNodes.length == 0&quot;</span><br><span class="line">            type=&quot;text&quot;</span><br><span class="line">            size=&quot;mini&quot;</span><br><span class="line">            @click=&quot;() =&gt; remove(node, data)&quot;</span><br><span class="line">          &gt;</span><br><span class="line">            Delete</span><br><span class="line">          &lt;/el-button&gt;</span><br><span class="line">        &lt;/span&gt;</span><br><span class="line">      &lt;/span&gt;&lt;/el-tree</span><br><span class="line">    &gt;</span><br><span class="line">    &lt;el-dialog</span><br><span class="line">      :title=&quot;title&quot;</span><br><span class="line">      :visible.sync=&quot;dialogVisible&quot;</span><br><span class="line">      width=&quot;30%&quot;</span><br><span class="line">      :close-on-click-modal=&quot;false&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;el-form :model=&quot;category&quot;&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;分类名称&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;category.name&quot; autocomplete=&quot;off&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;图标&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;category.icon&quot; autocomplete=&quot;off&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;计量单位&quot;&gt;</span><br><span class="line">          &lt;el-input</span><br><span class="line">            v-model=&quot;category.productUnit&quot;</span><br><span class="line">            autocomplete=&quot;off&quot;</span><br><span class="line">          &gt;&lt;/el-input&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">      &lt;/el-form&gt;</span><br><span class="line">      &lt;span slot=&quot;footer&quot; class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">        &lt;el-button @click=&quot;dialogVisible = false&quot;&gt;取 消&lt;/el-button&gt;</span><br><span class="line">        &lt;el-button type=&quot;primary&quot; @click=&quot;submitData&quot;&gt;确 定&lt;/el-button&gt;</span><br><span class="line">      &lt;/span&gt;</span><br><span class="line">    &lt;/el-dialog&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      pCid: [],</span><br><span class="line">      updateNodes: [],</span><br><span class="line">      draggable: false,</span><br><span class="line">      maxLevel: 0,</span><br><span class="line">      title: &quot;&quot;,</span><br><span class="line">      dialogType: &quot;&quot;, //edit,add</span><br><span class="line">      category: &#123;</span><br><span class="line">        name: &quot;&quot;,</span><br><span class="line">        parentCid: 0,</span><br><span class="line">        catLevel: 0,</span><br><span class="line">        showStatus: 1,</span><br><span class="line">        sort: 0,</span><br><span class="line">        productUnit: &quot;&quot;,</span><br><span class="line">        icon: &quot;&quot;,</span><br><span class="line">        catId: null</span><br><span class="line">      &#125;,</span><br><span class="line">      dialogVisible: false,</span><br><span class="line">      menus: [],</span><br><span class="line">      expandedKey: [],</span><br><span class="line">      defaultProps: &#123;</span><br><span class="line">        children: &quot;children&quot;,</span><br><span class="line">        label: &quot;name&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    // 菜单批量处理 start =======================================================</span><br><span class="line">    batchDelete() &#123;</span><br><span class="line">      let catIds = [];</span><br><span class="line">      let checkedNodes = this.$refs.menuTree.getCheckedNodes();</span><br><span class="line">      console.log(&quot;被选中的元素&quot;, checkedNodes);</span><br><span class="line">      for (let i = 0; i &lt; checkedNodes.length; i++) &#123;</span><br><span class="line">        catIds.push(checkedNodes[i].catId);</span><br><span class="line">      &#125;</span><br><span class="line">      this.$confirm(`是否批量删除【$&#123;catIds&#125;】菜单?`, &quot;提示&quot;, &#123;</span><br><span class="line">        confirmButtonText: &quot;确定&quot;,</span><br><span class="line">        cancelButtonText: &quot;取消&quot;,</span><br><span class="line">        type: &quot;warning&quot;</span><br><span class="line">      &#125;)</span><br><span class="line">        .then(() =&gt; &#123;</span><br><span class="line">          this.$http(&#123;</span><br><span class="line">            url: this.$http.adornUrl(&quot;/product/category/delete&quot;),</span><br><span class="line">            method: &quot;post&quot;,</span><br><span class="line">            data: this.$http.adornData(catIds, false)</span><br><span class="line">          &#125;).then((&#123; data &#125;) =&gt; &#123;</span><br><span class="line">            this.$message(&#123;</span><br><span class="line">              message: &quot;菜单批量删除成功&quot;,</span><br><span class="line">              type: &quot;success&quot;</span><br><span class="line">            &#125;);</span><br><span class="line">            this.getMenus();</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(() =&gt; &#123;&#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    batchSave() &#123;</span><br><span class="line">      this.$http(&#123;</span><br><span class="line">        url: this.$http.adornUrl(&quot;/product/category/update/sort&quot;),</span><br><span class="line">        method: &quot;post&quot;,</span><br><span class="line">        data: this.$http.adornData(this.updateNodes, false)</span><br><span class="line">      &#125;).then((&#123; data &#125;) =&gt; &#123;</span><br><span class="line">        this.$message(&#123;</span><br><span class="line">          message: &quot;菜单顺序等修改成功&quot;,</span><br><span class="line">          type: &quot;success&quot;</span><br><span class="line">        &#125;);</span><br><span class="line">        //刷新出新的菜单</span><br><span class="line">        this.getMenus();</span><br><span class="line">        //设置需要默认展开的菜单</span><br><span class="line">        this.expandedKey = this.pCid;</span><br><span class="line">        this.updateNodes = [];</span><br><span class="line">        this.maxLevel = 0;</span><br><span class="line">        // this.pCid = 0;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    // 菜单批量处理 end =======================================================</span><br><span class="line">    // 菜单拖拽 start =======================================================</span><br><span class="line">    handleDrop(draggingNode, dropNode, dropType, ev) &#123;</span><br><span class="line">      console.log(&quot;handleDrop: &quot;, draggingNode, dropNode, dropType);</span><br><span class="line">      //1、当前节点最新的父节点id</span><br><span class="line">      let pCid = 0;</span><br><span class="line">      let siblings = null;</span><br><span class="line">      if (dropType == &quot;before&quot; || dropType == &quot;after&quot;) &#123;</span><br><span class="line">        pCid =</span><br><span class="line">          dropNode.parent.data.catId == undefined</span><br><span class="line">            ? 0</span><br><span class="line">            : dropNode.parent.data.catId;</span><br><span class="line">        siblings = dropNode.parent.childNodes;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        pCid = dropNode.data.catId;</span><br><span class="line">        siblings = dropNode.childNodes;</span><br><span class="line">      &#125;</span><br><span class="line">      this.pCid.push(pCid);</span><br><span class="line">      //2、当前拖拽节点的最新顺序，</span><br><span class="line">      for (let i = 0; i &lt; siblings.length; i++) &#123;</span><br><span class="line">        if (siblings[i].data.catId == draggingNode.data.catId) &#123;</span><br><span class="line">          //如果遍历的是当前正在拖拽的节点</span><br><span class="line">          let catLevel = draggingNode.level;</span><br><span class="line">          if (siblings[i].level != draggingNode.level) &#123;</span><br><span class="line">            //当前节点的层级发生变化</span><br><span class="line">            catLevel = siblings[i].level;</span><br><span class="line">            //修改他子节点的层级</span><br><span class="line">            this.updateChildNodeLevel(siblings[i]);</span><br><span class="line">          &#125;</span><br><span class="line">          this.updateNodes.push(&#123;</span><br><span class="line">            catId: siblings[i].data.catId,</span><br><span class="line">            sort: i,</span><br><span class="line">            parentCid: pCid,</span><br><span class="line">            catLevel: catLevel</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          this.updateNodes.push(&#123; catId: siblings[i].data.catId, sort: i &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      //3、当前拖拽节点的最新层级</span><br><span class="line">      console.log(&quot;updateNodes&quot;, this.updateNodes);</span><br><span class="line">    &#125;,</span><br><span class="line">    updateChildNodeLevel(node) &#123;</span><br><span class="line">      if (node.childNodes.length &gt; 0) &#123;</span><br><span class="line">        for (let i = 0; i &lt; node.childNodes.length; i++) &#123;</span><br><span class="line">          var cNode = node.childNodes[i].data;</span><br><span class="line">          this.updateNodes.push(&#123;</span><br><span class="line">            catId: cNode.catId,</span><br><span class="line">            catLevel: node.childNodes[i].level</span><br><span class="line">          &#125;);</span><br><span class="line">          this.updateChildNodeLevel(node.childNodes[i]);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    allowDrop(draggingNode, dropNode, type) &#123;</span><br><span class="line">      //1、被拖动的当前节点以及所在的父节点总层数不能大于3</span><br><span class="line"></span><br><span class="line">      //1）、被拖动的当前节点总层数</span><br><span class="line">      console.log(&quot;allowDrop:&quot;, draggingNode, dropNode, type);</span><br><span class="line">      //</span><br><span class="line">      this.countNodeLevel(draggingNode);</span><br><span class="line">      //当前正在拖动的节点+父节点所在的深度不大于3即可</span><br><span class="line">      let deep = Math.abs(this.maxLevel - draggingNode.level) + 1;</span><br><span class="line">      console.log(&quot;深度：&quot;, deep);</span><br><span class="line"></span><br><span class="line">      //   this.maxLevel</span><br><span class="line">      if (type == &quot;inner&quot;) &#123;</span><br><span class="line">        // console.log(</span><br><span class="line">        //   `this.maxLevel：$&#123;this.maxLevel&#125;；draggingNode.data.catLevel：$&#123;draggingNode.data.catLevel&#125;；dropNode.level：$&#123;dropNode.level&#125;`</span><br><span class="line">        // );</span><br><span class="line">        return deep + dropNode.level &lt;= 3;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        return deep + dropNode.parent.level &lt;= 3;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    countNodeLevel(node) &#123;</span><br><span class="line">      //找到所有子节点，求出最大深度</span><br><span class="line">      if (node.childNodes != null &amp;&amp; node.childNodes.length &gt; 0) &#123;</span><br><span class="line">        for (let i = 0; i &lt; node.childNodes.length; i++) &#123;</span><br><span class="line">          if (node.childNodes[i].level &gt; this.maxLevel) &#123;</span><br><span class="line">            this.maxLevel = node.childNodes[i].level;</span><br><span class="line">          &#125;</span><br><span class="line">          this.countNodeLevel(node.childNodes[i]);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 菜单拖拽 end =======================================================</span><br><span class="line">    submitData() &#123;</span><br><span class="line">      if (this.dialogType == &quot;add&quot;) &#123;</span><br><span class="line">        this.addCategory();</span><br><span class="line">      &#125;</span><br><span class="line">      if (this.dialogType == &quot;edit&quot;) &#123;</span><br><span class="line">        this.editCategory();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    edit(data) &#123;</span><br><span class="line">      console.log(&quot;要修改的数据&quot;, data);</span><br><span class="line">      this.dialogType = &quot;edit&quot;;</span><br><span class="line">      this.title = &quot;修改分类&quot;;</span><br><span class="line">      this.dialogVisible = true;</span><br><span class="line"></span><br><span class="line">      //发送请求获取当前节点最新的数据</span><br><span class="line">      this.$http(&#123;</span><br><span class="line">        url: this.$http.adornUrl(`/product/category/info/$&#123;data.catId&#125;`),</span><br><span class="line">        method: &quot;get&quot;</span><br><span class="line">      &#125;).then((&#123; data &#125;) =&gt; &#123;</span><br><span class="line">        //请求成功</span><br><span class="line">        console.log(&quot;要回显的数据&quot;, data);</span><br><span class="line">        this.category.name = data.data.name;</span><br><span class="line">        this.category.catId = data.data.catId;</span><br><span class="line">        this.category.icon = data.data.icon;</span><br><span class="line">        this.category.productUnit = data.data.productUnit;</span><br><span class="line">        this.category.parentCid = data.data.parentCid;</span><br><span class="line">        this.category.catLevel = data.data.catLevel;</span><br><span class="line">        this.category.sort = data.data.sort;</span><br><span class="line">        this.category.showStatus = data.data.showStatus;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    //修改三级分类数据</span><br><span class="line">    editCategory() &#123;</span><br><span class="line">      var &#123; catId, name, icon, productUnit &#125; = this.category;</span><br><span class="line">      this.$http(&#123;</span><br><span class="line">        url: this.$http.adornUrl(&quot;/product/category/update&quot;),</span><br><span class="line">        method: &quot;post&quot;,</span><br><span class="line">        data: this.$http.adornData(&#123; catId, name, icon, productUnit &#125;, false)</span><br><span class="line">      &#125;).then((&#123; data &#125;) =&gt; &#123;</span><br><span class="line">        this.$message(&#123;</span><br><span class="line">          message: &quot;菜单修改成功&quot;,</span><br><span class="line">          type: &quot;success&quot;</span><br><span class="line">        &#125;);</span><br><span class="line">        //关闭对话框</span><br><span class="line">        this.dialogVisible = false;</span><br><span class="line">        //刷新出新的菜单</span><br><span class="line">        this.getMenus();</span><br><span class="line">        //设置需要默认展开的菜单</span><br><span class="line">        this.expandedKey = [this.category.parentCid];</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    append(data) &#123;</span><br><span class="line">      console.log(&quot;append&quot;, data);</span><br><span class="line">      this.dialogType = &quot;add&quot;;</span><br><span class="line">      this.title = &quot;添加分类&quot;;</span><br><span class="line">      this.dialogVisible = true;</span><br><span class="line">      this.category.parentCid = data.catId;</span><br><span class="line">      this.category.catLevel = data.catLevel * 1 + 1;</span><br><span class="line">      this.category.catId = null;</span><br><span class="line">      this.category.name = &quot;&quot;;</span><br><span class="line">      this.category.icon = &quot;&quot;;</span><br><span class="line">      this.category.productUnit = &quot;&quot;;</span><br><span class="line">      this.category.sort = 0;</span><br><span class="line">      this.category.showStatus = 1;</span><br><span class="line">    &#125;,</span><br><span class="line">    //添加三级分类</span><br><span class="line">    addCategory() &#123;</span><br><span class="line">      console.log(&quot;提交的三级分类数据&quot;, this.category);</span><br><span class="line">      this.$http(&#123;</span><br><span class="line">        url: this.$http.adornUrl(&quot;/product/category/save&quot;),</span><br><span class="line">        method: &quot;post&quot;,</span><br><span class="line">        data: this.$http.adornData(this.category, false)</span><br><span class="line">      &#125;).then((&#123; data &#125;) =&gt; &#123;</span><br><span class="line">        this.$message(&#123;</span><br><span class="line">          message: &quot;菜单保存成功&quot;,</span><br><span class="line">          type: &quot;success&quot;</span><br><span class="line">        &#125;);</span><br><span class="line">        //关闭对话框</span><br><span class="line">        this.dialogVisible = false;</span><br><span class="line">        //刷新出新的菜单</span><br><span class="line">        this.getMenus();</span><br><span class="line">        //设置需要默认展开的菜单</span><br><span class="line">        this.expandedKey = [this.category.parentCid];</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    remove(node, data) &#123;</span><br><span class="line">      var ids = [data.catId];</span><br><span class="line">      this.$confirm(`是否删除【$&#123;data.name&#125;】菜单?`, &quot;提示&quot;, &#123;</span><br><span class="line">        confirmButtonText: &quot;确定&quot;,</span><br><span class="line">        cancelButtonText: &quot;取消&quot;,</span><br><span class="line">        type: &quot;warning&quot;</span><br><span class="line">      &#125;)</span><br><span class="line">        .then(() =&gt; &#123;</span><br><span class="line">          this.$http(&#123;</span><br><span class="line">            url: this.$http.adornUrl(&quot;/product/category/delete&quot;),</span><br><span class="line">            method: &quot;post&quot;,</span><br><span class="line">            data: this.$http.adornData(ids, false)</span><br><span class="line">          &#125;).then((&#123; data &#125;) =&gt; &#123;</span><br><span class="line">            this.$message(&#123;</span><br><span class="line">              message: &quot;菜单删除成功&quot;,</span><br><span class="line">              type: &quot;success&quot;</span><br><span class="line">            &#125;);</span><br><span class="line">            //刷新出新的菜单</span><br><span class="line">            this.getMenus();</span><br><span class="line">            //设置需要默认展开的菜单</span><br><span class="line">            this.expandedKey = [node.parent.data.catId];</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(() =&gt; &#123;&#125;);</span><br><span class="line">      console.log(&quot;remove&quot;, node, data);</span><br><span class="line">    &#125;,</span><br><span class="line">    // 查询菜单</span><br><span class="line">    getMenus() &#123;</span><br><span class="line">      this.$http(&#123;</span><br><span class="line">        url: this.$http.adornUrl(&quot;/product/category/menu&quot;),</span><br><span class="line">        method: &quot;get&quot;</span><br><span class="line">      &#125;).then((&#123; data &#125;) =&gt; &#123;</span><br><span class="line">        this.menus = data.data;</span><br><span class="line">        console.log(&quot;菜单=========&quot;, data.data);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  activated() &#123;</span><br><span class="line">    this.getMenus();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h3 id="品牌管理"><a href="#品牌管理" class="headerlink" title="品牌管理"></a>品牌管理</h3><h4 id="使用逆向工程的前后端代码"><a href="#使用逆向工程的前后端代码" class="headerlink" title="使用逆向工程的前后端代码"></a>使用逆向工程的前后端代码</h4><p>1.在菜单管理中在商品服务下生成一个品牌管理的菜单，菜单路径为product&#x2F;brand</p>
<p>2.使用逆向生成代码的两个文件 brand.vue 和 brand-add-or-update.vue 文件放到product 文件夹下。</p>
<p>3.由于做了权限设置，所以进入&#x2F;utils&#x2F;index.js 文件夹下修改 isAuth 方法的返回值一直为true。</p>
<h4 id="效果优化与快速显示开关"><a href="#效果优化与快速显示开关" class="headerlink" title="效果优化与快速显示开关"></a>效果优化与快速显示开关</h4><h5 id="关闭ESLint-语法检查"><a href="#关闭ESLint-语法检查" class="headerlink" title="关闭ESLint 语法检查"></a>关闭ESLint 语法检查</h5><p>打开build文件夹下的webpack.base.conf.js，然后注释调createLintingRule中的方法体。</p>
<p>1.优化brand.vue 之后的代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;mod-config&quot;&gt;</span><br><span class="line">    &lt;el-form</span><br><span class="line">      :inline=&quot;true&quot;</span><br><span class="line">      :model=&quot;dataForm&quot;</span><br><span class="line">      @keyup.enter.native=&quot;getDataList()&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;el-form-item&gt;</span><br><span class="line">        &lt;el-input</span><br><span class="line">          v-model=&quot;dataForm.key&quot;</span><br><span class="line">          placeholder=&quot;参数名&quot;</span><br><span class="line">          clearable</span><br><span class="line">        &gt;&lt;/el-input&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-form-item&gt;</span><br><span class="line">        &lt;el-button @click=&quot;getDataList()&quot;&gt;查询&lt;/el-button&gt;</span><br><span class="line">        &lt;el-button</span><br><span class="line">          v-if=&quot;isAuth(&#x27;product:brand:save&#x27;)&quot;</span><br><span class="line">          type=&quot;primary&quot;</span><br><span class="line">          @click=&quot;addOrUpdateHandle()&quot;</span><br><span class="line">          &gt;新增&lt;/el-button</span><br><span class="line">        &gt;</span><br><span class="line">        &lt;el-button</span><br><span class="line">          v-if=&quot;isAuth(&#x27;product:brand:delete&#x27;)&quot;</span><br><span class="line">          type=&quot;danger&quot;</span><br><span class="line">          @click=&quot;deleteHandle()&quot;</span><br><span class="line">          :disabled=&quot;dataListSelections.length &lt;= 0&quot;</span><br><span class="line">          &gt;批量删除&lt;/el-button</span><br><span class="line">        &gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">    &lt;/el-form&gt;</span><br><span class="line">    &lt;el-table</span><br><span class="line">      :data=&quot;dataList&quot;</span><br><span class="line">      border</span><br><span class="line">      v-loading=&quot;dataListLoading&quot;</span><br><span class="line">      @selection-change=&quot;selectionChangeHandle&quot;</span><br><span class="line">      style=&quot;width: 100%;&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;el-table-column</span><br><span class="line">        type=&quot;selection&quot;</span><br><span class="line">        header-align=&quot;center&quot;</span><br><span class="line">        align=&quot;center&quot;</span><br><span class="line">        width=&quot;50&quot;</span><br><span class="line">      &gt;</span><br><span class="line">      &lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column</span><br><span class="line">        prop=&quot;brandId&quot;</span><br><span class="line">        header-align=&quot;center&quot;</span><br><span class="line">        align=&quot;center&quot;</span><br><span class="line">        label=&quot;品牌id&quot;</span><br><span class="line">      &gt;</span><br><span class="line">      &lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column</span><br><span class="line">        prop=&quot;name&quot;</span><br><span class="line">        header-align=&quot;center&quot;</span><br><span class="line">        align=&quot;center&quot;</span><br><span class="line">        label=&quot;品牌名&quot;</span><br><span class="line">      &gt;</span><br><span class="line">      &lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column</span><br><span class="line">        prop=&quot;logo&quot;</span><br><span class="line">        header-align=&quot;center&quot;</span><br><span class="line">        align=&quot;center&quot;</span><br><span class="line">        label=&quot;品牌logo地址&quot;</span><br><span class="line">      &gt;</span><br><span class="line">      &lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column</span><br><span class="line">        prop=&quot;descript&quot;</span><br><span class="line">        header-align=&quot;center&quot;</span><br><span class="line">        align=&quot;center&quot;</span><br><span class="line">        label=&quot;介绍&quot;</span><br><span class="line">      &gt;</span><br><span class="line">      &lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column</span><br><span class="line">        prop=&quot;showStatus&quot;</span><br><span class="line">        header-align=&quot;center&quot;</span><br><span class="line">        align=&quot;center&quot;</span><br><span class="line">        label=&quot;显示状态&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">          &lt;el-switch</span><br><span class="line">            v-model=&quot;scope.row.showStatus&quot;</span><br><span class="line">            active-color=&quot;#13ce66&quot;</span><br><span class="line">            inactive-color=&quot;#ff4949&quot;</span><br><span class="line">            :active-value=&quot;1&quot;</span><br><span class="line">            :inactive-value=&quot;0&quot;</span><br><span class="line">            @change=&quot;updateBrandStatus(scope.row)&quot;</span><br><span class="line">          &gt;&lt;/el-switch&gt;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">      &lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column</span><br><span class="line">        prop=&quot;firstLetter&quot;</span><br><span class="line">        header-align=&quot;center&quot;</span><br><span class="line">        align=&quot;center&quot;</span><br><span class="line">        label=&quot;检索首字母&quot;</span><br><span class="line">      &gt;</span><br><span class="line">      &lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column</span><br><span class="line">        prop=&quot;sort&quot;</span><br><span class="line">        header-align=&quot;center&quot;</span><br><span class="line">        align=&quot;center&quot;</span><br><span class="line">        label=&quot;排序&quot;</span><br><span class="line">      &gt;</span><br><span class="line">      &lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column</span><br><span class="line">        fixed=&quot;right&quot;</span><br><span class="line">        header-align=&quot;center&quot;</span><br><span class="line">        align=&quot;center&quot;</span><br><span class="line">        width=&quot;150&quot;</span><br><span class="line">        label=&quot;操作&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">          &lt;el-button</span><br><span class="line">            type=&quot;text&quot;</span><br><span class="line">            size=&quot;small&quot;</span><br><span class="line">            @click=&quot;addOrUpdateHandle(scope.row.brandId)&quot;</span><br><span class="line">            &gt;修改&lt;/el-button</span><br><span class="line">          &gt;</span><br><span class="line">          &lt;el-button</span><br><span class="line">            type=&quot;text&quot;</span><br><span class="line">            size=&quot;small&quot;</span><br><span class="line">            @click=&quot;deleteHandle(scope.row.brandId)&quot;</span><br><span class="line">            &gt;删除&lt;/el-button</span><br><span class="line">          &gt;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">      &lt;/el-table-column&gt;</span><br><span class="line">    &lt;/el-table&gt;</span><br><span class="line">    &lt;el-pagination</span><br><span class="line">      @size-change=&quot;sizeChangeHandle&quot;</span><br><span class="line">      @current-change=&quot;currentChangeHandle&quot;</span><br><span class="line">      :current-page=&quot;pageIndex&quot;</span><br><span class="line">      :page-sizes=&quot;[10, 20, 50, 100]&quot;</span><br><span class="line">      :page-size=&quot;pageSize&quot;</span><br><span class="line">      :total=&quot;totalPage&quot;</span><br><span class="line">      layout=&quot;total, sizes, prev, pager, next, jumper&quot;</span><br><span class="line">    &gt;</span><br><span class="line">    &lt;/el-pagination&gt;</span><br><span class="line">    &lt;!-- 弹窗, 新增 / 修改 --&gt;</span><br><span class="line">    &lt;add-or-update</span><br><span class="line">      v-if=&quot;addOrUpdateVisible&quot;</span><br><span class="line">      ref=&quot;addOrUpdate&quot;</span><br><span class="line">      @refreshDataList=&quot;getDataList&quot;</span><br><span class="line">    &gt;&lt;/add-or-update&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import AddOrUpdate from &quot;./brand-add-or-update&quot;;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      dataForm: &#123;</span><br><span class="line">        key: &quot;&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      dataList: [],</span><br><span class="line">      pageIndex: 1,</span><br><span class="line">      pageSize: 10,</span><br><span class="line">      totalPage: 0,</span><br><span class="line">      dataListLoading: false,</span><br><span class="line">      dataListSelections: [],</span><br><span class="line">      addOrUpdateVisible: false</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    AddOrUpdate</span><br><span class="line">  &#125;,</span><br><span class="line">  activated() &#123;</span><br><span class="line">    this.getDataList();</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    // 修改显示状态</span><br><span class="line">    updateBrandStatus(data) &#123;</span><br><span class="line">      console.log(&quot;最新信息&quot;, data);</span><br><span class="line">      let &#123; brandId, showStatus &#125; = data;</span><br><span class="line">      //发送请求修改状态</span><br><span class="line">      this.$http(&#123;</span><br><span class="line">        url: this.$http.adornUrl(&quot;/product/brand/update&quot;),</span><br><span class="line">        method: &quot;post&quot;,</span><br><span class="line">        data: this.$http.adornData(&#123; brandId, showStatus &#125;, false)</span><br><span class="line">      &#125;).then((&#123; data &#125;) =&gt; &#123;</span><br><span class="line">        this.$message(&#123;</span><br><span class="line">          type: &quot;success&quot;,</span><br><span class="line">          message: &quot;状态更新成功&quot;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    // 获取数据列表</span><br><span class="line">    getDataList() &#123;</span><br><span class="line">      this.dataListLoading = true;</span><br><span class="line">      this.$http(&#123;</span><br><span class="line">        url: this.$http.adornUrl(&quot;/product/brand/list&quot;),</span><br><span class="line">        method: &quot;get&quot;,</span><br><span class="line">        params: this.$http.adornParams(&#123;</span><br><span class="line">          page: this.pageIndex,</span><br><span class="line">          limit: this.pageSize,</span><br><span class="line">          key: this.dataForm.key</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;).then((&#123; data &#125;) =&gt; &#123;</span><br><span class="line">        if (data &amp;&amp; data.code === 0) &#123;</span><br><span class="line">          this.dataList = data.page.list;</span><br><span class="line">          this.totalPage = data.page.totalCount;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          this.dataList = [];</span><br><span class="line">          this.totalPage = 0;</span><br><span class="line">        &#125;</span><br><span class="line">        this.dataListLoading = false;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    // 每页数</span><br><span class="line">    sizeChangeHandle(val) &#123;</span><br><span class="line">      this.pageSize = val;</span><br><span class="line">      this.pageIndex = 1;</span><br><span class="line">      this.getDataList();</span><br><span class="line">    &#125;,</span><br><span class="line">    // 当前页</span><br><span class="line">    currentChangeHandle(val) &#123;</span><br><span class="line">      this.pageIndex = val;</span><br><span class="line">      this.getDataList();</span><br><span class="line">    &#125;,</span><br><span class="line">    // 多选</span><br><span class="line">    selectionChangeHandle(val) &#123;</span><br><span class="line">      this.dataListSelections = val;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 新增 / 修改</span><br><span class="line">    addOrUpdateHandle(id) &#123;</span><br><span class="line">      this.addOrUpdateVisible = true;</span><br><span class="line">      this.$nextTick(() =&gt; &#123;</span><br><span class="line">        this.$refs.addOrUpdate.init(id);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    // 删除</span><br><span class="line">    deleteHandle(id) &#123;</span><br><span class="line">      var ids = id</span><br><span class="line">        ? [id]</span><br><span class="line">        : this.dataListSelections.map(item =&gt; &#123;</span><br><span class="line">            return item.brandId;</span><br><span class="line">          &#125;);</span><br><span class="line">      this.$confirm(</span><br><span class="line">        `确定对[id=$&#123;ids.join(&quot;,&quot;)&#125;]进行[$&#123;id ? &quot;删除&quot; : &quot;批量删除&quot;&#125;]操作?`,</span><br><span class="line">        &quot;提示&quot;,</span><br><span class="line">        &#123;</span><br><span class="line">          confirmButtonText: &quot;确定&quot;,</span><br><span class="line">          cancelButtonText: &quot;取消&quot;,</span><br><span class="line">          type: &quot;warning&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      ).then(() =&gt; &#123;</span><br><span class="line">        this.$http(&#123;</span><br><span class="line">          url: this.$http.adornUrl(&quot;/product/brand/delete&quot;),</span><br><span class="line">          method: &quot;post&quot;,</span><br><span class="line">          data: this.$http.adornData(ids, false)</span><br><span class="line">        &#125;).then((&#123; data &#125;) =&gt; &#123;</span><br><span class="line">          if (data &amp;&amp; data.code === 0) &#123;</span><br><span class="line">            this.$message(&#123;</span><br><span class="line">              message: &quot;操作成功&quot;,</span><br><span class="line">              type: &quot;success&quot;,</span><br><span class="line">              duration: 1500,</span><br><span class="line">              onClose: () =&gt; &#123;</span><br><span class="line">                this.getDataList();</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">          &#125; else &#123;</span><br><span class="line">            this.$message.error(data.msg);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>brand-add-or-update.vue 内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;el-dialog</span><br><span class="line">    :title=&quot;!dataForm.id ? &#x27;新增&#x27; : &#x27;修改&#x27;&quot;</span><br><span class="line">    :close-on-click-modal=&quot;false&quot;</span><br><span class="line">    :visible.sync=&quot;visible&quot;&gt;</span><br><span class="line">    &lt;el-form :model=&quot;dataForm&quot; :rules=&quot;dataRule&quot; ref=&quot;dataForm&quot; @keyup.enter.native=&quot;dataFormSubmit()&quot; label-width=&quot;140px&quot;&gt;</span><br><span class="line">    &lt;el-form-item label=&quot;品牌名&quot; prop=&quot;name&quot;&gt;</span><br><span class="line">      &lt;el-input v-model=&quot;dataForm.name&quot; placeholder=&quot;品牌名&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">    &lt;/el-form-item&gt;</span><br><span class="line">    &lt;el-form-item label=&quot;品牌logo地址&quot; prop=&quot;logo&quot;&gt;</span><br><span class="line">      &lt;el-input v-model=&quot;dataForm.logo&quot; placeholder=&quot;品牌logo地址&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">    &lt;/el-form-item&gt;</span><br><span class="line">    &lt;el-form-item label=&quot;介绍&quot; prop=&quot;descript&quot;&gt;</span><br><span class="line">      &lt;el-input v-model=&quot;dataForm.descript&quot; placeholder=&quot;介绍&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">    &lt;/el-form-item&gt;</span><br><span class="line">    &lt;el-form-item label=&quot;显示状态&quot; prop=&quot;showStatus&quot;&gt;</span><br><span class="line">        &lt;el-switch</span><br><span class="line">          v-model=&quot;dataForm.showStatus&quot;</span><br><span class="line">          active-color=&quot;#13ce66&quot;</span><br><span class="line">          inactive-color=&quot;#ff4949&quot;</span><br><span class="line">          :active-value=&quot;1&quot;</span><br><span class="line">          :inactive-value=&quot;0&quot;</span><br><span class="line">        &gt;&lt;/el-switch&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">    &lt;el-form-item label=&quot;检索首字母&quot; prop=&quot;firstLetter&quot;&gt;</span><br><span class="line">      &lt;el-input v-model=&quot;dataForm.firstLetter&quot; placeholder=&quot;检索首字母&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">    &lt;/el-form-item&gt;</span><br><span class="line">    &lt;el-form-item label=&quot;排序&quot; prop=&quot;sort&quot;&gt;</span><br><span class="line">      &lt;el-input v-model=&quot;dataForm.sort&quot; placeholder=&quot;排序&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">    &lt;/el-form-item&gt;</span><br><span class="line">    &lt;/el-form&gt;</span><br><span class="line">    &lt;span slot=&quot;footer&quot; class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">      &lt;el-button @click=&quot;visible = false&quot;&gt;取消&lt;/el-button&gt;</span><br><span class="line">      &lt;el-button type=&quot;primary&quot; @click=&quot;dataFormSubmit()&quot;&gt;确定&lt;/el-button&gt;</span><br><span class="line">    &lt;/span&gt;</span><br><span class="line">  &lt;/el-dialog&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    data () &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        visible: false,</span><br><span class="line">        dataForm: &#123;</span><br><span class="line">          brandId: 0,</span><br><span class="line">          name: &#x27;&#x27;,</span><br><span class="line">          logo: &#x27;&#x27;,</span><br><span class="line">          descript: &#x27;&#x27;,</span><br><span class="line">          showStatus: &#x27;&#x27;,</span><br><span class="line">          firstLetter: &#x27;&#x27;,</span><br><span class="line">          sort: &#x27;&#x27;</span><br><span class="line">        &#125;,</span><br><span class="line">        dataRule: &#123;</span><br><span class="line">          name: [</span><br><span class="line">            &#123; required: true, message: &#x27;品牌名不能为空&#x27;, trigger: &#x27;blur&#x27; &#125;</span><br><span class="line">          ],</span><br><span class="line">          logo: [</span><br><span class="line">            &#123; required: true, message: &#x27;品牌logo地址不能为空&#x27;, trigger: &#x27;blur&#x27; &#125;</span><br><span class="line">          ],</span><br><span class="line">          descript: [</span><br><span class="line">            &#123; required: true, message: &#x27;介绍不能为空&#x27;, trigger: &#x27;blur&#x27; &#125;</span><br><span class="line">          ],</span><br><span class="line">          showStatus: [</span><br><span class="line">            &#123; required: true, message: &#x27;显示状态[0-不显示；1-显示]不能为空&#x27;, trigger: &#x27;blur&#x27; &#125;</span><br><span class="line">          ],</span><br><span class="line">          firstLetter: [</span><br><span class="line">            &#123; required: true, message: &#x27;检索首字母不能为空&#x27;, trigger: &#x27;blur&#x27; &#125;</span><br><span class="line">          ],</span><br><span class="line">          sort: [</span><br><span class="line">            &#123; required: true, message: &#x27;排序不能为空&#x27;, trigger: &#x27;blur&#x27; &#125;</span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      init (id) &#123;</span><br><span class="line">        this.dataForm.brandId = id || 0</span><br><span class="line">        this.visible = true</span><br><span class="line">        this.$nextTick(() =&gt; &#123;</span><br><span class="line">          this.$refs[&#x27;dataForm&#x27;].resetFields()</span><br><span class="line">          if (this.dataForm.brandId) &#123;</span><br><span class="line">            this.$http(&#123;</span><br><span class="line">              url: this.$http.adornUrl(`/product/brand/info/$&#123;this.dataForm.brandId&#125;`),</span><br><span class="line">              method: &#x27;get&#x27;,</span><br><span class="line">              params: this.$http.adornParams()</span><br><span class="line">            &#125;).then((&#123;data&#125;) =&gt; &#123;</span><br><span class="line">              if (data &amp;&amp; data.code === 0) &#123;</span><br><span class="line">                this.dataForm.name = data.brand.name</span><br><span class="line">                this.dataForm.logo = data.brand.logo</span><br><span class="line">                this.dataForm.descript = data.brand.descript</span><br><span class="line">                this.dataForm.showStatus = data.brand.showStatus</span><br><span class="line">                this.dataForm.firstLetter = data.brand.firstLetter</span><br><span class="line">                this.dataForm.sort = data.brand.sort</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      // 表单提交</span><br><span class="line">      dataFormSubmit () &#123;</span><br><span class="line">        this.$refs[&#x27;dataForm&#x27;].validate((valid) =&gt; &#123;</span><br><span class="line">          if (valid) &#123;</span><br><span class="line">            this.$http(&#123;</span><br><span class="line">              url: this.$http.adornUrl(`/product/brand/$&#123;!this.dataForm.brandId ? &#x27;save&#x27; : &#x27;update&#x27;&#125;`),</span><br><span class="line">              method: &#x27;post&#x27;,</span><br><span class="line">              data: this.$http.adornData(&#123;</span><br><span class="line">                &#x27;brandId&#x27;: this.dataForm.brandId || undefined,</span><br><span class="line">                &#x27;name&#x27;: this.dataForm.name,</span><br><span class="line">                &#x27;logo&#x27;: this.dataForm.logo,</span><br><span class="line">                &#x27;descript&#x27;: this.dataForm.descript,</span><br><span class="line">                &#x27;showStatus&#x27;: this.dataForm.showStatus,</span><br><span class="line">                &#x27;firstLetter&#x27;: this.dataForm.firstLetter,</span><br><span class="line">                &#x27;sort&#x27;: this.dataForm.sort</span><br><span class="line">              &#125;)</span><br><span class="line">            &#125;).then((&#123;data&#125;) =&gt; &#123;</span><br><span class="line">              if (data &amp;&amp; data.code === 0) &#123;</span><br><span class="line">                this.$message(&#123;</span><br><span class="line">                  message: &#x27;操作成功&#x27;,</span><br><span class="line">                  type: &#x27;success&#x27;,</span><br><span class="line">                  duration: 1500,</span><br><span class="line">                  onClose: () =&gt; &#123;</span><br><span class="line">                    this.visible = false</span><br><span class="line">                    this.$emit(&#x27;refreshDataList&#x27;)</span><br><span class="line">                  &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">              &#125; else &#123;</span><br><span class="line">                this.$message.error(data.msg)</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h4 id="云存储开通与使用"><a href="#云存储开通与使用" class="headerlink" title="云存储开通与使用"></a>云存储开通与使用</h4><p>开通阿里云OSS</p>
<h4 id="OSS-整合测试"><a href="#OSS-整合测试" class="headerlink" title="OSS 整合测试"></a>OSS 整合测试</h4><h5 id="普通Maven项目引入"><a href="#普通Maven项目引入" class="headerlink" title="普通Maven项目引入"></a>普通Maven项目引入</h5><p>1.在阿里云平台开通RAM服务，然后在RAM 服务下创建子账号，然后保存生成的AccessKey ID 和 AccessKey Secret 。</p>
<p>2.查看OSS官方文档，引入下面的maven依赖，根据文档示例写一个简单的demo 测试。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun.oss<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-sdk-oss<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.10.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h5 id="SpringCloud-Alibaba-OSS-引入"><a href="#SpringCloud-Alibaba-OSS-引入" class="headerlink" title="SpringCloud Alibaba OSS 引入"></a>SpringCloud Alibaba OSS 引入</h5><p>1.打开github 上的 demo示例，<a class="link"   href="https://github.com/alibaba/aliyun-spring-boot/tree/master/aliyun-spring-boot-samples/aliyun-oss-spring-boot-sample" >https://github.com/alibaba/aliyun-spring-boot/tree/master/aliyun-spring-boot-samples/aliyun-oss-spring-boot-sample<i class="fas fa-external-link-alt"></i></a>.</p>
<p>2.加入以下以下maven依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-oss-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>3.然后在配置文件文件中加入以下配置</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">//</span> <span class="string">application.properties</span></span><br><span class="line"><span class="attr">alibaba.cloud.access-key</span>=<span class="string">your-ak</span></span><br><span class="line"><span class="attr">alibaba.cloud.secret-key</span>=<span class="string">your-sk</span></span><br><span class="line"><span class="attr">alibaba.cloud.oss.endpoint</span>=<span class="string">***</span></span><br></pre></td></tr></table></figure>

<p>4.然后在业务在业务项目中使用以下代码进行OSS客户端注入访问</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">YourService</span> &#123;</span><br><span class="line"> 	<span class="meta">@Autowired</span></span><br><span class="line"> 	<span class="keyword">private</span> OSSClient ossClient;</span><br><span class="line"></span><br><span class="line"> 	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveFile</span><span class="params">()</span> &#123;</span><br><span class="line"> 		<span class="comment">// download file to local</span></span><br><span class="line"> 		ossClient.getObject(<span class="keyword">new</span> <span class="title class_">GetObjectRequest</span>(bucketName, objectName), <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;pathOfYourLocalFile&quot;</span>));</span><br><span class="line"> 	&#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<p>5.弄一个测试demo</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.aliyun.oss.OSSClient;</span><br><span class="line"><span class="keyword">import</span> com.centersept.supermall.product.service.BrandService;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SuperMallProductApplicationTests</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    OSSClient ossClient;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span> <span class="keyword">throws</span> FileNotFoundException &#123;</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;C:\\Users\\qkz-admin\\Pictures&quot;</span> +</span><br><span class="line">                <span class="string">&quot;\\ba4957ffgy1g89ginl2cwj20dw0dw75d.jpg&quot;</span>);</span><br><span class="line">        ossClient.putObject(<span class="string">&quot;center-test&quot;</span>, <span class="string">&quot;ba4957ffgy1g89ginl2cwj20dw0dw75d.jpg&quot;</span>, inputStream);</span><br><span class="line">        ossClient.shutdown();</span><br><span class="line">        System.out.println(<span class="string">&quot;上传完成&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="OSS-获取服务端签名"><a href="#OSS-获取服务端签名" class="headerlink" title="OSS 获取服务端签名"></a>OSS 获取服务端签名</h4><p>1.建立一个新的模块，该模块是引入第三方服务的模块，命名super-mall-TTS</p>
<p>2.maven的pom加入以下内容</p>
<p><strong>注：依赖的springboot的版本号一定要一致。</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.8.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.centersept.supermall<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>super-mall-tts<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>super-mall-tts<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>第三方服务模块<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>Greenwich.SR3<span class="tag">&lt;/<span class="name">spring-cloud.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.centersept.supermall<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>super-mall-common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--引入阿里云封装好的cloud oss--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alicloud-oss<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>3.创建bootstrap.properties 文件加入nacos config 的配置。</p>
<p>4.创建一个生成签名的contorller</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.aliyun.oss.OSS;</span><br><span class="line"><span class="keyword">import</span> com.aliyun.oss.common.utils.BinaryUtil;</span><br><span class="line"><span class="keyword">import</span> com.aliyun.oss.model.MatchMode;</span><br><span class="line"><span class="keyword">import</span> com.aliyun.oss.model.PolicyConditions;</span><br><span class="line"><span class="keyword">import</span> com.centersept.supermall.common.utils.R;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.LinkedHashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Center_Sept</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/11/19 15:51</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OssController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> OSS ossClient;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 端点</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.cloud.alicloud.oss.endpoint&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String endpoint;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * bucket</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.cloud.alicloud.oss.bucket&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String bucket;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * access-key</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.cloud.alicloud.access-key&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String accessId;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 功能描述：获得上传policy和签名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/oss/policy&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">policy</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">host</span> <span class="operator">=</span> <span class="string">&quot;https://&quot;</span> + bucket + <span class="string">&quot;.&quot;</span> + endpoint; <span class="comment">// host的格式为 https:// + bucketname + endpoint</span></span><br><span class="line">        <span class="comment">// callbackUrl为 上传回调服务器的URL，请将下面的IP和Port配置为您自己的真实信息。</span></span><br><span class="line">        <span class="comment">// String callbackUrl = &quot;http://88.88.88.88:8888&quot;;</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">format</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd&quot;</span>).format(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">        <span class="type">String</span> <span class="variable">dir</span> <span class="operator">=</span> format + <span class="string">&quot;/&quot;</span>; <span class="comment">// 用户上传文件时指定的前缀。</span></span><br><span class="line"></span><br><span class="line">        Map&lt;String, String&gt; respMap = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">long</span> <span class="variable">expireTime</span> <span class="operator">=</span> <span class="number">30</span>;</span><br><span class="line">            <span class="type">long</span> <span class="variable">expireEndTime</span> <span class="operator">=</span> System.currentTimeMillis() + expireTime * <span class="number">1000</span>;</span><br><span class="line">            <span class="comment">// 30 s 超时</span></span><br><span class="line">            <span class="type">Date</span> <span class="variable">expiration</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Date</span>(expireEndTime);</span><br><span class="line">            <span class="type">PolicyConditions</span> <span class="variable">policyConds</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PolicyConditions</span>();</span><br><span class="line">            policyConds.addConditionItem(PolicyConditions.COND_CONTENT_LENGTH_RANGE, <span class="number">0</span>, <span class="number">1048576000</span>);</span><br><span class="line">            policyConds.addConditionItem(MatchMode.StartWith, PolicyConditions.COND_KEY, dir);</span><br><span class="line"></span><br><span class="line">            <span class="type">String</span> <span class="variable">postPolicy</span> <span class="operator">=</span> ossClient.generatePostPolicy(expiration, policyConds);</span><br><span class="line">            <span class="type">byte</span>[] binaryData = postPolicy.getBytes(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">encodedPolicy</span> <span class="operator">=</span> BinaryUtil.toBase64String(binaryData);</span><br><span class="line">            <span class="type">String</span> <span class="variable">postSignature</span> <span class="operator">=</span> ossClient.calculatePostSignature(postPolicy);</span><br><span class="line">            respMap = <span class="keyword">new</span> <span class="title class_">LinkedHashMap</span>&lt;String, String&gt;();</span><br><span class="line">            <span class="comment">// access-key</span></span><br><span class="line">            respMap.put(<span class="string">&quot;accessid&quot;</span>, accessId);</span><br><span class="line">            <span class="comment">// 策略</span></span><br><span class="line">            respMap.put(<span class="string">&quot;policy&quot;</span>, encodedPolicy);</span><br><span class="line">            <span class="comment">// 策略签名</span></span><br><span class="line">            respMap.put(<span class="string">&quot;signature&quot;</span>, postSignature);</span><br><span class="line">            <span class="comment">// 用户上传文件时指定的前缀</span></span><br><span class="line">            respMap.put(<span class="string">&quot;dir&quot;</span>, dir);</span><br><span class="line">            <span class="comment">// 主机</span></span><br><span class="line">            respMap.put(<span class="string">&quot;host&quot;</span>, host);</span><br><span class="line">            <span class="comment">// 过期时间</span></span><br><span class="line">            respMap.put(<span class="string">&quot;expire&quot;</span>, String.valueOf(expireEndTime / <span class="number">1000</span>));</span><br><span class="line">            <span class="comment">// respMap.put(&quot;expire&quot;, formatISO8601Date(expiration));</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="comment">// Assert.fail(e.getMessage());</span></span><br><span class="line">            System.out.println(e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> R.ok().put(<span class="string">&quot;data&quot;</span>, respMap);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="OSS-前后联调测试上传"><a href="#OSS-前后联调测试上传" class="headerlink" title="OSS 前后联调测试上传"></a>OSS 前后联调测试上传</h4><p>1.引入以下三个文件，放在src&#x2F;components&#x2F;upload 文件夹下。</p>
<p>多文件上传组件 multiUpload.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;el-upload</span><br><span class="line">      action=&quot;http://center-test.oss-cn-beijing.aliyuncs.com&quot;</span><br><span class="line">      :data=&quot;dataObj&quot;</span><br><span class="line">      list-type=&quot;picture-card&quot;</span><br><span class="line">      :file-list=&quot;fileList&quot;</span><br><span class="line">      :before-upload=&quot;beforeUpload&quot;</span><br><span class="line">      :on-remove=&quot;handleRemove&quot;</span><br><span class="line">      :on-success=&quot;handleUploadSuccess&quot;</span><br><span class="line">      :on-preview=&quot;handlePreview&quot;</span><br><span class="line">      :limit=&quot;maxCount&quot;</span><br><span class="line">      :on-exceed=&quot;handleExceed&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;i class=&quot;el-icon-plus&quot;&gt;&lt;/i&gt;</span><br><span class="line">    &lt;/el-upload&gt;</span><br><span class="line">    &lt;el-dialog :visible.sync=&quot;dialogVisible&quot;&gt;</span><br><span class="line">      &lt;img width=&quot;100%&quot; :src=&quot;dialogImageUrl&quot; alt /&gt;</span><br><span class="line">    &lt;/el-dialog&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; policy &#125; from &quot;./policy&quot;;</span><br><span class="line">import &#123; getUUID &#125; from &#x27;@/utils&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;multiUpload&quot;,</span><br><span class="line">  props: &#123;</span><br><span class="line">    //图片属性数组</span><br><span class="line">    value: Array,</span><br><span class="line">    //最大上传图片数量</span><br><span class="line">    maxCount: &#123;</span><br><span class="line">      type: Number,</span><br><span class="line">      default: 30</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      dataObj: &#123;</span><br><span class="line">        policy: &quot;&quot;,</span><br><span class="line">        signature: &quot;&quot;,</span><br><span class="line">        key: &quot;&quot;,</span><br><span class="line">        ossaccessKeyId: &quot;&quot;,</span><br><span class="line">        dir: &quot;&quot;,</span><br><span class="line">        host: &quot;&quot;,</span><br><span class="line">        uuid: &quot;&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      dialogVisible: false,</span><br><span class="line">      dialogImageUrl: null</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  computed: &#123;</span><br><span class="line">    fileList() &#123;</span><br><span class="line">      let fileList = [];</span><br><span class="line">      for (let i = 0; i &lt; this.value.length; i++) &#123;</span><br><span class="line">        fileList.push(&#123; url: this.value[i] &#125;);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      return fileList;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;&#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    emitInput(fileList) &#123;</span><br><span class="line">      let value = [];</span><br><span class="line">      for (let i = 0; i &lt; fileList.length; i++) &#123;</span><br><span class="line">        value.push(fileList[i].url);</span><br><span class="line">      &#125;</span><br><span class="line">      this.$emit(&quot;input&quot;, value);</span><br><span class="line">    &#125;,</span><br><span class="line">    handleRemove(file, fileList) &#123;</span><br><span class="line">      this.emitInput(fileList);</span><br><span class="line">    &#125;,</span><br><span class="line">    handlePreview(file) &#123;</span><br><span class="line">      this.dialogVisible = true;</span><br><span class="line">      this.dialogImageUrl = file.url;</span><br><span class="line">    &#125;,</span><br><span class="line">    beforeUpload(file) &#123;</span><br><span class="line">      let _self = this;</span><br><span class="line">      return new Promise((resolve, reject) =&gt; &#123;</span><br><span class="line">        policy()</span><br><span class="line">          .then(response =&gt; &#123;</span><br><span class="line">            console.log(&quot;这是什么$&#123;filename&#125;&quot;);</span><br><span class="line">            _self.dataObj.policy = response.data.policy;</span><br><span class="line">            _self.dataObj.signature = response.data.signature;</span><br><span class="line">            _self.dataObj.ossaccessKeyId = response.data.accessid;</span><br><span class="line">            _self.dataObj.key = response.data.dir + &quot;/&quot;+getUUID()+&quot;_$&#123;filename&#125;&quot;;</span><br><span class="line">            _self.dataObj.dir = response.data.dir;</span><br><span class="line">            _self.dataObj.host = response.data.host;</span><br><span class="line">            resolve(true);</span><br><span class="line">          &#125;)</span><br><span class="line">          .catch(err =&gt; &#123;</span><br><span class="line">            console.log(&quot;出错了...&quot;,err)</span><br><span class="line">            reject(false);</span><br><span class="line">          &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    handleUploadSuccess(res, file) &#123;</span><br><span class="line">      this.fileList.push(&#123;</span><br><span class="line">        name: file.name,</span><br><span class="line">        // url: this.dataObj.host + &quot;/&quot; + this.dataObj.dir + &quot;/&quot; + file.name； 替换$&#123;filename&#125;为真正的文件名</span><br><span class="line">        url: this.dataObj.host + &quot;/&quot; + this.dataObj.key.replace(&quot;$&#123;filename&#125;&quot;,file.name)</span><br><span class="line">      &#125;);</span><br><span class="line">      this.emitInput(this.fileList);</span><br><span class="line">    &#125;,</span><br><span class="line">    handleExceed(files, fileList) &#123;</span><br><span class="line">      this.$message(&#123;</span><br><span class="line">        message: &quot;最多只能上传&quot; + this.maxCount + &quot;张图片&quot;,</span><br><span class="line">        type: &quot;warning&quot;,</span><br><span class="line">        duration: 1000</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>请求OSS签名封装脚本 policy.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> http <span class="keyword">from</span> <span class="string">&#x27;@/utils/httpRequest.js&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">policy</span>(<span class="params"></span>) &#123;</span><br><span class="line">   <span class="keyword">return</span>  <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="title function_">http</span>(&#123;</span><br><span class="line">            <span class="attr">url</span>: http.<span class="title function_">adornUrl</span>(<span class="string">&quot;/tts/oss/policy&quot;</span>),</span><br><span class="line">            <span class="attr">method</span>: <span class="string">&quot;get&quot;</span>,</span><br><span class="line">            <span class="attr">params</span>: http.<span class="title function_">adornParams</span>(&#123;&#125;)</span><br><span class="line">        &#125;).<span class="title function_">then</span>(<span class="function">(<span class="params">&#123; data &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="title function_">resolve</span>(data);</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>单文件上传组件 singleUpload.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt; </span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;el-upload</span><br><span class="line">      action=&quot;http://center-test.oss-cn-beijing.aliyuncs.com&quot;</span><br><span class="line">      :data=&quot;dataObj&quot;</span><br><span class="line">      list-type=&quot;picture&quot;</span><br><span class="line">      :multiple=&quot;false&quot; :show-file-list=&quot;showFileList&quot;</span><br><span class="line">      :file-list=&quot;fileList&quot;</span><br><span class="line">      :before-upload=&quot;beforeUpload&quot;</span><br><span class="line">      :on-remove=&quot;handleRemove&quot;</span><br><span class="line">      :on-success=&quot;handleUploadSuccess&quot;</span><br><span class="line">      :on-preview=&quot;handlePreview&quot;&gt;</span><br><span class="line">      &lt;el-button size=&quot;small&quot; type=&quot;primary&quot;&gt;点击上传&lt;/el-button&gt;</span><br><span class="line">      &lt;div slot=&quot;tip&quot; class=&quot;el-upload__tip&quot;&gt;只能上传jpg/png文件，且不超过10MB&lt;/div&gt;</span><br><span class="line">    &lt;/el-upload&gt;</span><br><span class="line">    &lt;el-dialog :visible.sync=&quot;dialogVisible&quot;&gt;</span><br><span class="line">      &lt;img width=&quot;100%&quot; :src=&quot;fileList[0].url&quot; alt=&quot;&quot;&gt;</span><br><span class="line">    &lt;/el-dialog&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">   import &#123;policy&#125; from &#x27;./policy&#x27;</span><br><span class="line">   import &#123; getUUID &#125; from &#x27;@/utils&#x27;</span><br><span class="line"></span><br><span class="line">  export default &#123;</span><br><span class="line">    name: &#x27;singleUpload&#x27;,</span><br><span class="line">    props: &#123;</span><br><span class="line">      value: String</span><br><span class="line">    &#125;,</span><br><span class="line">    computed: &#123;</span><br><span class="line">      imageUrl() &#123;</span><br><span class="line">        return this.value;</span><br><span class="line">      &#125;,</span><br><span class="line">      imageName() &#123;</span><br><span class="line">        if (this.value != null &amp;&amp; this.value !== &#x27;&#x27;) &#123;</span><br><span class="line">          return this.value.substr(this.value.lastIndexOf(&quot;/&quot;) + 1);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          return null;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      fileList() &#123;</span><br><span class="line">        return [&#123;</span><br><span class="line">          name: this.imageName,</span><br><span class="line">          url: this.imageUrl</span><br><span class="line">        &#125;]</span><br><span class="line">      &#125;,</span><br><span class="line">      showFileList: &#123;</span><br><span class="line">        get: function () &#123;</span><br><span class="line">          return this.value !== null &amp;&amp; this.value !== &#x27;&#x27;&amp;&amp; this.value!==undefined;</span><br><span class="line">        &#125;,</span><br><span class="line">        set: function (newValue) &#123;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        dataObj: &#123;</span><br><span class="line">          policy: &#x27;&#x27;,</span><br><span class="line">          signature: &#x27;&#x27;,</span><br><span class="line">          key: &#x27;&#x27;,</span><br><span class="line">          ossaccessKeyId: &#x27;&#x27;,</span><br><span class="line">          dir: &#x27;&#x27;,</span><br><span class="line">          host: &#x27;&#x27;,</span><br><span class="line">          // callback:&#x27;&#x27;,</span><br><span class="line">        &#125;,</span><br><span class="line">        dialogVisible: false</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      emitInput(val) &#123;</span><br><span class="line">        this.$emit(&#x27;input&#x27;, val)</span><br><span class="line">      &#125;,</span><br><span class="line">      handleRemove(file, fileList) &#123;</span><br><span class="line">        this.emitInput(&#x27;&#x27;);</span><br><span class="line">      &#125;,</span><br><span class="line">      handlePreview(file) &#123;</span><br><span class="line">        this.dialogVisible = true;</span><br><span class="line">      &#125;,</span><br><span class="line">      beforeUpload(file) &#123;</span><br><span class="line">        let _self = this;</span><br><span class="line">        return new Promise((resolve, reject) =&gt; &#123;</span><br><span class="line">          policy().then(response =&gt; &#123;</span><br><span class="line">            _self.dataObj.policy = response.data.policy;</span><br><span class="line">            _self.dataObj.signature = response.data.signature;</span><br><span class="line">            _self.dataObj.ossaccessKeyId = response.data.accessid;</span><br><span class="line">            _self.dataObj.key = response.data.dir + &#x27;/&#x27;+getUUID()+&#x27;_$&#123;filename&#125;&#x27;;</span><br><span class="line">            _self.dataObj.dir = response.data.dir;</span><br><span class="line">            _self.dataObj.host = response.data.host;</span><br><span class="line">            resolve(true)</span><br><span class="line">          &#125;).catch(err =&gt; &#123;</span><br><span class="line">            reject(false)</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      handleUploadSuccess(res, file) &#123;</span><br><span class="line">        console.log(&quot;上传成功...&quot;)</span><br><span class="line">        this.showFileList = true;</span><br><span class="line">        this.fileList.pop();</span><br><span class="line">        this.fileList.push(&#123;name: file.name, url: this.dataObj.host + &#x27;/&#x27; + this.dataObj.key.replace(&quot;$&#123;filename&#125;&quot;,file.name) &#125;);</span><br><span class="line">        this.emitInput(this.fileList[0].url);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>2.修改brand-add-or-update.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;el-dialog</span><br><span class="line">    :title=&quot;!dataForm.id ? &#x27;新增&#x27; : &#x27;修改&#x27;&quot;</span><br><span class="line">    :close-on-click-modal=&quot;false&quot;</span><br><span class="line">    :visible.sync=&quot;visible&quot;&gt;</span><br><span class="line">    &lt;el-form :model=&quot;dataForm&quot; :rules=&quot;dataRule&quot; ref=&quot;dataForm&quot; @keyup.enter.native=&quot;dataFormSubmit()&quot; label-width=&quot;140px&quot;&gt;</span><br><span class="line">    &lt;el-form-item label=&quot;品牌名&quot; prop=&quot;name&quot;&gt;</span><br><span class="line">      &lt;el-input v-model=&quot;dataForm.name&quot; placeholder=&quot;品牌名&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">    &lt;/el-form-item&gt;</span><br><span class="line">    &lt;el-form-item label=&quot;品牌logo地址&quot; prop=&quot;logo&quot;&gt;</span><br><span class="line">     &lt;single-upload v-model=&quot;dataForm.logo&quot;&gt;&lt;/single-upload&gt;</span><br><span class="line">    &lt;/el-form-item&gt;</span><br><span class="line">    &lt;el-form-item label=&quot;介绍&quot; prop=&quot;descript&quot;&gt;</span><br><span class="line">      &lt;el-input v-model=&quot;dataForm.descript&quot; placeholder=&quot;介绍&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">    &lt;/el-form-item&gt;</span><br><span class="line">    &lt;el-form-item label=&quot;显示状态&quot; prop=&quot;showStatus&quot;&gt;</span><br><span class="line">        &lt;el-switch</span><br><span class="line">          v-model=&quot;dataForm.showStatus&quot;</span><br><span class="line">          active-color=&quot;#13ce66&quot;</span><br><span class="line">          inactive-color=&quot;#ff4949&quot;</span><br><span class="line">          :active-value=&quot;1&quot;</span><br><span class="line">          :inactive-value=&quot;0&quot;</span><br><span class="line">        &gt;&lt;/el-switch&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">    &lt;el-form-item label=&quot;检索首字母&quot; prop=&quot;firstLetter&quot;&gt;</span><br><span class="line">      &lt;el-input v-model=&quot;dataForm.firstLetter&quot; placeholder=&quot;检索首字母&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">    &lt;/el-form-item&gt;</span><br><span class="line">    &lt;el-form-item label=&quot;排序&quot; prop=&quot;sort&quot;&gt;</span><br><span class="line">      &lt;el-input v-model=&quot;dataForm.sort&quot; placeholder=&quot;排序&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">    &lt;/el-form-item&gt;</span><br><span class="line">    &lt;/el-form&gt;</span><br><span class="line">    &lt;span slot=&quot;footer&quot; class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">      &lt;el-button @click=&quot;visible = false&quot;&gt;取消&lt;/el-button&gt;</span><br><span class="line">      &lt;el-button type=&quot;primary&quot; @click=&quot;dataFormSubmit()&quot;&gt;确定&lt;/el-button&gt;</span><br><span class="line">    &lt;/span&gt;</span><br><span class="line">  &lt;/el-dialog&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import SingleUpload from &quot;@/components/upload/singleUpload&quot;;</span><br><span class="line">  export default &#123;</span><br><span class="line">    components: &#123; SingleUpload &#125;,</span><br><span class="line">    data () &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        visible: false,</span><br><span class="line">        dataForm: &#123;</span><br><span class="line">          brandId: 0,</span><br><span class="line">          name: &#x27;&#x27;,</span><br><span class="line">          logo: &#x27;&#x27;,</span><br><span class="line">          descript: &#x27;&#x27;,</span><br><span class="line">          showStatus: &#x27;&#x27;,</span><br><span class="line">          firstLetter: &#x27;&#x27;,</span><br><span class="line">          sort: &#x27;&#x27;</span><br><span class="line">        &#125;,</span><br><span class="line">        dataRule: &#123;</span><br><span class="line">          name: [</span><br><span class="line">            &#123; required: true, message: &#x27;品牌名不能为空&#x27;, trigger: &#x27;blur&#x27; &#125;</span><br><span class="line">          ],</span><br><span class="line">          logo: [</span><br><span class="line">            &#123; required: true, message: &#x27;品牌logo地址不能为空&#x27;, trigger: &#x27;blur&#x27; &#125;</span><br><span class="line">          ],</span><br><span class="line">          descript: [</span><br><span class="line">            &#123; required: true, message: &#x27;介绍不能为空&#x27;, trigger: &#x27;blur&#x27; &#125;</span><br><span class="line">          ],</span><br><span class="line">          showStatus: [</span><br><span class="line">            &#123; required: true, message: &#x27;显示状态[0-不显示；1-显示]不能为空&#x27;, trigger: &#x27;blur&#x27; &#125;</span><br><span class="line">          ],</span><br><span class="line">          firstLetter: [</span><br><span class="line">            &#123; required: true, message: &#x27;检索首字母不能为空&#x27;, trigger: &#x27;blur&#x27; &#125;</span><br><span class="line">          ],</span><br><span class="line">          sort: [</span><br><span class="line">            &#123; required: true, message: &#x27;排序不能为空&#x27;, trigger: &#x27;blur&#x27; &#125;</span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      init (id) &#123;</span><br><span class="line">        this.dataForm.brandId = id || 0</span><br><span class="line">        this.visible = true</span><br><span class="line">        this.$nextTick(() =&gt; &#123;</span><br><span class="line">          this.$refs[&#x27;dataForm&#x27;].resetFields()</span><br><span class="line">          if (this.dataForm.brandId) &#123;</span><br><span class="line">            this.$http(&#123;</span><br><span class="line">              url: this.$http.adornUrl(`/product/brand/info/$&#123;this.dataForm.brandId&#125;`),</span><br><span class="line">              method: &#x27;get&#x27;,</span><br><span class="line">              params: this.$http.adornParams()</span><br><span class="line">            &#125;).then((&#123;data&#125;) =&gt; &#123;</span><br><span class="line">              if (data &amp;&amp; data.code === 0) &#123;</span><br><span class="line">                this.dataForm.name = data.brand.name</span><br><span class="line">                this.dataForm.logo = data.brand.logo</span><br><span class="line">                this.dataForm.descript = data.brand.descript</span><br><span class="line">                this.dataForm.showStatus = data.brand.showStatus</span><br><span class="line">                this.dataForm.firstLetter = data.brand.firstLetter</span><br><span class="line">                this.dataForm.sort = data.brand.sort</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      // 表单提交</span><br><span class="line">      dataFormSubmit () &#123;</span><br><span class="line">        this.$refs[&#x27;dataForm&#x27;].validate((valid) =&gt; &#123;</span><br><span class="line">          if (valid) &#123;</span><br><span class="line">            this.$http(&#123;</span><br><span class="line">              url: this.$http.adornUrl(`/product/brand/$&#123;!this.dataForm.brandId ? &#x27;save&#x27; : &#x27;update&#x27;&#125;`),</span><br><span class="line">              method: &#x27;post&#x27;,</span><br><span class="line">              data: this.$http.adornData(&#123;</span><br><span class="line">                &#x27;brandId&#x27;: this.dataForm.brandId || undefined,</span><br><span class="line">                &#x27;name&#x27;: this.dataForm.name,</span><br><span class="line">                &#x27;logo&#x27;: this.dataForm.logo,</span><br><span class="line">                &#x27;descript&#x27;: this.dataForm.descript,</span><br><span class="line">                &#x27;showStatus&#x27;: this.dataForm.showStatus,</span><br><span class="line">                &#x27;firstLetter&#x27;: this.dataForm.firstLetter,</span><br><span class="line">                &#x27;sort&#x27;: this.dataForm.sort</span><br><span class="line">              &#125;)</span><br><span class="line">            &#125;).then((&#123;data&#125;) =&gt; &#123;</span><br><span class="line">              if (data &amp;&amp; data.code === 0) &#123;</span><br><span class="line">                this.$message(&#123;</span><br><span class="line">                  message: &#x27;操作成功&#x27;,</span><br><span class="line">                  type: &#x27;success&#x27;,</span><br><span class="line">                  duration: 1500,</span><br><span class="line">                  onClose: () =&gt; &#123;</span><br><span class="line">                    this.visible = false</span><br><span class="line">                    this.$emit(&#x27;refreshDataList&#x27;)</span><br><span class="line">                  &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">              &#125; else &#123;</span><br><span class="line">                this.$message.error(data.msg)</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>3.上传操作之后，点击保存，保存上传的路径</p>
<h4 id="表单校验-amp-自定义校验器"><a href="#表单校验-amp-自定义校验器" class="headerlink" title="表单校验&amp;自定义校验器"></a>表单校验&amp;自定义校验器</h4><p>1.修改显示状态，返回后端的值，修改如下</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;显示状态&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;showStatus&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">el-switch</span></span></span><br><span class="line"><span class="tag">         <span class="attr">v-model</span>=<span class="string">&quot;dataForm.showStatus&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">active-color</span>=<span class="string">&quot;#13ce66&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">inactive-color</span>=<span class="string">&quot;#ff4949&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">:active-value</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">:inactive-value</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">       &gt;</span><span class="tag">&lt;/<span class="name">el-switch</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>2.把表格显示的URL地址，转变为显示图片</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-table-column</span></span></span><br><span class="line"><span class="tag">       <span class="attr">prop</span>=<span class="string">&quot;logo&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">header-align</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">align</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">label</span>=<span class="string">&quot;品牌logo地址&quot;</span></span></span><br><span class="line"><span class="tag">     &gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">template</span> <span class="attr">slot-scope</span>=<span class="string">&quot;scope&quot;</span>&gt;</span></span><br><span class="line">         <span class="comment">&lt;!-- &lt;el-image v-if=&quot;scope.row.logo != null &amp;&amp; scope.row.logo != &#x27;&#x27;&quot;</span></span><br><span class="line"><span class="comment">             style=&quot;width: 100px; height: 80px&quot;</span></span><br><span class="line"><span class="comment">             :src=&quot;scope.row.logo&quot;</span></span><br><span class="line"><span class="comment">         fit=&quot;fill&quot;&gt;&lt;/el-image&gt; --&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">img</span>  <span class="attr">v-if</span>=<span class="string">&quot;scope.row.logo != null &amp;&amp; scope.row.logo != &#x27;&#x27;&quot;</span> <span class="attr">:src</span>=<span class="string">&quot;scope.row.logo&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 100px; height: 80px&quot;</span> /&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>3.加入表单验证，修改brand-add-or-upadate.vue，内容如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;el-dialog</span><br><span class="line">    :title=&quot;!dataForm.id ? &#x27;新增&#x27; : &#x27;修改&#x27;&quot;</span><br><span class="line">    :close-on-click-modal=&quot;false&quot;</span><br><span class="line">    :visible.sync=&quot;visible&quot;</span><br><span class="line">  &gt;</span><br><span class="line">    &lt;el-form</span><br><span class="line">      :model=&quot;dataForm&quot;</span><br><span class="line">      :rules=&quot;dataRule&quot;</span><br><span class="line">      ref=&quot;dataForm&quot;</span><br><span class="line">      @keyup.enter.native=&quot;dataFormSubmit()&quot;</span><br><span class="line">      label-width=&quot;140px&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;el-form-item label=&quot;品牌名&quot; prop=&quot;name&quot;&gt;</span><br><span class="line">        &lt;el-input v-model=&quot;dataForm.name&quot; placeholder=&quot;品牌名&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;品牌logo地址&quot; prop=&quot;logo&quot;&gt;</span><br><span class="line">        &lt;single-upload v-model=&quot;dataForm.logo&quot;&gt;&lt;/single-upload&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;介绍&quot; prop=&quot;descript&quot;&gt;</span><br><span class="line">        &lt;el-input v-model=&quot;dataForm.descript&quot; placeholder=&quot;介绍&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;显示状态&quot; prop=&quot;showStatus&quot;&gt;</span><br><span class="line">        &lt;el-switch</span><br><span class="line">          v-model=&quot;dataForm.showStatus&quot;</span><br><span class="line">          active-color=&quot;#13ce66&quot;</span><br><span class="line">          inactive-color=&quot;#ff4949&quot;</span><br><span class="line">          :active-value=&quot;1&quot;</span><br><span class="line">          :inactive-value=&quot;0&quot;</span><br><span class="line">        &gt;&lt;/el-switch&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;检索首字母&quot; prop=&quot;firstLetter&quot;&gt;</span><br><span class="line">        &lt;el-input</span><br><span class="line">          v-model=&quot;dataForm.firstLetter&quot;</span><br><span class="line">          placeholder=&quot;检索首字母&quot;</span><br><span class="line">        &gt;&lt;/el-input&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;排序&quot; prop=&quot;sort&quot;&gt;</span><br><span class="line">        &lt;el-input v-model=&quot;dataForm.sort&quot; placeholder=&quot;排序&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">    &lt;/el-form&gt;</span><br><span class="line">    &lt;span slot=&quot;footer&quot; class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">      &lt;el-button @click=&quot;visible = false&quot;&gt;取消&lt;/el-button&gt;</span><br><span class="line">      &lt;el-button type=&quot;primary&quot; @click=&quot;dataFormSubmit()&quot;&gt;确定&lt;/el-button&gt;</span><br><span class="line">    &lt;/span&gt;</span><br><span class="line">  &lt;/el-dialog&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import SingleUpload from &quot;@/components/upload/singleUpload&quot;;</span><br><span class="line">export default &#123;</span><br><span class="line">  components: &#123; SingleUpload &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      visible: false,</span><br><span class="line">      dataForm: &#123;</span><br><span class="line">        brandId: 0,</span><br><span class="line">        name: &quot;&quot;,</span><br><span class="line">        logo: &quot;&quot;,</span><br><span class="line">        descript: &quot;&quot;,</span><br><span class="line">        showStatus: 1,</span><br><span class="line">        firstLetter: &quot;&quot;,</span><br><span class="line">        sort: 0</span><br><span class="line">      &#125;,</span><br><span class="line">      dataRule: &#123;</span><br><span class="line">        name: [&#123; required: true, message: &quot;品牌名不能为空&quot;, trigger: &quot;blur&quot; &#125;],</span><br><span class="line">        logo: [</span><br><span class="line">          &#123; required: true, message: &quot;品牌logo地址不能为空&quot;, trigger: &quot;blur&quot; &#125;</span><br><span class="line">        ],</span><br><span class="line">        descript: [</span><br><span class="line">          &#123; required: true, message: &quot;介绍不能为空&quot;, trigger: &quot;blur&quot; &#125;</span><br><span class="line">        ],</span><br><span class="line">        showStatus: [</span><br><span class="line">          &#123;</span><br><span class="line">            required: true,</span><br><span class="line">            message: &quot;显示状态[0-不显示；1-显示]不能为空&quot;,</span><br><span class="line">            trigger: &quot;blur&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        ],</span><br><span class="line">        firstLetter: [</span><br><span class="line">         &#123;</span><br><span class="line">            validator: (rule, value, callback) =&gt; &#123;</span><br><span class="line">              if (value == &quot;&quot;) &#123;</span><br><span class="line">                callback(new Error(&quot;首字母必须填写&quot;));</span><br><span class="line">              &#125; else if (!/^[a-zA-Z]$/.test(value)) &#123;</span><br><span class="line">                callback(new Error(&quot;首字母必须a-z或者A-Z之间&quot;));</span><br><span class="line">              &#125; else &#123;</span><br><span class="line">                callback();</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            trigger: &quot;blur&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        ],</span><br><span class="line">        sort: [&#123;</span><br><span class="line">            validator: (rule, value, callback) =&gt; &#123;</span><br><span class="line">              if (value == &quot;&quot;) &#123;</span><br><span class="line">                callback(new Error(&quot;排序字段必须填写&quot;));</span><br><span class="line">              &#125; else if (!Number.isInteger(value) || value&lt;0) &#123;</span><br><span class="line">                callback(new Error(&quot;排序必须是一个大于等于0的整数&quot;));</span><br><span class="line">              &#125; else &#123;</span><br><span class="line">                callback();</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            trigger: &quot;blur&quot;</span><br><span class="line">          &#125;]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    init(id) &#123;</span><br><span class="line">      this.dataForm.brandId = id || 0;</span><br><span class="line">      this.visible = true;</span><br><span class="line">      this.$nextTick(() =&gt; &#123;</span><br><span class="line">        this.$refs[&quot;dataForm&quot;].resetFields();</span><br><span class="line">        if (this.dataForm.brandId) &#123;</span><br><span class="line">          this.$http(&#123;</span><br><span class="line">            url: this.$http.adornUrl(</span><br><span class="line">              `/product/brand/info/$&#123;this.dataForm.brandId&#125;`</span><br><span class="line">            ),</span><br><span class="line">            method: &quot;get&quot;,</span><br><span class="line">            params: this.$http.adornParams()</span><br><span class="line">          &#125;).then((&#123; data &#125;) =&gt; &#123;</span><br><span class="line">            if (data &amp;&amp; data.code === 0) &#123;</span><br><span class="line">              this.dataForm.name = data.brand.name;</span><br><span class="line">              this.dataForm.logo = data.brand.logo;</span><br><span class="line">              this.dataForm.descript = data.brand.descript;</span><br><span class="line">              this.dataForm.showStatus = data.brand.showStatus;</span><br><span class="line">              this.dataForm.firstLetter = data.brand.firstLetter;</span><br><span class="line">              this.dataForm.sort = data.brand.sort;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    // 表单提交</span><br><span class="line">    dataFormSubmit() &#123;</span><br><span class="line">      this.$refs[&quot;dataForm&quot;].validate(valid =&gt; &#123;</span><br><span class="line">        if (valid) &#123;</span><br><span class="line">          this.$http(&#123;</span><br><span class="line">            url: this.$http.adornUrl(</span><br><span class="line">              `/product/brand/$&#123;!this.dataForm.brandId ? &quot;save&quot; : &quot;update&quot;&#125;`</span><br><span class="line">            ),</span><br><span class="line">            method: &quot;post&quot;,</span><br><span class="line">            data: this.$http.adornData(&#123;</span><br><span class="line">              brandId: this.dataForm.brandId || undefined,</span><br><span class="line">              name: this.dataForm.name,</span><br><span class="line">              logo: this.dataForm.logo,</span><br><span class="line">              descript: this.dataForm.descript,</span><br><span class="line">              showStatus: this.dataForm.showStatus,</span><br><span class="line">              firstLetter: this.dataForm.firstLetter,</span><br><span class="line">              sort: this.dataForm.sort</span><br><span class="line">            &#125;)</span><br><span class="line">          &#125;).then((&#123; data &#125;) =&gt; &#123;</span><br><span class="line">            if (data &amp;&amp; data.code === 0) &#123;</span><br><span class="line">              this.$message(&#123;</span><br><span class="line">                message: &quot;操作成功&quot;,</span><br><span class="line">                type: &quot;success&quot;,</span><br><span class="line">                duration: 1500,</span><br><span class="line">                onClose: () =&gt; &#123;</span><br><span class="line">                  this.visible = false;</span><br><span class="line">                  this.$emit(&quot;refreshDataList&quot;);</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">              this.$message.error(data.msg);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h4 id="JSR303表单验证"><a href="#JSR303表单验证" class="headerlink" title="JSR303表单验证"></a>JSR303表单验证</h4><p>1.给Bean实体类添加校验注解（在javax.validation.constraints 中），并定义自己的message提示，举个栗子，在BrandEntity.java 中修改。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@TableName(&quot;pms_brand&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BrandEntity</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 品牌id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@NotNull(message = &quot;修改必须指定品牌id&quot;)</span></span><br><span class="line">    <span class="meta">@Null(message = &quot;新增不能指定id&quot;)</span></span><br><span class="line">    <span class="meta">@TableId</span></span><br><span class="line">    <span class="keyword">private</span> Long brandId;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 品牌名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@NotBlank(message = &quot;品牌名必须提交&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 品牌logo地址</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@URL(message = &quot;logo必须是一个合法的url地址&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String logo;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 介绍</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String descript;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 显示状态[0-不显示；1-显示]</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer showStatus;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 检索首字母</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Pattern(regexp = &quot;^[a-zA-Z]$&quot;, message = &quot;检索首字母必须是一个字母&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String firstLetter;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 排序</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Min(value = 0, message = &quot;排序必须大于等于0&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer sort;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2.在对应的controller的保存接口上加上@Valid注解开启校验，但是返回的是默认的响应，不是我们想要的。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/save&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">save</span><span class="params">(<span class="meta">@Valid</span> <span class="meta">@RequestBody</span> BrandEntity brand)</span>&#123;</span><br><span class="line">		brandService.save(brand);</span><br><span class="line">        <span class="keyword">return</span> R.ok();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>3.自定义校验体，需要在入参中加入BindingResult类型的参数，就可以获取到校验的结果，自定义返回给前端。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/save&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">save</span><span class="params">(<span class="meta">@Valid</span> <span class="meta">@RequestBody</span> BrandEntity brand, BindingResult result)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (result.hasErrors()) &#123;</span><br><span class="line">            Map&lt;String, String&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">            <span class="comment">//1、获取校验的错误结果</span></span><br><span class="line">            result.getFieldErrors().forEach((item) -&gt; &#123;</span><br><span class="line">                <span class="comment">//FieldError 获取到错误提示</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">message</span> <span class="operator">=</span> item.getDefaultMessage();</span><br><span class="line">                <span class="comment">//获取错误的属性的名字</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">field</span> <span class="operator">=</span> item.getField();</span><br><span class="line">                map.put(field, message);</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="keyword">return</span> R.error(<span class="number">400</span>, <span class="string">&quot;提交的数据不合法&quot;</span>).put(<span class="string">&quot;data&quot;</span>, map);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            brandService.save(brand);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> R.ok();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>4.也可以使用BindingResultUtils 提供的方法，对入参进行校验。</p>
<h4 id="统一异常处理"><a href="#统一异常处理" class="headerlink" title="统一异常处理"></a>统一异常处理</h4><p>1.为了不增加代码的侵入性，我们可以自定义一个异常类，基于AOP做统一处理。</p>
<p>2.在对应的模块下，创建一个exception包，声明一个统一的异常类型，然后加上@RestControllerAdvice(basePackages &#x3D; “com.atguigu.gulimall.product.controller”)类注解，方法上加入@ExceptionHandler(value &#x3D; MethodArgumentNotValidException.class)对应处理的异常注解，然后在公共模块定义统一的异常代码枚举类。</p>
<p>统一异常类：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="comment">//@ResponseBody</span></span><br><span class="line"><span class="comment">//@ControllerAdvice(basePackages = &quot;com.atguigu.gulimall.product.controller&quot;)</span></span><br><span class="line"><span class="meta">@RestControllerAdvice(basePackages = &quot;com.atguigu.gulimall.product.controller&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SupermallExceptionControllerAdvice</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler(value = MethodArgumentNotValidException.class)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">handleVaildException</span><span class="params">(MethodArgumentNotValidException e)</span> &#123;</span><br><span class="line">        log.error(<span class="string">&quot;数据校验出现问题&#123;&#125;，异常类型：&#123;&#125;&quot;</span>, e.getMessage(), e.getClass());</span><br><span class="line">        <span class="type">BindingResult</span> <span class="variable">bindingResult</span> <span class="operator">=</span> e.getBindingResult();</span><br><span class="line"></span><br><span class="line">        Map&lt;String, String&gt; errorMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        bindingResult.getFieldErrors().forEach((fieldError) -&gt; &#123;</span><br><span class="line">            errorMap.put(fieldError.getField(), fieldError.getDefaultMessage());</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> R.error(BizCodeEnume.VAILD_EXCEPTION.getCode(), BizCodeEnume.VAILD_EXCEPTION.getMsg()).put(<span class="string">&quot;data&quot;</span>,</span><br><span class="line">                errorMap);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler(value = Throwable.class)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">handleException</span><span class="params">(Throwable throwable)</span> &#123;</span><br><span class="line"></span><br><span class="line">        log.error(<span class="string">&quot;错误：&quot;</span>, throwable);</span><br><span class="line">        <span class="keyword">return</span> R.error(BizCodeEnume.UNKNOW_EXCEPTION.getCode(), BizCodeEnume.UNKNOW_EXCEPTION.getMsg());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>异常代码枚举：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">BizCodeEnume</span> &#123;</span><br><span class="line">    UNKNOW_EXCEPTION(<span class="number">10000</span>,<span class="string">&quot;系统未知异常&quot;</span>),</span><br><span class="line">    VAILD_EXCEPTION(<span class="number">10001</span>,<span class="string">&quot;参数格式校验失败&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> code;</span><br><span class="line">    <span class="keyword">private</span> String msg;</span><br><span class="line">    BizCodeEnume(<span class="type">int</span> code,String msg)&#123;</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">        <span class="built_in">this</span>.msg = msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCode</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getMsg</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> msg;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>3.最后把controller侵入业务的代码删除调。</p>
<h4 id="JSR303分组校验"><a href="#JSR303分组校验" class="headerlink" title="JSR303分组校验"></a>JSR303分组校验</h4><p>1.定义校验分组接口，接口不需要实现类，仅仅是使用来标识分组。分别定义addGroup.java 和 upGroup.java分组，放到common模块下，放到valid的包下。</p>
<p>2.在bean实体类的字段上的校验注解中加入group属性，使用刚刚定义好的接口类型根据需求填充到group中。如，新增接口应该使用addGroup.class类标识，更新接口使用upGroup.class 标识。举了栗子：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 品牌id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@NotNull(message = &quot;修改必须指定品牌id&quot;,groups = &#123;UpdateGroup.class&#125;)</span></span><br><span class="line">    <span class="meta">@Null(message = &quot;新增不能指定id&quot;,groups = &#123;AddGroup.class&#125;)</span></span><br><span class="line">    <span class="meta">@TableId</span></span><br><span class="line">    <span class="keyword">private</span> Long brandId;</span><br></pre></td></tr></table></figure>

<p>3.在对应的controller类上，加上@Validated 注解，开启校验功能，如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 保存</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/save&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">save</span><span class="params">(<span class="meta">@Validated(&#123;AddGroup.class&#125;)</span> <span class="meta">@RequestBody</span> BrandEntity brand)</span> &#123;</span><br><span class="line">    brandService.save(brand);</span><br><span class="line">    <span class="keyword">return</span> R.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>注：默认没有指定分组的校验注解@NutBlank，在分组校验情况@Validated({AddGroup.class})下不生效。</strong></p>
<h4 id="JSR303自定义校验注解"><a href="#JSR303自定义校验注解" class="headerlink" title="JSR303自定义校验注解"></a>JSR303自定义校验注解</h4><p>1.在common模块引入javax.validation.validation-api  maven依赖：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.validation<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>validation-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.1.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>2.编写一个自定义的校验注解，在common模块中，valid包下新建一个注解类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Constraint(validatedBy = &#123; ListValueConstraintValidator.class &#125;)</span></span><br><span class="line"><span class="meta">@Target(&#123; METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE &#125;)</span></span><br><span class="line"><span class="meta">@Retention(RUNTIME)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> ListValue &#123;</span><br><span class="line">    String <span class="title function_">message</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&#123;com.centersept.supermall.common.valid.ListValue.message&#125;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    Class&lt;?&gt;[] groups() <span class="keyword">default</span> &#123; &#125;;</span><br><span class="line"></span><br><span class="line">    Class&lt;? <span class="keyword">extends</span> <span class="title class_">Payload</span>&gt;[] payload() <span class="keyword">default</span> &#123; &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span>[] vals() <span class="keyword">default</span> &#123; &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>3.新建一个ListValueConstraintValidator校验器，该校验器需要实现ConstraintValidator接口</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ListValueConstraintValidator</span> <span class="keyword">implements</span> <span class="title class_">ConstraintValidator</span>&lt;ListValue,Integer&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Set&lt;Integer&gt; set = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">    <span class="comment">//初始化方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">initialize</span><span class="params">(ListValue constraintAnnotation)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] vals = constraintAnnotation.vals();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> val : vals) &#123;</span><br><span class="line">            set.add(val);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//判断是否校验成功</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value 需要校验的值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isValid</span><span class="params">(Integer value, ConstraintValidatorContext context)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> set.contains(value);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>4.根据javax.validation 依赖规范，在resource 文件夹下新建ValidationMessages.properties文件，才能使String message() default “{com.centersept.supermall.common.valid.ListValue.message}”;生效。</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">com.centersept.supermall.common.valid.ListValue.message</span>=<span class="string">显示状态参数错误</span></span><br></pre></td></tr></table></figure>

<p>5.修改BrandEntity实体类的showStatus属性注解值</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@NotNull(groups = &#123;AddGroup.class, UpdateStatusGroup.class&#125;)</span></span><br><span class="line"><span class="meta">@ListValue(vals=&#123;0,1&#125;,groups = &#123;AddGroup.class, UpdateStatusGroup.class&#125;)</span></span><br><span class="line"><span class="keyword">private</span> Integer showStatus;</span><br></pre></td></tr></table></figure>

<p>6.为了只校验在修改状态的时候才判断该校验值，所以我们要重新声明一个请求方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 修改状态</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/update/status&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">updateStatus</span><span class="params">(<span class="meta">@Validated(UpdateStatusGroup.class)</span> <span class="meta">@RequestBody</span> BrandEntity brand)</span>&#123;</span><br><span class="line">        brandService.updateById(brand);</span><br><span class="line">        <span class="keyword">return</span> R.ok();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>7.最后再修改前端页面的请求地址。</p>
<h4 id="SPU-amp-SKU-amp-规格参数-amp-销售属性"><a href="#SPU-amp-SKU-amp-规格参数-amp-销售属性" class="headerlink" title="SPU&amp;SKU&amp;规格参数&amp;销售属性"></a>SPU&amp;SKU&amp;规格参数&amp;销售属性</h4><p>SPU &#x3D; Standard Product Unit （标准产品单位）<br>SPU是商品信息聚合的最小单位，是一组可复用、易检索的标准化信息的集合，该集合描述了一个产品的特性。<br>通俗点讲，属性值、特性相同的商品就可以称为一个SPU。</p>
<p>例如：<br>iphone4就是一个SPU，与商家，与颜色、款式、套餐都无关。</p>
<p>SKU&#x3D;stock keeping unit(库存量单位)<br>SKU即库存进出计量的单位， 可以是以件、盒、托盘等为单位。<br>SKU是物理上不可分割的最小存货单元。在使用时要根据不同业态，不同管理模式来处理。在服装、鞋类商品中使用最多最普遍。</p>
<p>例如：<br>纺织品中一个SKU通常表示：规格、颜色、款式。</p>
<h3 id="属性分组"><a href="#属性分组" class="headerlink" title="属性分组"></a>属性分组</h3><h4 id="前端组件抽取-amp-父子组件交互"><a href="#前端组件抽取-amp-父子组件交互" class="headerlink" title="前端组件抽取&amp;父子组件交互"></a>前端组件抽取&amp;父子组件交互</h4><p>1.执行提供的sys_menus.sql文件。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `sys_menu`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `sys_menu` (</span><br><span class="line">  `menu_id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `parent_id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;父菜单ID，一级菜单为0&#x27;</span>,</span><br><span class="line">  `name` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;菜单名称&#x27;</span>,</span><br><span class="line">  `url` <span class="type">varchar</span>(<span class="number">200</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;菜单URL&#x27;</span>,</span><br><span class="line">  `perms` <span class="type">varchar</span>(<span class="number">500</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;授权(多个用逗号分隔，如：user:list,user:create)&#x27;</span>,</span><br><span class="line">  `type` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;类型   0：目录   1：菜单   2：按钮&#x27;</span>,</span><br><span class="line">  `icon` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;菜单图标&#x27;</span>,</span><br><span class="line">  `order_num` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;排序&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`menu_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">76</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 COMMENT<span class="operator">=</span><span class="string">&#x27;菜单管理&#x27;</span>;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `sys_menu` ( `menu_id`, `parent_id`, `name`, `url`, `perms`, `type`, `icon`, `order_num` )</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">	( <span class="number">1</span>, <span class="number">0</span>, <span class="string">&#x27;系统管理&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="number">0</span>, <span class="string">&#x27;system&#x27;</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">2</span>, <span class="number">1</span>, <span class="string">&#x27;管理员列表&#x27;</span>, <span class="string">&#x27;sys/user&#x27;</span>, <span class="keyword">NULL</span>, <span class="number">1</span>, <span class="string">&#x27;admin&#x27;</span>, <span class="number">1</span> ),</span><br><span class="line">	( <span class="number">3</span>, <span class="number">1</span>, <span class="string">&#x27;角色管理&#x27;</span>, <span class="string">&#x27;sys/role&#x27;</span>, <span class="keyword">NULL</span>, <span class="number">1</span>, <span class="string">&#x27;role&#x27;</span>, <span class="number">2</span> ),</span><br><span class="line">	( <span class="number">4</span>, <span class="number">1</span>, <span class="string">&#x27;菜单管理&#x27;</span>, <span class="string">&#x27;sys/menu&#x27;</span>, <span class="keyword">NULL</span>, <span class="number">1</span>, <span class="string">&#x27;menu&#x27;</span>, <span class="number">3</span> ),</span><br><span class="line">	( <span class="number">5</span>, <span class="number">1</span>, <span class="string">&#x27;SQL监控&#x27;</span>, <span class="string">&#x27;http://localhost:8080/renren-fast/druid/sql.html&#x27;</span>, <span class="keyword">NULL</span>, <span class="number">1</span>, <span class="string">&#x27;sql&#x27;</span>, <span class="number">4</span> ),</span><br><span class="line">	( <span class="number">6</span>, <span class="number">1</span>, <span class="string">&#x27;定时任务&#x27;</span>, <span class="string">&#x27;job/schedule&#x27;</span>, <span class="keyword">NULL</span>, <span class="number">1</span>, <span class="string">&#x27;job&#x27;</span>, <span class="number">5</span> ),</span><br><span class="line">	( <span class="number">7</span>, <span class="number">6</span>, <span class="string">&#x27;查看&#x27;</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;sys:schedule:list,sys:schedule:info&#x27;</span>, <span class="number">2</span>, <span class="keyword">NULL</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">8</span>, <span class="number">6</span>, <span class="string">&#x27;新增&#x27;</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;sys:schedule:save&#x27;</span>, <span class="number">2</span>, <span class="keyword">NULL</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">9</span>, <span class="number">6</span>, <span class="string">&#x27;修改&#x27;</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;sys:schedule:update&#x27;</span>, <span class="number">2</span>, <span class="keyword">NULL</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">10</span>, <span class="number">6</span>, <span class="string">&#x27;删除&#x27;</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;sys:schedule:delete&#x27;</span>, <span class="number">2</span>, <span class="keyword">NULL</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">11</span>, <span class="number">6</span>, <span class="string">&#x27;暂停&#x27;</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;sys:schedule:pause&#x27;</span>, <span class="number">2</span>, <span class="keyword">NULL</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">12</span>, <span class="number">6</span>, <span class="string">&#x27;恢复&#x27;</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;sys:schedule:resume&#x27;</span>, <span class="number">2</span>, <span class="keyword">NULL</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">13</span>, <span class="number">6</span>, <span class="string">&#x27;立即执行&#x27;</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;sys:schedule:run&#x27;</span>, <span class="number">2</span>, <span class="keyword">NULL</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">14</span>, <span class="number">6</span>, <span class="string">&#x27;日志列表&#x27;</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;sys:schedule:log&#x27;</span>, <span class="number">2</span>, <span class="keyword">NULL</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">15</span>, <span class="number">2</span>, <span class="string">&#x27;查看&#x27;</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;sys:user:list,sys:user:info&#x27;</span>, <span class="number">2</span>, <span class="keyword">NULL</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">16</span>, <span class="number">2</span>, <span class="string">&#x27;新增&#x27;</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;sys:user:save,sys:role:select&#x27;</span>, <span class="number">2</span>, <span class="keyword">NULL</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">17</span>, <span class="number">2</span>, <span class="string">&#x27;修改&#x27;</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;sys:user:update,sys:role:select&#x27;</span>, <span class="number">2</span>, <span class="keyword">NULL</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">18</span>, <span class="number">2</span>, <span class="string">&#x27;删除&#x27;</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;sys:user:delete&#x27;</span>, <span class="number">2</span>, <span class="keyword">NULL</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">19</span>, <span class="number">3</span>, <span class="string">&#x27;查看&#x27;</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;sys:role:list,sys:role:info&#x27;</span>, <span class="number">2</span>, <span class="keyword">NULL</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">20</span>, <span class="number">3</span>, <span class="string">&#x27;新增&#x27;</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;sys:role:save,sys:menu:list&#x27;</span>, <span class="number">2</span>, <span class="keyword">NULL</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">21</span>, <span class="number">3</span>, <span class="string">&#x27;修改&#x27;</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;sys:role:update,sys:menu:list&#x27;</span>, <span class="number">2</span>, <span class="keyword">NULL</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">22</span>, <span class="number">3</span>, <span class="string">&#x27;删除&#x27;</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;sys:role:delete&#x27;</span>, <span class="number">2</span>, <span class="keyword">NULL</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">23</span>, <span class="number">4</span>, <span class="string">&#x27;查看&#x27;</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;sys:menu:list,sys:menu:info&#x27;</span>, <span class="number">2</span>, <span class="keyword">NULL</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">24</span>, <span class="number">4</span>, <span class="string">&#x27;新增&#x27;</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;sys:menu:save,sys:menu:select&#x27;</span>, <span class="number">2</span>, <span class="keyword">NULL</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">25</span>, <span class="number">4</span>, <span class="string">&#x27;修改&#x27;</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;sys:menu:update,sys:menu:select&#x27;</span>, <span class="number">2</span>, <span class="keyword">NULL</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">26</span>, <span class="number">4</span>, <span class="string">&#x27;删除&#x27;</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;sys:menu:delete&#x27;</span>, <span class="number">2</span>, <span class="keyword">NULL</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">27</span>, <span class="number">1</span>, <span class="string">&#x27;参数管理&#x27;</span>, <span class="string">&#x27;sys/config&#x27;</span>, <span class="string">&#x27;sys:config:list,sys:config:info,sys:config:save,sys:config:update,sys:config:delete&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;config&#x27;</span>, <span class="number">6</span> ),</span><br><span class="line">	( <span class="number">29</span>, <span class="number">1</span>, <span class="string">&#x27;系统日志&#x27;</span>, <span class="string">&#x27;sys/log&#x27;</span>, <span class="string">&#x27;sys:log:list&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;log&#x27;</span>, <span class="number">7</span> ),</span><br><span class="line">	( <span class="number">30</span>, <span class="number">1</span>, <span class="string">&#x27;文件上传&#x27;</span>, <span class="string">&#x27;oss/oss&#x27;</span>, <span class="string">&#x27;sys:oss:all&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;oss&#x27;</span>, <span class="number">6</span> ),</span><br><span class="line">	( <span class="number">31</span>, <span class="number">0</span>, <span class="string">&#x27;商品系统&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">0</span>, <span class="string">&#x27;editor&#x27;</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">32</span>, <span class="number">31</span>, <span class="string">&#x27;分类维护&#x27;</span>, <span class="string">&#x27;product/category&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;menu&#x27;</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">34</span>, <span class="number">31</span>, <span class="string">&#x27;品牌管理&#x27;</span>, <span class="string">&#x27;product/brand&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;editor&#x27;</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">37</span>, <span class="number">31</span>, <span class="string">&#x27;平台属性&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">0</span>, <span class="string">&#x27;system&#x27;</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">38</span>, <span class="number">37</span>, <span class="string">&#x27;属性分组&#x27;</span>, <span class="string">&#x27;product/attrgroup&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;tubiao&#x27;</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">39</span>, <span class="number">37</span>, <span class="string">&#x27;规格参数&#x27;</span>, <span class="string">&#x27;product/baseattr&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;log&#x27;</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">40</span>, <span class="number">37</span>, <span class="string">&#x27;销售属性&#x27;</span>, <span class="string">&#x27;product/saleattr&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;zonghe&#x27;</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">41</span>, <span class="number">31</span>, <span class="string">&#x27;商品维护&#x27;</span>, <span class="string">&#x27;product/spu&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">0</span>, <span class="string">&#x27;zonghe&#x27;</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">42</span>, <span class="number">0</span>, <span class="string">&#x27;优惠营销&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">0</span>, <span class="string">&#x27;mudedi&#x27;</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">43</span>, <span class="number">0</span>, <span class="string">&#x27;库存系统&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">0</span>, <span class="string">&#x27;shouye&#x27;</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">44</span>, <span class="number">0</span>, <span class="string">&#x27;订单系统&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">0</span>, <span class="string">&#x27;config&#x27;</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">45</span>, <span class="number">0</span>, <span class="string">&#x27;用户系统&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">0</span>, <span class="string">&#x27;admin&#x27;</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">46</span>, <span class="number">0</span>, <span class="string">&#x27;内容管理&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">0</span>, <span class="string">&#x27;sousuo&#x27;</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">47</span>, <span class="number">42</span>, <span class="string">&#x27;优惠券管理&#x27;</span>, <span class="string">&#x27;coupon/coupon&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;zhedie&#x27;</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">48</span>, <span class="number">42</span>, <span class="string">&#x27;发放记录&#x27;</span>, <span class="string">&#x27;coupon/history&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;sql&#x27;</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">49</span>, <span class="number">42</span>, <span class="string">&#x27;专题活动&#x27;</span>, <span class="string">&#x27;coupon/subject&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;tixing&#x27;</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">50</span>, <span class="number">42</span>, <span class="string">&#x27;秒杀活动&#x27;</span>, <span class="string">&#x27;coupon/seckill&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;daohang&#x27;</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">51</span>, <span class="number">42</span>, <span class="string">&#x27;积分维护&#x27;</span>, <span class="string">&#x27;coupon/bounds&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;geren&#x27;</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">52</span>, <span class="number">42</span>, <span class="string">&#x27;满减折扣&#x27;</span>, <span class="string">&#x27;coupon/full&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;shoucang&#x27;</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">53</span>, <span class="number">43</span>, <span class="string">&#x27;仓库维护&#x27;</span>, <span class="string">&#x27;ware/wareinfo&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;shouye&#x27;</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">54</span>, <span class="number">43</span>, <span class="string">&#x27;库存工作单&#x27;</span>, <span class="string">&#x27;ware/task&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;log&#x27;</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">55</span>, <span class="number">43</span>, <span class="string">&#x27;商品库存&#x27;</span>, <span class="string">&#x27;ware/sku&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;jiesuo&#x27;</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">56</span>, <span class="number">44</span>, <span class="string">&#x27;订单查询&#x27;</span>, <span class="string">&#x27;order/order&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;zhedie&#x27;</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">57</span>, <span class="number">44</span>, <span class="string">&#x27;退货单处理&#x27;</span>, <span class="string">&#x27;order/return&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;shanchu&#x27;</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">58</span>, <span class="number">44</span>, <span class="string">&#x27;等级规则&#x27;</span>, <span class="string">&#x27;order/settings&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;system&#x27;</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">59</span>, <span class="number">44</span>, <span class="string">&#x27;支付流水查询&#x27;</span>, <span class="string">&#x27;order/payment&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;job&#x27;</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">60</span>, <span class="number">44</span>, <span class="string">&#x27;退款流水查询&#x27;</span>, <span class="string">&#x27;order/refund&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;mudedi&#x27;</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">61</span>, <span class="number">45</span>, <span class="string">&#x27;会员列表&#x27;</span>, <span class="string">&#x27;member/member&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;geren&#x27;</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">62</span>, <span class="number">45</span>, <span class="string">&#x27;会员等级&#x27;</span>, <span class="string">&#x27;member/level&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;tubiao&#x27;</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">63</span>, <span class="number">45</span>, <span class="string">&#x27;积分变化&#x27;</span>, <span class="string">&#x27;member/growth&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;bianji&#x27;</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">64</span>, <span class="number">45</span>, <span class="string">&#x27;统计信息&#x27;</span>, <span class="string">&#x27;member/statistics&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;sql&#x27;</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">65</span>, <span class="number">46</span>, <span class="string">&#x27;首页推荐&#x27;</span>, <span class="string">&#x27;content/index&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;shouye&#x27;</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">66</span>, <span class="number">46</span>, <span class="string">&#x27;分类热门&#x27;</span>, <span class="string">&#x27;content/category&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;zhedie&#x27;</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">67</span>, <span class="number">46</span>, <span class="string">&#x27;评论管理&#x27;</span>, <span class="string">&#x27;content/comments&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;pinglun&#x27;</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">68</span>, <span class="number">41</span>, <span class="string">&#x27;spu管理&#x27;</span>, <span class="string">&#x27;product/spu&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;config&#x27;</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">69</span>, <span class="number">41</span>, <span class="string">&#x27;发布商品&#x27;</span>, <span class="string">&#x27;product/spuadd&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;bianji&#x27;</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">70</span>, <span class="number">43</span>, <span class="string">&#x27;采购单维护&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">0</span>, <span class="string">&#x27;tubiao&#x27;</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">71</span>, <span class="number">70</span>, <span class="string">&#x27;采购需求&#x27;</span>, <span class="string">&#x27;ware/purchaseitem&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;editor&#x27;</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">72</span>, <span class="number">70</span>, <span class="string">&#x27;采购单&#x27;</span>, <span class="string">&#x27;ware/purchase&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;menu&#x27;</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">73</span>, <span class="number">41</span>, <span class="string">&#x27;商品管理&#x27;</span>, <span class="string">&#x27;product/manager&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;zonghe&#x27;</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">74</span>, <span class="number">42</span>, <span class="string">&#x27;会员价格&#x27;</span>, <span class="string">&#x27;coupon/memberprice&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;admin&#x27;</span>, <span class="number">0</span> ),</span><br><span class="line">	( <span class="number">75</span>, <span class="number">42</span>, <span class="string">&#x27;每日秒杀&#x27;</span>, <span class="string">&#x27;coupon/seckillsession&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;job&#x27;</span>, <span class="number">0</span> );</span><br></pre></td></tr></table></figure>

<p>2.添加树型菜单公共组件，再modules下创建common文件夹，然后创建一个category.vue文件，内容如下：</p>
<p><strong>注：使用this.&amp;emit(‘{事件名称}’,[参数。。。])</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;el-input placeholder=&quot;输入关键字进行过滤&quot; v-model=&quot;filterText&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">    &lt;el-tree</span><br><span class="line">      :data=&quot;menus&quot;</span><br><span class="line">      :props=&quot;defaultProps&quot;</span><br><span class="line">      node-key=&quot;catId&quot;</span><br><span class="line">      ref=&quot;menuTree&quot;</span><br><span class="line">      @node-click=&quot;nodeclick&quot;</span><br><span class="line">      :filter-node-method=&quot;filterNode&quot;</span><br><span class="line">      :highlight-current = &quot;true&quot;</span><br><span class="line">    &gt;&lt;/el-tree&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）</span><br><span class="line">//例如：import 《组件名称》 from &#x27;《组件路径》&#x27;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  //import引入的组件需要注入到对象中才能使用</span><br><span class="line">  components: &#123;&#125;,</span><br><span class="line">  props: &#123;&#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    //这里存放数据</span><br><span class="line">    return &#123;</span><br><span class="line">      filterText: &quot;&quot;,</span><br><span class="line">      menus: [],</span><br><span class="line">      expandedKey: [],</span><br><span class="line">      defaultProps: &#123;</span><br><span class="line">        children: &quot;children&quot;,</span><br><span class="line">        label: &quot;name&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  //计算属性 类似于data概念</span><br><span class="line">  computed: &#123;&#125;,</span><br><span class="line">  //监控data中的数据变化</span><br><span class="line">  watch: &#123;</span><br><span class="line">    filterText(val) &#123;</span><br><span class="line">      this.$refs.menuTree.filter(val);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  //方法集合</span><br><span class="line">  methods: &#123;</span><br><span class="line">    //树节点过滤</span><br><span class="line">    filterNode(value, data) &#123;</span><br><span class="line">      if (!value) return true;</span><br><span class="line">      return data.name.indexOf(value) !== -1;</span><br><span class="line">    &#125;,</span><br><span class="line">    getMenus() &#123;</span><br><span class="line">      this.$http(&#123;</span><br><span class="line">        url: this.$http.adornUrl(&quot;/product/category/list/tree&quot;),</span><br><span class="line">        method: &quot;get&quot;</span><br><span class="line">      &#125;).then((&#123; data &#125;) =&gt; &#123;</span><br><span class="line">        this.menus = data.data;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    nodeclick(data, node, component) &#123;</span><br><span class="line">      console.log(&quot;子组件category的节点被点击&quot;, data, node, component);</span><br><span class="line">      //向父组件发送事件；</span><br><span class="line">      this.$emit(&quot;tree-node-click&quot;, data, node, component);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  //生命周期 - 创建完成（可以访问当前this实例）</span><br><span class="line">  created() &#123;</span><br><span class="line">    this.getMenus();</span><br><span class="line">  &#125;,</span><br><span class="line">  //生命周期 - 挂载完成（可以访问DOM元素）</span><br><span class="line">  mounted() &#123;&#125;,</span><br><span class="line">  beforeCreate() &#123;&#125;, //生命周期 - 创建之前</span><br><span class="line">  beforeMount() &#123;&#125;, //生命周期 - 挂载之前</span><br><span class="line">  beforeUpdate() &#123;&#125;, //生命周期 - 更新之前</span><br><span class="line">  updated() &#123;&#125;, //生命周期 - 更新之后</span><br><span class="line">  beforeDestroy() &#123;&#125;, //生命周期 - 销毁之前</span><br><span class="line">  destroyed() &#123;&#125;, //生命周期 - 销毁完成</span><br><span class="line">  activated() &#123;&#125; //如果页面有keep-alive缓存功能，这个函数会触发</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>3.如何在父页面引用子组件，然后响应子组件的冒泡事件。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;category @tree-node-click=&quot;treenodeclick&quot;&gt;&lt;/category&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Category from &quot;../common/category&quot;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">components: &#123; Category &#125;,</span><br><span class="line"> methods: &#123;</span><br><span class="line"> //感知树节点被点击</span><br><span class="line">    treenodeclick(data, node, component) &#123;</span><br><span class="line">      if (node.level == 3) &#123;</span><br><span class="line">        this.catId = data.catId;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h4 id="获取分类属性分组"><a href="#获取分类属性分组" class="headerlink" title="获取分类属性分组"></a>获取分类属性分组</h4><p>1.增加接口</p>
<p>AttrGroupController</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 列表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/list/&#123;catelogId&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">list</span><span class="params">(<span class="meta">@RequestParam</span> Map&lt;String, Object&gt; params,</span></span><br><span class="line"><span class="params">                  <span class="meta">@PathVariable(&quot;catelogId&quot;)</span> Long catelogId)</span>&#123;</span><br><span class="line">        <span class="type">PageUtils</span> <span class="variable">page</span> <span class="operator">=</span> attrGroupService.queryPage(params,catelogId);</span><br><span class="line">        <span class="keyword">return</span> R.ok().put(<span class="string">&quot;page&quot;</span>, page);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>AttrGroupServiceImpl</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> PageUtils <span class="title function_">queryPage</span><span class="params">(Map&lt;String, Object&gt; params, Long catelogId)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> (String) params.get(<span class="string">&quot;key&quot;</span>);</span><br><span class="line">        <span class="comment">//select * from pms_attr_group where catelog_id=? and (attr_group_id=key or attr_group_name like %key%)</span></span><br><span class="line">        QueryWrapper&lt;AttrGroupEntity&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;AttrGroupEntity&gt;();</span><br><span class="line">        <span class="keyword">if</span>(!StringUtils.isEmpty(key))&#123;</span><br><span class="line">            wrapper.and((obj)-&gt;&#123;</span><br><span class="line">                obj.eq(<span class="string">&quot;attr_group_id&quot;</span>,key).or().like(<span class="string">&quot;attr_group_name&quot;</span>,key);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>( catelogId == <span class="number">0</span>)&#123;</span><br><span class="line">            IPage&lt;AttrGroupEntity&gt; page = <span class="built_in">this</span>.page(<span class="keyword">new</span> <span class="title class_">Query</span>&lt;AttrGroupEntity&gt;().getPage(params),</span><br><span class="line">                    wrapper);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">PageUtils</span>(page);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            wrapper.eq(<span class="string">&quot;catelog_id&quot;</span>,catelogId);</span><br><span class="line">            IPage&lt;AttrGroupEntity&gt; page = <span class="built_in">this</span>.page(<span class="keyword">new</span> <span class="title class_">Query</span>&lt;AttrGroupEntity&gt;().getPage(params),</span><br><span class="line">                    wrapper);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">PageUtils</span>(page);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>3.修改前端文件</p>
<p>attrgroup.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;el-row :gutter=&quot;20&quot;&gt;</span><br><span class="line">    &lt;el-col :span=&quot;6&quot;&gt;</span><br><span class="line">      &lt;category @tree-node-click=&quot;treenodeclick&quot;&gt;&lt;/category&gt;</span><br><span class="line">    &lt;/el-col&gt;</span><br><span class="line">    &lt;el-col :span=&quot;18&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;mod-config&quot;&gt;</span><br><span class="line">        &lt;el-form :inline=&quot;true&quot; :model=&quot;dataForm&quot; @keyup.enter.native=&quot;getDataList()&quot;&gt;</span><br><span class="line">          &lt;el-form-item&gt;</span><br><span class="line">            &lt;el-input v-model=&quot;dataForm.key&quot; placeholder=&quot;参数名&quot; clearable&gt;&lt;/el-input&gt;</span><br><span class="line">          &lt;/el-form-item&gt;</span><br><span class="line">          &lt;el-form-item&gt;</span><br><span class="line">            &lt;el-button @click=&quot;getDataList()&quot;&gt;查询&lt;/el-button&gt;</span><br><span class="line">            &lt;el-button type=&quot;success&quot; @click=&quot;getAllDataList()&quot;&gt;查询全部&lt;/el-button&gt;</span><br><span class="line">            &lt;el-button</span><br><span class="line">              v-if=&quot;isAuth(&#x27;product:attrgroup:save&#x27;)&quot;</span><br><span class="line">              type=&quot;primary&quot;</span><br><span class="line">              @click=&quot;addOrUpdateHandle()&quot;</span><br><span class="line">            &gt;新增&lt;/el-button&gt;</span><br><span class="line">            &lt;el-button</span><br><span class="line">              v-if=&quot;isAuth(&#x27;product:attrgroup:delete&#x27;)&quot;</span><br><span class="line">              type=&quot;danger&quot;</span><br><span class="line">              @click=&quot;deleteHandle()&quot;</span><br><span class="line">              :disabled=&quot;dataListSelections.length &lt;= 0&quot;</span><br><span class="line">            &gt;批量删除&lt;/el-button&gt;</span><br><span class="line">          &lt;/el-form-item&gt;</span><br><span class="line">        &lt;/el-form&gt;</span><br><span class="line">        &lt;el-table</span><br><span class="line">          :data=&quot;dataList&quot;</span><br><span class="line">          border</span><br><span class="line">          v-loading=&quot;dataListLoading&quot;</span><br><span class="line">          @selection-change=&quot;selectionChangeHandle&quot;</span><br><span class="line">          style=&quot;width: 100%;&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;el-table-column type=&quot;selection&quot; header-align=&quot;center&quot; align=&quot;center&quot; width=&quot;50&quot;&gt;&lt;/el-table-column&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;attrGroupId&quot; header-align=&quot;center&quot; align=&quot;center&quot; label=&quot;分组id&quot;&gt;&lt;/el-table-column&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;attrGroupName&quot; header-align=&quot;center&quot; align=&quot;center&quot; label=&quot;组名&quot;&gt;&lt;/el-table-column&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;sort&quot; header-align=&quot;center&quot; align=&quot;center&quot; label=&quot;排序&quot;&gt;&lt;/el-table-column&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;descript&quot; header-align=&quot;center&quot; align=&quot;center&quot; label=&quot;描述&quot;&gt;&lt;/el-table-column&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;icon&quot; header-align=&quot;center&quot; align=&quot;center&quot; label=&quot;组图标&quot;&gt;&lt;/el-table-column&gt;</span><br><span class="line">          &lt;el-table-column prop=&quot;catelogId&quot; header-align=&quot;center&quot; align=&quot;center&quot; label=&quot;所属分类id&quot;&gt;&lt;/el-table-column&gt;</span><br><span class="line">          &lt;el-table-column</span><br><span class="line">            fixed=&quot;right&quot;</span><br><span class="line">            header-align=&quot;center&quot;</span><br><span class="line">            align=&quot;center&quot;</span><br><span class="line">            width=&quot;150&quot;</span><br><span class="line">            label=&quot;操作&quot;</span><br><span class="line">          &gt;</span><br><span class="line">            &lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">              &lt;el-button type=&quot;text&quot; size=&quot;small&quot; @click=&quot;relationHandle(scope.row.attrGroupId)&quot;&gt;关联&lt;/el-button&gt;</span><br><span class="line">              &lt;el-button</span><br><span class="line">                type=&quot;text&quot;</span><br><span class="line">                size=&quot;small&quot;</span><br><span class="line">                @click=&quot;addOrUpdateHandle(scope.row.attrGroupId)&quot;</span><br><span class="line">              &gt;修改&lt;/el-button&gt;</span><br><span class="line">              &lt;el-button type=&quot;text&quot; size=&quot;small&quot; @click=&quot;deleteHandle(scope.row.attrGroupId)&quot;&gt;删除&lt;/el-button&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/el-table&gt;</span><br><span class="line">        &lt;el-pagination</span><br><span class="line">          @size-change=&quot;sizeChangeHandle&quot;</span><br><span class="line">          @current-change=&quot;currentChangeHandle&quot;</span><br><span class="line">          :current-page=&quot;pageIndex&quot;</span><br><span class="line">          :page-sizes=&quot;[10, 20, 50, 100]&quot;</span><br><span class="line">          :page-size=&quot;pageSize&quot;</span><br><span class="line">          :total=&quot;totalPage&quot;</span><br><span class="line">          layout=&quot;total, sizes, prev, pager, next, jumper&quot;</span><br><span class="line">        &gt;&lt;/el-pagination&gt;</span><br><span class="line">        &lt;!-- 弹窗, 新增 / 修改 --&gt;</span><br><span class="line">        &lt;add-or-update v-if=&quot;addOrUpdateVisible&quot; ref=&quot;addOrUpdate&quot; @refreshDataList=&quot;getDataList&quot;&gt;&lt;/add-or-update&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 修改关联关系 --&gt;</span><br><span class="line">        &lt;!-- &lt;relation-update v-if=&quot;relationVisible&quot; ref=&quot;relationUpdate&quot; @refreshData=&quot;getDataList&quot;&gt;&lt;/relation-update&gt; --&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/el-col&gt;</span><br><span class="line">  &lt;/el-row&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">/**</span><br><span class="line"> * 父子组件传递数据</span><br><span class="line"> * 1)、子组件给父组件传递数据，事件机制；</span><br><span class="line"> *    子组件给父组件发送一个事件，携带上数据。</span><br><span class="line"> * // this.$emit(&quot;事件名&quot;,携带的数据...)</span><br><span class="line"> */</span><br><span class="line">//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）</span><br><span class="line">//例如：import 《组件名称》 from &#x27;《组件路径》&#x27;;</span><br><span class="line">import Category from &quot;../common/category&quot;;</span><br><span class="line">import AddOrUpdate from &quot;./attrgroup-add-or-update&quot;;</span><br><span class="line">export default &#123;</span><br><span class="line">  //import引入的组件需要注入到对象中才能使用</span><br><span class="line">  components: &#123; Category</span><br><span class="line">  , AddOrUpdate</span><br><span class="line">  // , RelationUpdate</span><br><span class="line">  &#125;,</span><br><span class="line">  props: &#123;&#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      catId: 0,</span><br><span class="line">      dataForm: &#123;</span><br><span class="line">        key: &quot;&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      dataList: [],</span><br><span class="line">      pageIndex: 1,</span><br><span class="line">      pageSize: 10,</span><br><span class="line">      totalPage: 0,</span><br><span class="line">      dataListLoading: false,</span><br><span class="line">      dataListSelections: [],</span><br><span class="line">      addOrUpdateVisible: false,</span><br><span class="line">      relationVisible: false</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  activated() &#123;</span><br><span class="line">    this.getDataList();</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    //处理分组与属性的关联</span><br><span class="line">    // relationHandle(groupId) &#123;</span><br><span class="line">    //   this.relationVisible = true;</span><br><span class="line">    //   this.$nextTick(() =&gt; &#123;</span><br><span class="line">    //     this.$refs.relationUpdate.init(groupId);</span><br><span class="line">    //   &#125;);</span><br><span class="line">    // &#125;,</span><br><span class="line">    //感知树节点被点击</span><br><span class="line">    treenodeclick(data, node, component) &#123;</span><br><span class="line">      if (node.level == 3) &#123;</span><br><span class="line">        this.catId = data.catId;</span><br><span class="line">        this.getDataList(); //重新查询</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    getAllDataList()&#123;</span><br><span class="line">      this.catId = 0;</span><br><span class="line">      this.getDataList();</span><br><span class="line">    &#125;,</span><br><span class="line">    // 获取数据列表</span><br><span class="line">    getDataList() &#123;</span><br><span class="line">      this.dataListLoading = true;</span><br><span class="line">      this.$http(&#123;</span><br><span class="line">        url: this.$http.adornUrl(`/product/attrgroup/list/$&#123;this.catId&#125;`),</span><br><span class="line">        method: &quot;get&quot;,</span><br><span class="line">        params: this.$http.adornParams(&#123;</span><br><span class="line">          page: this.pageIndex,</span><br><span class="line">          limit: this.pageSize,</span><br><span class="line">          key: this.dataForm.key</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;).then((&#123; data &#125;) =&gt; &#123;</span><br><span class="line">        if (data &amp;&amp; data.code === 0) &#123;</span><br><span class="line">          this.dataList = data.page.list;</span><br><span class="line">          this.totalPage = data.page.totalCount;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          this.dataList = [];</span><br><span class="line">          this.totalPage = 0;</span><br><span class="line">        &#125;</span><br><span class="line">        this.dataListLoading = false;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    // 每页数</span><br><span class="line">    sizeChangeHandle(val) &#123;</span><br><span class="line">      this.pageSize = val;</span><br><span class="line">      this.pageIndex = 1;</span><br><span class="line">      this.getDataList();</span><br><span class="line">    &#125;,</span><br><span class="line">    // 当前页</span><br><span class="line">    currentChangeHandle(val) &#123;</span><br><span class="line">      this.pageIndex = val;</span><br><span class="line">      this.getDataList();</span><br><span class="line">    &#125;,</span><br><span class="line">    // 多选</span><br><span class="line">    selectionChangeHandle(val) &#123;</span><br><span class="line">      this.dataListSelections = val;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 新增 / 修改</span><br><span class="line">    addOrUpdateHandle(id) &#123;</span><br><span class="line">      this.addOrUpdateVisible = true;</span><br><span class="line">      this.$nextTick(() =&gt; &#123;</span><br><span class="line">        this.$refs.addOrUpdate.init(id);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    // 删除</span><br><span class="line">    deleteHandle(id) &#123;</span><br><span class="line">      var ids = id</span><br><span class="line">        ? [id]</span><br><span class="line">        : this.dataListSelections.map(item =&gt; &#123;</span><br><span class="line">            return item.attrGroupId;</span><br><span class="line">          &#125;);</span><br><span class="line">      this.$confirm(</span><br><span class="line">        `确定对[id=$&#123;ids.join(&quot;,&quot;)&#125;]进行[$&#123;id ? &quot;删除&quot; : &quot;批量删除&quot;&#125;]操作?`,</span><br><span class="line">        &quot;提示&quot;,</span><br><span class="line">        &#123;</span><br><span class="line">          confirmButtonText: &quot;确定&quot;,</span><br><span class="line">          cancelButtonText: &quot;取消&quot;,</span><br><span class="line">          type: &quot;warning&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      ).then(() =&gt; &#123;</span><br><span class="line">        this.$http(&#123;</span><br><span class="line">          url: this.$http.adornUrl(&quot;/product/attrgroup/delete&quot;),</span><br><span class="line">          method: &quot;post&quot;,</span><br><span class="line">          data: this.$http.adornData(ids, false)</span><br><span class="line">        &#125;).then((&#123; data &#125;) =&gt; &#123;</span><br><span class="line">          if (data &amp;&amp; data.code === 0) &#123;</span><br><span class="line">            this.$message(&#123;</span><br><span class="line">              message: &quot;操作成功&quot;,</span><br><span class="line">              type: &quot;success&quot;,</span><br><span class="line">              duration: 1500,</span><br><span class="line">              onClose: () =&gt; &#123;</span><br><span class="line">                this.getDataList();</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">          &#125; else &#123;</span><br><span class="line">            this.$message.error(data.msg);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h4 id="分组新增-amp-级联选择器"><a href="#分组新增-amp-级联选择器" class="headerlink" title="分组新增&amp;级联选择器"></a>分组新增&amp;级联选择器</h4><p>1.使用<el-cascader>标签，引入级联选择器</p>
<p>2.为了返回的字段中不存在空字段值的参数返回到响应参数中，在字段变量上注解@JsonInclude(JsonInclude.Include.NON_EMPTY)</p>
<h4 id="分组修改-amp-级联选择器回显"><a href="#分组修改-amp-级联选择器回显" class="headerlink" title="分组修改&amp;级联选择器回显"></a>分组修改&amp;级联选择器回显</h4><p>1.this.$nextTick() 的用法是指：等到组件渲染完毕才调用next方法中的方法。</p>
<p>2.渲染级联回显</p>
<p>2.1 添加回显字段</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@TableField(exist = false)</span></span><br><span class="line"><span class="keyword">private</span> Long[] catelogPath;</span><br></pre></td></tr></table></figure>

<p>2.2 增加方法</p>
<p>AttrGroupController</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="meta">@Autowired</span></span><br><span class="line"> <span class="keyword">private</span> CategoryService categoryService;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/info/&#123;attrGroupId&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">infoNew</span><span class="params">(<span class="meta">@PathVariable(&quot;attrGroupId&quot;)</span> Long attrGroupId)</span>&#123;</span><br><span class="line">        <span class="type">AttrGroupEntity</span> <span class="variable">attrGroup</span> <span class="operator">=</span> attrGroupService.getById(attrGroupId);</span><br><span class="line"></span><br><span class="line">        <span class="type">Long</span> <span class="variable">catelogId</span> <span class="operator">=</span> attrGroup.getCatelogId();</span><br><span class="line">        Long[] path = categoryService.findCatelogPath(catelogId);</span><br><span class="line"></span><br><span class="line">        attrGroup.setCatelogPath(path);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> R.ok().put(<span class="string">&quot;attrGroup&quot;</span>, attrGroup);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>CategoryServiceImpl</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Long[] findCatelogPath(Long catelogId) &#123;</span><br><span class="line">        List&lt;Long&gt; paths = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        List&lt;Long&gt; parentPath = findParentPath(catelogId, paths);</span><br><span class="line">        Collections.reverse(parentPath);</span><br><span class="line">        <span class="keyword">return</span> parentPath.toArray(<span class="keyword">new</span> <span class="title class_">Long</span>[parentPath.size()]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;Long&gt; <span class="title function_">findParentPath</span><span class="params">(Long catelogId,List&lt;Long&gt; paths)</span>&#123;</span><br><span class="line">        <span class="comment">//1、收集当前节点id</span></span><br><span class="line">        paths.add(catelogId);</span><br><span class="line">        <span class="type">CategoryEntity</span> <span class="variable">byId</span> <span class="operator">=</span> <span class="built_in">this</span>.getById(catelogId);</span><br><span class="line">        <span class="keyword">if</span>(byId.getParentCid()!=<span class="number">0</span>)&#123;</span><br><span class="line">            findParentPath(byId.getParentCid(),paths);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> paths;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>3.使用<el-cascader>自带属性filterable，增加搜索功能。</p>
<p>4.重置弹出框数据，<el-dialog>标签自带数据closed ，声明关闭回调方法，然后置空动态绑定参数。</p>
<h4 id="品牌分类关联与级联更新"><a href="#品牌分类关联与级联更新" class="headerlink" title="品牌分类关联与级联更新"></a>品牌分类关联与级联更新</h4><p>1.引入MyBatisPlus插件实现分页</p>
<p>1.1 在product模块下，创建config包，包下建立插件配置类，使用分页插件，注入到Spring 中。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableTransactionManagement</span> <span class="comment">//开启事务</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;&lt;你到数据控制层包路径&gt;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyBatisConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//引入分页插件</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> PaginationInterceptor <span class="title function_">paginationInterceptor</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">PaginationInterceptor</span> <span class="variable">paginationInterceptor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PaginationInterceptor</span>();</span><br><span class="line">        <span class="comment">// 设置请求的页面大于最大页后操作， true调回到首页，false 继续请求  默认false</span></span><br><span class="line">        paginationInterceptor.setOverflow(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">// 设置最大单页限制数量，默认 500 条，-1 不受限制</span></span><br><span class="line">        paginationInterceptor.setLimit(<span class="number">1000</span>);</span><br><span class="line">        <span class="keyword">return</span> paginationInterceptor;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>1.2 修改品牌查询方法，能够通过关键词进行多行检索。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> PageUtils <span class="title function_">queryPage</span><span class="params">(Map&lt;String, Object&gt; params)</span> &#123;</span><br><span class="line">    <span class="comment">//1、获取key</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> (String) params.get(<span class="string">&quot;key&quot;</span>);</span><br><span class="line">    QueryWrapper&lt;BrandEntity&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">if</span>(!StringUtils.isEmpty(key))&#123;</span><br><span class="line">        queryWrapper.eq(<span class="string">&quot;brand_id&quot;</span>,key).or().like(<span class="string">&quot;name&quot;</span>,key);</span><br><span class="line">    &#125;</span><br><span class="line">    IPage&lt;BrandEntity&gt; page = <span class="built_in">this</span>.page(</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Query</span>&lt;BrandEntity&gt;().getPage(params),</span><br><span class="line">            queryWrapper</span><br><span class="line"></span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">PageUtils</span>(page);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2.品牌分类以及关联</p>
<p>2.1编写品牌分类信息查询接口，CategoryBrandRelationController 增加以下方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取当前品牌关联的所有分类列表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/catelog/list&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">cateloglist</span><span class="params">(<span class="meta">@RequestParam(&quot;brandId&quot;)</span> Long brandId)</span> &#123;</span><br><span class="line">        List&lt;CategoryBrandRelationEntity&gt; data = categoryBrandRelationService.list(</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;CategoryBrandRelationEntity&gt;().eq(<span class="string">&quot;brand_id&quot;</span>, brandId)</span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">return</span> R.ok().put(<span class="string">&quot;data&quot;</span>, data);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>2.2 编写平台分类信息保存接口</p>
<p>CategoryBrandRelationServiceImpl</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveDetail</span><span class="params">(CategoryBrandRelationEntity categoryBrandRelation)</span> &#123;</span><br><span class="line">    <span class="type">Long</span> <span class="variable">brandId</span> <span class="operator">=</span> categoryBrandRelation.getBrandId();</span><br><span class="line">    <span class="type">Long</span> <span class="variable">catelogId</span> <span class="operator">=</span> categoryBrandRelation.getCatelogId();</span><br><span class="line">    <span class="comment">//1、查询详细名字</span></span><br><span class="line">    <span class="type">BrandEntity</span> <span class="variable">brandEntity</span> <span class="operator">=</span> brandDao.selectById(brandId);</span><br><span class="line">    <span class="type">CategoryEntity</span> <span class="variable">categoryEntity</span> <span class="operator">=</span> categoryDao.selectById(catelogId);</span><br><span class="line">    categoryBrandRelation.setBrandName(brandEntity.getName());</span><br><span class="line">    categoryBrandRelation.setCatelogName(categoryEntity.getName());</span><br><span class="line">    <span class="built_in">this</span>.save(categoryBrandRelation);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>CategoryBrandRelationController</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存关联信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/save&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">saveDetail</span><span class="params">(<span class="meta">@RequestBody</span> CategoryBrandRelationEntity categoryBrandRelation)</span> &#123;</span><br><span class="line">        categoryBrandRelationService.saveDetail(categoryBrandRelation);</span><br><span class="line">        <span class="keyword">return</span> R.ok();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>3.级联更新，如果更新品牌的名称，我们就需要同时更新关联的品牌数据</p>
<p>BrandServiceImpl.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateDetail</span><span class="params">(BrandEntity brand)</span> &#123;</span><br><span class="line">    <span class="comment">//保证冗余字段的数据一致</span></span><br><span class="line">    <span class="built_in">this</span>.updateById(brand);</span><br><span class="line">    <span class="keyword">if</span>(!StringUtils.isEmpty(brand.getName()))&#123;</span><br><span class="line">        <span class="comment">//同步更新其他关联表中的数据</span></span><br><span class="line">        categoryBrandRelationService.updateBrand(brand.getBrandId(),brand.getName());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//TODO 更新其他关联</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>BrandController.java</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/**</span><br><span class="line">   * 修改</span><br><span class="line">   */</span><br><span class="line">  @RequestMapping(&quot;/update&quot;)</span><br><span class="line">  //@RequiresPermissions(&quot;product:brand:update&quot;)</span><br><span class="line">  public R update(@Validated(UpdateGroup.class) @RequestBody BrandEntity brand)&#123;</span><br><span class="line">brandService.updateDetail(brand);</span><br><span class="line"></span><br><span class="line">      return R.ok();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p>CategoryBrandRelationServiceImpl.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateBrand</span><span class="params">(Long brandId, String name)</span> &#123;</span><br><span class="line">    <span class="type">CategoryBrandRelationEntity</span> <span class="variable">relationEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CategoryBrandRelationEntity</span>();</span><br><span class="line">    relationEntity.setBrandId(brandId);</span><br><span class="line">    relationEntity.setBrandName(name);</span><br><span class="line">    <span class="built_in">this</span>.update(relationEntity,<span class="keyword">new</span> <span class="title class_">UpdateWrapper</span>&lt;CategoryBrandRelationEntity&gt;().eq(<span class="string">&quot;brand_id&quot;</span>,brandId));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateCategory</span><span class="params">(Long catId, String name)</span> &#123;</span><br><span class="line">     <span class="built_in">this</span>.baseMapper.updateCategory(catId,name);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>CategoryBrandRelationDao.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateCategory&quot;</span>&gt;</span></span><br><span class="line">       UPDATE `pms_category_brand_relation` SET catelog_name=#&#123;name&#125; WHERE catelog_id=#&#123;catId&#125;</span><br><span class="line">   <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>CategoryBrandRelationDao.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">updateCategory</span><span class="params">(<span class="meta">@Param(&quot;catId&quot;)</span> Long catId, <span class="meta">@Param(&quot;name&quot;)</span> String name)</span>;</span><br></pre></td></tr></table></figure>

<p>CategoryServiceImpl.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 级联更新所有关联的数据</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> category</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateCascade</span><span class="params">(CategoryEntity category)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.updateById(category);</span><br><span class="line">    categoryBrandRelationService.updateCategory(category.getCatId(),category.getName());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>CategoryController.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 修改</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="meta">@RequestMapping(&quot;/update&quot;)</span></span><br><span class="line">  <span class="comment">//@RequiresPermissions(&quot;product:category:update&quot;)</span></span><br><span class="line">  <span class="keyword">public</span> R <span class="title function_">update</span><span class="params">(<span class="meta">@RequestBody</span> CategoryEntity category)</span>&#123;</span><br><span class="line">categoryService.updateCascade(category);</span><br><span class="line">      <span class="keyword">return</span> R.ok();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<h3 id="平台属性"><a href="#平台属性" class="headerlink" title="平台属性"></a>平台属性</h3><h4 id="规格参数新增与VO"><a href="#规格参数新增与VO" class="headerlink" title="规格参数新增与VO"></a>规格参数新增与VO</h4><p>1.VO的概念</p>
<p>略（搜索 object的划分）</p>
<p>2.规格参数新增接口</p>
<p>2.1 新增规格参数VO类</p>
<p>2.2 业务逻辑</p>
<p>AttrServiceImpl.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveAttr</span><span class="params">(AttrVo attr)</span> &#123;</span><br><span class="line">        <span class="type">AttrEntity</span> <span class="variable">attrEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AttrEntity</span>();</span><br><span class="line"><span class="comment">//        attrEntity.setAttrName(attr.getAttrName());</span></span><br><span class="line">        BeanUtils.copyProperties(attr,attrEntity);</span><br><span class="line">        <span class="comment">//1、保存基本数据</span></span><br><span class="line">        <span class="built_in">this</span>.save(attrEntity);</span><br><span class="line">        <span class="comment">//2、保存关联关系</span></span><br><span class="line">        <span class="keyword">if</span>(attr.getAttrType() == ProductConstant.AttrEnum.ATTR_TYPE_BASE.getCode() &amp;&amp; attr.getAttrGroupId()!=<span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="type">AttrAttrgroupRelationEntity</span> <span class="variable">relationEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AttrAttrgroupRelationEntity</span>();</span><br><span class="line">            relationEntity.setAttrGroupId(attr.getAttrGroupId());</span><br><span class="line">            relationEntity.setAttrId(attrEntity.getAttrId());</span><br><span class="line">            relationDao.insert(relationEntity);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>AttrController.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 保存</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="meta">@RequestMapping(&quot;/save&quot;)</span></span><br><span class="line">  <span class="comment">//@RequiresPermissions(&quot;product:attr:save&quot;)</span></span><br><span class="line">  <span class="keyword">public</span> R <span class="title function_">save</span><span class="params">(<span class="meta">@RequestBody</span> AttrVo attr)</span>&#123;</span><br><span class="line">attrService.saveAttr(attr);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> R.ok();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<h4 id="规格参数列表"><a href="#规格参数列表" class="headerlink" title="规格参数列表"></a>规格参数列表</h4><p>1.新增规格列表查询接口</p>
<p>修改AttrController</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/base/list/&#123;catelogId&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">baseAttrList</span><span class="params">(<span class="meta">@RequestParam</span> Map&lt;String, Object&gt; params,</span></span><br><span class="line"><span class="params">                          <span class="meta">@PathVariable(&quot;catelogId&quot;)</span> Long catelogId)</span> &#123;</span><br><span class="line">        <span class="type">PageUtils</span> <span class="variable">page</span> <span class="operator">=</span> attrService.queryBaseAttrPage(params, catelogId);</span><br><span class="line">        <span class="keyword">return</span> R.ok().put(<span class="string">&quot;page&quot;</span>, page);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>修改AttrServiceImpl</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> PageUtils <span class="title function_">queryBaseAttrPage</span><span class="params">(Map&lt;String, Object&gt; params, Long catelogId)</span> &#123;</span><br><span class="line">    QueryWrapper&lt;AttrEntity&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;AttrEntity&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (catelogId != <span class="number">0</span>) &#123;</span><br><span class="line">        queryWrapper.eq(<span class="string">&quot;catelog_id&quot;</span>, catelogId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> (String) params.get(<span class="string">&quot;key&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (!StringUtils.isEmpty(key)) &#123;</span><br><span class="line">        <span class="comment">//attr_id  attr_name</span></span><br><span class="line">        queryWrapper.and((wrapper) -&gt; &#123;</span><br><span class="line">            wrapper.eq(<span class="string">&quot;attr_id&quot;</span>, key).or().like(<span class="string">&quot;attr_name&quot;</span>, key);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    IPage&lt;AttrEntity&gt; page = <span class="built_in">this</span>.page(</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Query</span>&lt;AttrEntity&gt;().getPage(params),</span><br><span class="line">            queryWrapper</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="type">PageUtils</span> <span class="variable">pageUtils</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PageUtils</span>(page);</span><br><span class="line">    List&lt;AttrEntity&gt; records = page.getRecords();</span><br><span class="line">    List&lt;AttrRespVo&gt; respVos = records.stream().map((attrEntity) -&gt; &#123;</span><br><span class="line">        <span class="type">AttrRespVo</span> <span class="variable">attrRespVo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AttrRespVo</span>();</span><br><span class="line">        BeanUtils.copyProperties(attrEntity, attrRespVo);</span><br><span class="line">        <span class="comment">//1、设置分类和分组的名字</span></span><br><span class="line">        <span class="type">AttrAttrgroupRelationEntity</span> <span class="variable">attrId</span> <span class="operator">=</span></span><br><span class="line">                relationDao.selectOne(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;AttrAttrgroupRelationEntity&gt;().eq(<span class="string">&quot;attr_id&quot;</span>,</span><br><span class="line">                        attrEntity.getAttrId()));</span><br><span class="line">        <span class="keyword">if</span> (attrId != <span class="literal">null</span> &amp;&amp; attrId.getAttrGroupId() != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="type">AttrGroupEntity</span> <span class="variable">attrGroupEntity</span> <span class="operator">=</span> attrGroupDao.selectById(attrId.getAttrGroupId());</span><br><span class="line">            attrRespVo.setGroupName(attrGroupEntity.getAttrGroupName());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">CategoryEntity</span> <span class="variable">categoryEntity</span> <span class="operator">=</span> categoryDao.selectById(attrEntity.getCatelogId());</span><br><span class="line">        <span class="keyword">if</span> (categoryEntity != <span class="literal">null</span>) &#123;</span><br><span class="line">            attrRespVo.setCatelogName(categoryEntity.getName());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> attrRespVo;</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">    pageUtils.setList(respVos);</span><br><span class="line">    <span class="keyword">return</span> pageUtils;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>因为要关联查询数据，分类信息和分组信息，新增响应类AttrRespVo</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AttrRespVo</span> <span class="keyword">extends</span> <span class="title class_">AttrVo</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 			&quot;catelogName&quot;: &quot;手机/数码/手机&quot;, //所属分类名字</span></span><br><span class="line"><span class="comment">     * 			&quot;groupName&quot;: &quot;主体&quot;, //所属分组名字</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String catelogName;</span><br><span class="line">    <span class="keyword">private</span> String groupName;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Long[] catelogPath;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="规格修改"><a href="#规格修改" class="headerlink" title="规格修改"></a>规格修改</h4><p>1.查询属性详情</p>
<p>1.1 修改 &#x2F;product&#x2F;attr&#x2F;info&#x2F;{attrId} 接口</p>
<p>AttrController.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/info/&#123;attrId&#125;&quot;)</span></span><br><span class="line">    <span class="comment">//@RequiresPermissions(&quot;product:attr:info&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">info</span><span class="params">(<span class="meta">@PathVariable(&quot;attrId&quot;)</span> Long attrId)</span>&#123;</span><br><span class="line">		<span class="comment">//AttrEntity attr = attrService.getById(attrId);</span></span><br><span class="line">        <span class="type">AttrRespVo</span> <span class="variable">respVo</span> <span class="operator">=</span> attrService.getAttrInfo(attrId);</span><br><span class="line">        <span class="keyword">return</span> R.ok().put(<span class="string">&quot;attr&quot;</span>, respVo);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>AttrServiceImpl.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> AttrRespVo <span class="title function_">getAttrInfo</span><span class="params">(Long attrId)</span> &#123;</span><br><span class="line">        <span class="type">AttrRespVo</span> <span class="variable">respVo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AttrRespVo</span>();</span><br><span class="line">        <span class="type">AttrEntity</span> <span class="variable">attrEntity</span> <span class="operator">=</span> <span class="built_in">this</span>.getById(attrId);</span><br><span class="line">        BeanUtils.copyProperties(attrEntity, respVo);</span><br><span class="line">        <span class="comment">//1、设置分组信息</span></span><br><span class="line">        <span class="type">AttrAttrgroupRelationEntity</span> <span class="variable">attrgroupRelation</span> <span class="operator">=</span></span><br><span class="line">                relationDao.selectOne(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;AttrAttrgroupRelationEntity&gt;().eq(<span class="string">&quot;attr_id&quot;</span>, attrId));</span><br><span class="line">        <span class="keyword">if</span> (attrgroupRelation != <span class="literal">null</span>) &#123;</span><br><span class="line">            respVo.setAttrGroupId(attrgroupRelation.getAttrGroupId());</span><br><span class="line">            <span class="type">AttrGroupEntity</span> <span class="variable">attrGroupEntity</span> <span class="operator">=</span> attrGroupDao.selectById(attrgroupRelation.getAttrGroupId());</span><br><span class="line">            <span class="keyword">if</span> (attrGroupEntity != <span class="literal">null</span>) &#123;</span><br><span class="line">                respVo.setGroupName(attrGroupEntity.getAttrGroupName());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//2、设置分类信息</span></span><br><span class="line">        <span class="type">Long</span> <span class="variable">catelogId</span> <span class="operator">=</span> attrEntity.getCatelogId();</span><br><span class="line">        Long[] catelogPath = categoryService.findCatelogPath(catelogId);</span><br><span class="line">        respVo.setCatelogPath(catelogPath);</span><br><span class="line"></span><br><span class="line">        <span class="type">CategoryEntity</span> <span class="variable">categoryEntity</span> <span class="operator">=</span> categoryDao.selectById(catelogId);</span><br><span class="line">        <span class="keyword">if</span>(categoryEntity!=<span class="literal">null</span>)&#123;</span><br><span class="line">            respVo.setCatelogName(categoryEntity.getName());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> respVo;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>2.更新属性分组</p>
<p>AttrServiceImpl.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Transactional(rollbackFor = RuntimeException.class)</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateAttr</span><span class="params">(AttrVo attr)</span> &#123;</span><br><span class="line">    <span class="type">AttrEntity</span> <span class="variable">attrEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AttrEntity</span>();</span><br><span class="line">    BeanUtils.copyProperties(attr, attrEntity);</span><br><span class="line">    <span class="built_in">this</span>.updateById(attrEntity);</span><br><span class="line">    <span class="comment">//1、修改分组关联</span></span><br><span class="line">    <span class="type">AttrAttrgroupRelationEntity</span> <span class="variable">relationEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AttrAttrgroupRelationEntity</span>();</span><br><span class="line">    relationEntity.setAttrGroupId(attr.getAttrGroupId());</span><br><span class="line">    relationEntity.setAttrId(attr.getAttrId());</span><br><span class="line">    <span class="type">Integer</span> <span class="variable">count</span> <span class="operator">=</span> relationDao.selectCount(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;AttrAttrgroupRelationEntity&gt;().eq(<span class="string">&quot;attr_id&quot;</span>, attr.getAttrId()));</span><br><span class="line">    <span class="keyword">if</span> (count &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        relationDao.update(relationEntity, <span class="keyword">new</span> <span class="title class_">UpdateWrapper</span>&lt;AttrAttrgroupRelationEntity&gt;().eq(<span class="string">&quot;attr_id&quot;</span>, attr.getAttrId()));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        relationDao.insert(relationEntity);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>AttrController.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 修改</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/update&quot;)</span></span><br><span class="line">    <span class="comment">//@RequiresPermissions(&quot;product:attr:update&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">update</span><span class="params">(<span class="meta">@RequestBody</span> AttrVo attr)</span>&#123;</span><br><span class="line">        attrService.updateAttr(attr);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> R.ok();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h4 id="销售属性维护"><a href="#销售属性维护" class="headerlink" title="销售属性维护"></a>销售属性维护</h4><p>1.修改之前的所有方法，如果是基本属性需要关联修改，如果是销售属性就不需要，所以我们要定义一个常量作为判断。</p>
<p>AttrServiceImpl.java 修改部分方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveAttr</span><span class="params">(AttrVo attr)</span> &#123;</span><br><span class="line">        <span class="type">AttrEntity</span> <span class="variable">attrEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AttrEntity</span>();</span><br><span class="line"><span class="comment">//        attrEntity.setAttrName(attr.getAttrName());</span></span><br><span class="line">        BeanUtils.copyProperties(attr,attrEntity);</span><br><span class="line">        <span class="comment">//1、保存基本数据</span></span><br><span class="line">        <span class="built_in">this</span>.save(attrEntity);</span><br><span class="line">        <span class="comment">//2、保存关联关系</span></span><br><span class="line">        <span class="keyword">if</span>(attr.getAttrType() == ProductConstant.AttrEnum.ATTR_TYPE_BASE.getCode() &amp;&amp; attr.getAttrGroupId()!=<span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="type">AttrAttrgroupRelationEntity</span> <span class="variable">relationEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AttrAttrgroupRelationEntity</span>();</span><br><span class="line">            relationEntity.setAttrGroupId(attr.getAttrGroupId());</span><br><span class="line">            relationEntity.setAttrId(attrEntity.getAttrId());</span><br><span class="line">            relationDao.insert(relationEntity);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> PageUtils <span class="title function_">queryBaseAttrPage</span><span class="params">(Map&lt;String, Object&gt; params, Long catelogId, String type)</span> &#123;</span><br><span class="line">        QueryWrapper&lt;AttrEntity&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;AttrEntity&gt;().eq(<span class="string">&quot;attr_type&quot;</span>,<span class="string">&quot;base&quot;</span>.equalsIgnoreCase(type)?ProductConstant.AttrEnum.ATTR_TYPE_BASE.getCode():ProductConstant.AttrEnum.ATTR_TYPE_SALE.getCode());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(catelogId != <span class="number">0</span>)&#123;</span><br><span class="line">            queryWrapper.eq(<span class="string">&quot;catelog_id&quot;</span>,catelogId);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> (String) params.get(<span class="string">&quot;key&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(!StringUtils.isEmpty(key))&#123;</span><br><span class="line">            <span class="comment">//attr_id  attr_name</span></span><br><span class="line">            queryWrapper.and((wrapper)-&gt;&#123;</span><br><span class="line">                wrapper.eq(<span class="string">&quot;attr_id&quot;</span>,key).or().like(<span class="string">&quot;attr_name&quot;</span>,key);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        IPage&lt;AttrEntity&gt; page = <span class="built_in">this</span>.page(</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Query</span>&lt;AttrEntity&gt;().getPage(params),</span><br><span class="line">                queryWrapper</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="type">PageUtils</span> <span class="variable">pageUtils</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PageUtils</span>(page);</span><br><span class="line">        List&lt;AttrEntity&gt; records = page.getRecords();</span><br><span class="line">        List&lt;AttrRespVo&gt; respVos = records.stream().map((attrEntity) -&gt; &#123;</span><br><span class="line">            <span class="type">AttrRespVo</span> <span class="variable">attrRespVo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AttrRespVo</span>();</span><br><span class="line">            BeanUtils.copyProperties(attrEntity, attrRespVo);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//1、设置分类和分组的名字</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="string">&quot;base&quot;</span>.equalsIgnoreCase(type))&#123;</span><br><span class="line">                <span class="type">AttrAttrgroupRelationEntity</span> <span class="variable">attrId</span> <span class="operator">=</span> relationDao.selectOne(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;AttrAttrgroupRelationEntity&gt;().eq(<span class="string">&quot;attr_id&quot;</span>, attrEntity.getAttrId()));</span><br><span class="line">                <span class="keyword">if</span> (attrId != <span class="literal">null</span> &amp;&amp; attrId.getAttrGroupId()!=<span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="type">AttrGroupEntity</span> <span class="variable">attrGroupEntity</span> <span class="operator">=</span> attrGroupDao.selectById(attrId.getAttrGroupId());</span><br><span class="line">                    attrRespVo.setGroupName(attrGroupEntity.getAttrGroupName());</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="type">CategoryEntity</span> <span class="variable">categoryEntity</span> <span class="operator">=</span> categoryDao.selectById(attrEntity.getCatelogId());</span><br><span class="line">            <span class="keyword">if</span> (categoryEntity != <span class="literal">null</span>) &#123;</span><br><span class="line">                attrRespVo.setCatelogName(categoryEntity.getName());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> attrRespVo;</span><br><span class="line">        &#125;).collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">        pageUtils.setList(respVos);</span><br><span class="line">        <span class="keyword">return</span> pageUtils;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> AttrRespVo <span class="title function_">getAttrInfo</span><span class="params">(Long attrId)</span> &#123;</span><br><span class="line">        <span class="type">AttrRespVo</span> <span class="variable">respVo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AttrRespVo</span>();</span><br><span class="line">        <span class="type">AttrEntity</span> <span class="variable">attrEntity</span> <span class="operator">=</span> <span class="built_in">this</span>.getById(attrId);</span><br><span class="line">        BeanUtils.copyProperties(attrEntity,respVo);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(attrEntity.getAttrType() == ProductConstant.AttrEnum.ATTR_TYPE_BASE.getCode())&#123;</span><br><span class="line">            <span class="comment">//1、设置分组信息</span></span><br><span class="line">            <span class="type">AttrAttrgroupRelationEntity</span> <span class="variable">attrgroupRelation</span> <span class="operator">=</span> relationDao.selectOne(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;AttrAttrgroupRelationEntity&gt;().eq(<span class="string">&quot;attr_id&quot;</span>, attrId));</span><br><span class="line">            <span class="keyword">if</span>(attrgroupRelation!=<span class="literal">null</span>)&#123;</span><br><span class="line">                respVo.setAttrGroupId(attrgroupRelation.getAttrGroupId());</span><br><span class="line">                <span class="type">AttrGroupEntity</span> <span class="variable">attrGroupEntity</span> <span class="operator">=</span> attrGroupDao.selectById(attrgroupRelation.getAttrGroupId());</span><br><span class="line">                <span class="keyword">if</span>(attrGroupEntity!=<span class="literal">null</span>)&#123;</span><br><span class="line">                    respVo.setGroupName(attrGroupEntity.getAttrGroupName());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//2、设置分类信息</span></span><br><span class="line">        <span class="type">Long</span> <span class="variable">catelogId</span> <span class="operator">=</span> attrEntity.getCatelogId();</span><br><span class="line">        Long[] catelogPath = categoryService.findCatelogPath(catelogId);</span><br><span class="line">        respVo.setCatelogPath(catelogPath);</span><br><span class="line"></span><br><span class="line">        <span class="type">CategoryEntity</span> <span class="variable">categoryEntity</span> <span class="operator">=</span> categoryDao.selectById(catelogId);</span><br><span class="line">        <span class="keyword">if</span>(categoryEntity!=<span class="literal">null</span>)&#123;</span><br><span class="line">            respVo.setCatelogName(categoryEntity.getName());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> respVo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateAttr</span><span class="params">(AttrVo attr)</span> &#123;</span><br><span class="line">        <span class="type">AttrEntity</span> <span class="variable">attrEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AttrEntity</span>();</span><br><span class="line">        BeanUtils.copyProperties(attr,attrEntity);</span><br><span class="line">        <span class="built_in">this</span>.updateById(attrEntity);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(attrEntity.getAttrType() == ProductConstant.AttrEnum.ATTR_TYPE_BASE.getCode())&#123;</span><br><span class="line">            <span class="comment">//1、修改分组关联</span></span><br><span class="line">            <span class="type">AttrAttrgroupRelationEntity</span> <span class="variable">relationEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AttrAttrgroupRelationEntity</span>();</span><br><span class="line"></span><br><span class="line">            relationEntity.setAttrGroupId(attr.getAttrGroupId());</span><br><span class="line">            relationEntity.setAttrId(attr.getAttrId());</span><br><span class="line"></span><br><span class="line">            <span class="type">Integer</span> <span class="variable">count</span> <span class="operator">=</span> relationDao.selectCount(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;AttrAttrgroupRelationEntity&gt;().eq(<span class="string">&quot;attr_id&quot;</span>, attr.getAttrId()));</span><br><span class="line">            <span class="keyword">if</span>(count&gt;<span class="number">0</span>)&#123;</span><br><span class="line"></span><br><span class="line">                relationDao.update(relationEntity,<span class="keyword">new</span> <span class="title class_">UpdateWrapper</span>&lt;AttrAttrgroupRelationEntity&gt;().eq(<span class="string">&quot;attr_id&quot;</span>,attr.getAttrId()));</span><br><span class="line"></span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                relationDao.insert(relationEntity);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>AttrController.java 修改</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/&#123;attrType&#125;/list/&#123;catelogId&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">baseAttrList</span><span class="params">(<span class="meta">@RequestParam</span> Map&lt;String, Object&gt; params,</span></span><br><span class="line"><span class="params">                          <span class="meta">@PathVariable(&quot;catelogId&quot;)</span> Long catelogId,</span></span><br><span class="line"><span class="params">                          <span class="meta">@PathVariable(&quot;attrType&quot;)</span>String type)</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">PageUtils</span> <span class="variable">page</span> <span class="operator">=</span> attrService.queryBaseAttrPage(params,catelogId,type);</span><br><span class="line">        <span class="keyword">return</span> R.ok().put(<span class="string">&quot;page&quot;</span>, page);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>在common 模块添加常量类 ProductConstant</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProductConstant</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">enum</span>  <span class="title class_">AttrEnum</span>&#123;</span><br><span class="line">        ATTR_TYPE_BASE(<span class="number">1</span>,<span class="string">&quot;基本属性&quot;</span>),ATTR_TYPE_SALE(<span class="number">0</span>,<span class="string">&quot;销售属性&quot;</span>);</span><br><span class="line">        <span class="keyword">private</span> <span class="type">int</span> code;</span><br><span class="line">        <span class="keyword">private</span> String msg;</span><br><span class="line"></span><br><span class="line">        AttrEnum(<span class="type">int</span> code,String msg)&#123;</span><br><span class="line">            <span class="built_in">this</span>.code = code;</span><br><span class="line">            <span class="built_in">this</span>.msg = msg;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCode</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> code;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> String <span class="title function_">getMsg</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> msg;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="查询分组关联属性-amp-删除关联"><a href="#查询分组关联属性-amp-删除关联" class="headerlink" title="查询分组关联属性&amp;删除关联"></a>查询分组关联属性&amp;删除关联</h4><p>1.查询分组关联属性</p>
<p>AttrServiceImpl.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据分组id查找关联的所有基本属性</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> attrgroupId</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> List&lt;AttrEntity&gt; <span class="title function_">getRelationAttr</span><span class="params">(Long attrgroupId)</span> &#123;</span><br><span class="line">    List&lt;AttrAttrgroupRelationEntity&gt; entities = relationDao.selectList(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;AttrAttrgroupRelationEntity&gt;().eq(<span class="string">&quot;attr_group_id&quot;</span>, attrgroupId));</span><br><span class="line"></span><br><span class="line">    List&lt;Long&gt; attrIds = entities.stream().map((attr) -&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> attr.getAttrId();</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(attrIds == <span class="literal">null</span> || attrIds.size() == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    Collection&lt;AttrEntity&gt; attrEntities = <span class="built_in">this</span>.listByIds(attrIds);</span><br><span class="line">    <span class="keyword">return</span> (List&lt;AttrEntity&gt;) attrEntities;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>AttrGroupController 添加以下方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/&#123;attrgroupId&#125;/attr/relation&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">attrRelation</span><span class="params">(<span class="meta">@PathVariable(&quot;attrgroupId&quot;)</span> Long attrgroupId)</span>&#123;</span><br><span class="line">        List&lt;AttrEntity&gt; entities =  attrService.getRelationAttr(attrgroupId);</span><br><span class="line">        <span class="keyword">return</span> R.ok().put(<span class="string">&quot;data&quot;</span>,entities);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>2.删除关联</p>
<p>增加 AttrGroupRelationVo </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AttrGroupRelationVo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//&quot;attrId&quot;:1,&quot;attrGroupId&quot;:2</span></span><br><span class="line">    <span class="keyword">private</span> Long attrId;</span><br><span class="line">    <span class="keyword">private</span> Long attrGroupId;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>AttrServiceImpl</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteRelation</span><span class="params">(AttrGroupRelationVo[] vos)</span> &#123;</span><br><span class="line">    <span class="comment">//relationDao.delete(new QueryWrapper&lt;&gt;().eq(&quot;attr_id&quot;,1L).eq(&quot;attr_group_id&quot;,1L));</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    List&lt;AttrAttrgroupRelationEntity&gt; entities = Arrays.asList(vos).stream().map((item) -&gt; &#123;</span><br><span class="line">        <span class="type">AttrAttrgroupRelationEntity</span> <span class="variable">relationEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AttrAttrgroupRelationEntity</span>();</span><br><span class="line">        BeanUtils.copyProperties(item, relationEntity);</span><br><span class="line">        <span class="keyword">return</span> relationEntity;</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line">    relationDao.deleteBatchRelation(entities);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>AttrGroupController 增加</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/attr/relation/delete&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">deleteRelation</span><span class="params">(<span class="meta">@RequestBody</span>  AttrGroupRelationVo[] vos)</span>&#123;</span><br><span class="line">        attrService.deleteRelation(vos);</span><br><span class="line">        <span class="keyword">return</span> R.ok();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>AttrAttrgroupRelationDao</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">deleteBatchRelation</span><span class="params">(<span class="meta">@Param(value = &quot;entities&quot;)</span> List&lt;AttrAttrgroupRelationEntity&gt; entities)</span>;</span><br></pre></td></tr></table></figure>

<p>AttrAttrgroupRelationDao.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteBatchRelation&quot;</span>&gt;</span></span><br><span class="line">       DELETE FROM `pms_attr_attrgroup_relation` WHERE</span><br><span class="line">       <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">separator</span>=<span class="string">&quot; OR &quot;</span> <span class="attr">item</span>=<span class="string">&quot;item&quot;</span> <span class="attr">collection</span>=<span class="string">&quot;entities&quot;</span>&gt;</span>(attr_id=#&#123;item.attrId&#125; AND</span><br><span class="line">           attr_group_id=#&#123;item.attrGroupId&#125;)</span><br><span class="line">       <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="查询分组未关联属性"><a href="#查询分组未关联属性" class="headerlink" title="查询分组未关联属性"></a>查询分组未关联属性</h4><p>AttrGroupController</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/&#123;attrgroupId&#125;/noattr/relation&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">attrNoRelation</span><span class="params">(<span class="meta">@PathVariable(&quot;attrgroupId&quot;)</span> Long attrgroupId,</span></span><br><span class="line"><span class="params">                        <span class="meta">@RequestParam</span> Map&lt;String, Object&gt; params)</span>&#123;</span><br><span class="line">    <span class="type">PageUtils</span> <span class="variable">page</span> <span class="operator">=</span> attrService.getNoRelationAttr(params,attrgroupId);</span><br><span class="line">    <span class="keyword">return</span> R.ok().put(<span class="string">&quot;page&quot;</span>,page);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>AttrServiceImpl</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取当前分组没有关联的所有属性</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> params</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> attrgroupId</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> PageUtils <span class="title function_">getNoRelationAttr</span><span class="params">(Map&lt;String, Object&gt; params, Long attrgroupId)</span> &#123;</span><br><span class="line">    <span class="comment">//1、当前分组只能关联自己所属的分类里面的所有属性</span></span><br><span class="line">    <span class="type">AttrGroupEntity</span> <span class="variable">attrGroupEntity</span> <span class="operator">=</span> attrGroupDao.selectById(attrgroupId);</span><br><span class="line">    <span class="type">Long</span> <span class="variable">catelogId</span> <span class="operator">=</span> attrGroupEntity.getCatelogId();</span><br><span class="line">    <span class="comment">//2、当前分组只能关联别的分组没有引用的属性</span></span><br><span class="line">    <span class="comment">//2.1)、当前分类下的其他分组</span></span><br><span class="line">    List&lt;AttrGroupEntity&gt; group = attrGroupDao.selectList(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;AttrGroupEntity&gt;().eq(<span class="string">&quot;catelog_id&quot;</span>, catelogId));</span><br><span class="line">    List&lt;Long&gt; collect = group.stream().map(item -&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> item.getAttrGroupId();</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.2)、这些分组关联的属性</span></span><br><span class="line">    List&lt;AttrAttrgroupRelationEntity&gt; groupId = relationDao.selectList(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;AttrAttrgroupRelationEntity&gt;().in(<span class="string">&quot;attr_group_id&quot;</span>, collect));</span><br><span class="line">    List&lt;Long&gt; attrIds = groupId.stream().map(item -&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> item.getAttrId();</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.3)、从当前分类的所有属性中移除这些属性；</span></span><br><span class="line">    QueryWrapper&lt;AttrEntity&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;AttrEntity&gt;().eq(<span class="string">&quot;catelog_id&quot;</span>, catelogId).eq(<span class="string">&quot;attr_type&quot;</span>,ProductConstant.AttrEnum.ATTR_TYPE_BASE.getCode());</span><br><span class="line">    <span class="keyword">if</span>(attrIds!=<span class="literal">null</span> &amp;&amp; attrIds.size()&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        wrapper.notIn(<span class="string">&quot;attr_id&quot;</span>, attrIds);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> (String) params.get(<span class="string">&quot;key&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(!StringUtils.isEmpty(key))&#123;</span><br><span class="line">        wrapper.and((w)-&gt;&#123;</span><br><span class="line">            w.eq(<span class="string">&quot;attr_id&quot;</span>,key).or().like(<span class="string">&quot;attr_name&quot;</span>,key);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    IPage&lt;AttrEntity&gt; page = <span class="built_in">this</span>.page(<span class="keyword">new</span> <span class="title class_">Query</span>&lt;AttrEntity&gt;().getPage(params), wrapper);</span><br><span class="line">    <span class="type">PageUtils</span> <span class="variable">pageUtils</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PageUtils</span>(page);</span><br><span class="line">    <span class="keyword">return</span> pageUtils;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="新增分组与属性关联"><a href="#新增分组与属性关联" class="headerlink" title="新增分组与属性关联"></a>新增分组与属性关联</h4><p>AttrAttrgroupRelationServiceImpl.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveBatch</span><span class="params">(List&lt;AttrGroupRelationVo&gt; vos)</span> &#123;</span><br><span class="line">        List&lt;AttrAttrgroupRelationEntity&gt; collect = vos.stream().map(item -&gt; &#123;</span><br><span class="line">            <span class="type">AttrAttrgroupRelationEntity</span> <span class="variable">relationEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AttrAttrgroupRelationEntity</span>();</span><br><span class="line">            BeanUtils.copyProperties(item, relationEntity);</span><br><span class="line">            <span class="keyword">return</span> relationEntity;</span><br><span class="line">        &#125;).collect(Collectors.toList());</span><br><span class="line">        <span class="built_in">this</span>.saveBatch(collect);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>AttrGroupController.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/attr/relation&quot;)</span></span><br><span class="line">   <span class="keyword">public</span> R <span class="title function_">addRelation</span><span class="params">(<span class="meta">@RequestBody</span> List&lt;AttrGroupRelationVo&gt; vos)</span>&#123;</span><br><span class="line">       relationService.saveBatch(vos);</span><br><span class="line">       <span class="keyword">return</span> R.ok();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<h3 id="新增商品"><a href="#新增商品" class="headerlink" title="新增商品"></a>新增商品</h3><h4 id="调试会员等级相关接口"><a href="#调试会员等级相关接口" class="headerlink" title="调试会员等级相关接口"></a>调试会员等级相关接口</h4><p>1.在网关模块添加Member模块路由配置</p>
<p>routes.yml</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">id:</span> <span class="string">member_route</span></span><br><span class="line">  <span class="attr">uri:</span> <span class="string">lb://supermall-member</span></span><br><span class="line">  <span class="attr">predicates:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Path=/api/member/**</span></span><br><span class="line">  <span class="attr">filters:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">RewritePath=/api/(?&lt;segment&gt;.*),/$\&#123;segment&#125;</span></span><br></pre></td></tr></table></figure>

<p>2.在会员页面调试新增接口，添加会员信息</p>
<h4 id="获取分类关联的品牌"><a href="#获取分类关联的品牌" class="headerlink" title="获取分类关联的品牌"></a>获取分类关联的品牌</h4><p>CategoryBrandRelationController</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     *  /product/categorybrandrelation/brands/list</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     *  1、Controller：处理请求，接受和校验数据</span></span><br><span class="line"><span class="comment">     *  2、Service接受controller传来的数据，进行业务处理</span></span><br><span class="line"><span class="comment">     *  3、Controller接受Service处理完的数据，封装页面指定的vo</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/brands/list&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">relationBrandsList</span><span class="params">(<span class="meta">@RequestParam(value = &quot;catId&quot;,required = true)</span>Long catId)</span>&#123;</span><br><span class="line">        List&lt;BrandEntity&gt; vos = categoryBrandRelationService.getBrandsByCatId(catId);</span><br><span class="line">        List&lt;BrandVo&gt; collect = vos.stream().map(item -&gt; &#123;</span><br><span class="line">            <span class="type">BrandVo</span> <span class="variable">brandVo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BrandVo</span>();</span><br><span class="line">            brandVo.setBrandId(item.getBrandId());</span><br><span class="line">            brandVo.setBrandName(item.getName());</span><br><span class="line">            <span class="keyword">return</span> brandVo;</span><br><span class="line">        &#125;).collect(Collectors.toList());</span><br><span class="line">        <span class="keyword">return</span> R.ok().put(<span class="string">&quot;data&quot;</span>,collect);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>CategoryBrandRelationServiceImpl</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> List&lt;BrandEntity&gt; <span class="title function_">getBrandsByCatId</span><span class="params">(Long catId)</span> &#123;</span><br><span class="line"></span><br><span class="line">        List&lt;CategoryBrandRelationEntity&gt; catelogId = relationDao.selectList(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;CategoryBrandRelationEntity&gt;().eq(<span class="string">&quot;catelog_id&quot;</span>, catId));</span><br><span class="line">        List&lt;BrandEntity&gt; collect = catelogId.stream().map(item -&gt; &#123;</span><br><span class="line">            <span class="type">Long</span> <span class="variable">brandId</span> <span class="operator">=</span> item.getBrandId();</span><br><span class="line">            <span class="type">BrandEntity</span> <span class="variable">byId</span> <span class="operator">=</span> brandService.getById(brandId);</span><br><span class="line">            <span class="keyword">return</span> byId;</span><br><span class="line">        &#125;).collect(Collectors.toList());</span><br><span class="line">        <span class="keyword">return</span> collect;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>注：前端部分页面引入pubsub-js</p>
<p>1.引入前端组件pubsub-js</p>
<p>现在项目根目录使用命令，下载pubsub-js</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install pubsub-js --save</span><br></pre></td></tr></table></figure>

<p>在spuuadd.vue ，category-cascader.vue，brand-select.vue 引入pubsub-js</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 导入</span><br><span class="line">import PubSub from &quot;pubsub-js&quot;</span><br></pre></td></tr></table></figure>

<p>修改部分使用this.PubSub 的地方，直接使用 PubSub。</p>
<h4 id="获取分类下所有分组以及属性"><a href="#获取分类下所有分组以及属性" class="headerlink" title="获取分类下所有分组以及属性"></a>获取分类下所有分组以及属性</h4><p>AttrGroupRelationVo 添加实体类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AttrGroupWithAttrsVo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 分组id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Long attrGroupId;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 组名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String attrGroupName;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 排序</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer sort;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 描述</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String descript;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 组图标</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String icon;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 所属分类id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Long catelogId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;AttrEntity&gt; attrs;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>AttrGroupController</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/&#123;catelogId&#125;/withattr&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">getAttrGroupWithAttrs</span><span class="params">(<span class="meta">@PathVariable(&quot;catelogId&quot;)</span>Long catelogId)</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1、查出当前分类下的所有属性分组，</span></span><br><span class="line">        <span class="comment">//2、查出每个属性分组的所有属性</span></span><br><span class="line">        List&lt;AttrGroupWithAttrsVo&gt; vos =  attrGroupService.getAttrGroupWithAttrsByCatelogId(catelogId);</span><br><span class="line">        <span class="keyword">return</span> R.ok().put(<span class="string">&quot;data&quot;</span>,vos);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>AttrGroupServiceImpl</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据分类id查出所有的分组以及这些组里面的属性</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> catelogId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;AttrGroupWithAttrsVo&gt; <span class="title function_">getAttrGroupWithAttrsByCatelogId</span><span class="params">(Long catelogId)</span> &#123;</span><br><span class="line">        <span class="comment">//com.atguigu.gulimall.product.vo</span></span><br><span class="line">        <span class="comment">//1、查询分组信息</span></span><br><span class="line">        List&lt;AttrGroupEntity&gt; attrGroupEntities = <span class="built_in">this</span>.list(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;AttrGroupEntity&gt;().eq(<span class="string">&quot;catelog_id&quot;</span>, catelogId));</span><br><span class="line">        <span class="comment">//2、查询所有属性</span></span><br><span class="line">        List&lt;AttrGroupWithAttrsVo&gt; collect = attrGroupEntities.stream().map(group -&gt; &#123;</span><br><span class="line">            <span class="type">AttrGroupWithAttrsVo</span> <span class="variable">attrsVo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AttrGroupWithAttrsVo</span>();</span><br><span class="line">            BeanUtils.copyProperties(group,attrsVo);</span><br><span class="line">            List&lt;AttrEntity&gt; attrs = attrService.getRelationAttr(attrsVo.getAttrGroupId());</span><br><span class="line">            attrsVo.setAttrs(attrs);</span><br><span class="line">            <span class="keyword">return</span> attrsVo;</span><br><span class="line">        &#125;).collect(Collectors.toList());</span><br><span class="line">        <span class="keyword">return</span> collect;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>修改spuadd.vue的showBaseAttrs()</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">showBaseAttrs() &#123;</span><br><span class="line">      if (!this.dataResp.steped[0]) &#123;</span><br><span class="line">        this.$http(&#123;</span><br><span class="line">          url: this.$http.adornUrl(</span><br><span class="line">            `/product/attrgroup/$&#123;this.spu.catalogId&#125;/withattr`</span><br><span class="line">          ),</span><br><span class="line">          method: &quot;get&quot;,</span><br><span class="line">          params: this.$http.adornParams(&#123;&#125;)</span><br><span class="line">        &#125;).then((&#123; data &#125;) =&gt; &#123;</span><br><span class="line">          //先对表单的baseAttrs进行初始化</span><br><span class="line">          data.data.forEach(item =&gt; &#123;</span><br><span class="line">            let attrArray = [];</span><br><span class="line">            if (item.attrs) &#123;</span><br><span class="line">              item.attrs.forEach(attr =&gt; &#123;</span><br><span class="line">                attrArray.push(&#123;</span><br><span class="line">                  attrId: attr.attrId,</span><br><span class="line">                  attrValues: &quot;&quot;,</span><br><span class="line">                  showDesc: attr.showDesc</span><br><span class="line">                &#125;);</span><br><span class="line">              &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            this.dataResp.baseAttrs.push(attrArray);</span><br><span class="line">          &#125;);</span><br><span class="line">          this.dataResp.steped[0] = 0;</span><br><span class="line">          this.dataResp.attrGroups = data.data;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h4 id="商品新增VO抽取"><a href="#商品新增VO抽取" class="headerlink" title="商品新增VO抽取"></a>商品新增VO抽取</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Attr</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Long attrId;</span><br><span class="line">    <span class="keyword">private</span> String attrName;</span><br><span class="line">    <span class="keyword">private</span> String attrValue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BaseAttrs</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Long attrId;</span><br><span class="line">    <span class="keyword">private</span> String attrValues;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> showDesc;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Bounds</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> BigDecimal buyBounds;</span><br><span class="line">    <span class="keyword">private</span> BigDecimal growBounds;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Images</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String imgUrl;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> defaultImg;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MemberPrice</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> BigDecimal price;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Skus</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;Attr&gt; attr;</span><br><span class="line">    <span class="keyword">private</span> String skuName;</span><br><span class="line">    <span class="keyword">private</span> BigDecimal price;</span><br><span class="line">    <span class="keyword">private</span> String skuTitle;</span><br><span class="line">    <span class="keyword">private</span> String skuSubtitle;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Images&gt; images;</span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; descar;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> fullCount;</span><br><span class="line">    <span class="keyword">private</span> BigDecimal discount;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> countStatus;</span><br><span class="line">    <span class="keyword">private</span> BigDecimal fullPrice;</span><br><span class="line">    <span class="keyword">private</span> BigDecimal reducePrice;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> priceStatus;</span><br><span class="line">    <span class="keyword">private</span> List&lt;MemberPrice&gt; memberPrice;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpuSaveVo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String spuName;</span><br><span class="line">    <span class="keyword">private</span> String spuDescription;</span><br><span class="line">    <span class="keyword">private</span> Long catalogId;</span><br><span class="line">    <span class="keyword">private</span> Long brandId;</span><br><span class="line">    <span class="keyword">private</span> BigDecimal weight;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> publishStatus;</span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; decript;</span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; images;</span><br><span class="line">    <span class="keyword">private</span> Bounds bounds;</span><br><span class="line">    <span class="keyword">private</span> List&lt;BaseAttrs&gt; baseAttrs;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Skus&gt; skus;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="商品新增业务流程分析"><a href="#商品新增业务流程分析" class="headerlink" title="商品新增业务流程分析"></a>商品新增业务流程分析</h4><p>SpuInfoServiceImpl 下增加预备方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveSpuInfo</span><span class="params">(SpuSaveVo vo)</span> &#123;</span><br><span class="line">    <span class="comment">//1、保存spu基本信息 pms_spu_info</span></span><br><span class="line">    <span class="comment">//2、保存Spu的描述图片 pms_spu_info_desc</span></span><br><span class="line">    <span class="comment">//3、保存spu的图片集 pms_spu_images</span></span><br><span class="line">    <span class="comment">//4、保存spu的规格参数;pms_product_attr_value</span></span><br><span class="line">    <span class="comment">//5、保存spu的积分信息；supermall_sms-&gt;sms_spu_bounds</span></span><br><span class="line">    <span class="comment">//5、保存当前spu对应的所有sku信息；</span></span><br><span class="line">    <span class="comment">//5.1）、sku的基本信息；pms_sku_info</span></span><br><span class="line">    <span class="comment">//5.2）、sku的图片信息；pms_sku_image</span></span><br><span class="line">    <span class="comment">//5.3）、sku的销售属性信息：pms_sku_sale_attr_value</span></span><br><span class="line">    <span class="comment">// //5.4）、sku的优惠、满减等信息；supermall_sms-&gt;sms_sku_ladder\sms_sku_full_reduction\sms_member_price</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>SpuInfoController</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/save&quot;)</span></span><br><span class="line">    <span class="comment">//@RequiresPermissions(&quot;product:spuinfo:save&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">save</span><span class="params">(<span class="meta">@RequestBody</span> SpuSaveVo vo)</span>&#123;</span><br><span class="line">        spuInfoService.saveSpuInfo(vo);</span><br><span class="line">        <span class="keyword">return</span> R.ok();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h4 id="保存SPU基本信息"><a href="#保存SPU基本信息" class="headerlink" title="保存SPU基本信息"></a>保存SPU基本信息</h4><p>新增修改 SpuInfoServiceImpl </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">SpuInfoDescService spuInfoDescService;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">SpuImagesService imagesService;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">AttrService attrService;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">ProductAttrValueService attrValueService;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Transactional(rollbackFor = Exception.class)</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveSpuInfo</span><span class="params">(SpuSaveVo vo)</span> &#123;</span><br><span class="line">    <span class="comment">//1、保存spu基本信息 pms_spu_info</span></span><br><span class="line">    <span class="type">SpuInfoEntity</span> <span class="variable">infoEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SpuInfoEntity</span>();</span><br><span class="line">    BeanUtils.copyProperties(vo,infoEntity);</span><br><span class="line">    infoEntity.setCreateTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">    infoEntity.setUpdateTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">    <span class="built_in">this</span>.saveBaseSpuInfo(infoEntity);</span><br><span class="line">    <span class="comment">//2、保存Spu的描述图片 pms_spu_info_desc</span></span><br><span class="line">    List&lt;String&gt; decript = vo.getDecript();</span><br><span class="line">    <span class="type">SpuInfoDescEntity</span> <span class="variable">descEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SpuInfoDescEntity</span>();</span><br><span class="line">    descEntity.setSpuId(infoEntity.getId());</span><br><span class="line">    descEntity.setDecript(String.join(<span class="string">&quot;,&quot;</span>,decript));</span><br><span class="line">    spuInfoDescService.saveSpuInfoDesc(descEntity);</span><br><span class="line">    <span class="comment">//3、保存spu的图片集 pms_spu_images</span></span><br><span class="line">    List&lt;String&gt; images = vo.getImages();</span><br><span class="line">    imagesService.saveImages(infoEntity.getId(),images);</span><br><span class="line">    <span class="comment">//4、保存spu的规格参数;pms_product_attr_value</span></span><br><span class="line">    List&lt;BaseAttrs&gt; baseAttrs = vo.getBaseAttrs();</span><br><span class="line">    List&lt;ProductAttrValueEntity&gt; collect = baseAttrs.stream().map(attr -&gt; &#123;</span><br><span class="line">        <span class="type">ProductAttrValueEntity</span> <span class="variable">valueEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ProductAttrValueEntity</span>();</span><br><span class="line">        valueEntity.setAttrId(attr.getAttrId());</span><br><span class="line">        <span class="type">AttrEntity</span> <span class="variable">id</span> <span class="operator">=</span> attrService.getById(attr.getAttrId());</span><br><span class="line">        valueEntity.setAttrName(id.getAttrName());</span><br><span class="line">        valueEntity.setAttrValue(attr.getAttrValues());</span><br><span class="line">        valueEntity.setQuickShow(attr.getShowDesc());</span><br><span class="line">        valueEntity.setSpuId(infoEntity.getId());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> valueEntity;</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line">    attrValueService.saveProductAttr(collect);</span><br><span class="line">    <span class="comment">//5、保存spu的积分信息；supermall_sms-&gt;sms_spu_bounds</span></span><br><span class="line">    <span class="comment">//5、保存当前spu对应的所有sku信息；</span></span><br><span class="line">    <span class="comment">//5.1）、sku的基本信息；pms_sku_info</span></span><br><span class="line">    <span class="comment">//5.2）、sku的图片信息；pms_sku_image</span></span><br><span class="line">    <span class="comment">//5.3）、sku的销售属性信息：pms_sku_sale_attr_value</span></span><br><span class="line">    <span class="comment">// //5.4）、sku的优惠、满减等信息；supermall_sms-&gt;sms_sku_ladder\sms_sku_full_reduction\sms_member_price</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveBaseSpuInfo</span><span class="params">(SpuInfoEntity infoEntity)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.baseMapper.insert(infoEntity);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p> SpuInfoDescServiceImpl</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveSpuInfoDesc</span><span class="params">(SpuInfoDescEntity descEntity)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.baseMapper.insert(descEntity);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>SpuImagesServiceImpl</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveImages</span><span class="params">(Long id, List&lt;String&gt; images)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (images == <span class="literal">null</span> || images.size() == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            List&lt;SpuImagesEntity&gt; collect = images.stream().map(img -&gt; &#123;</span><br><span class="line">                <span class="type">SpuImagesEntity</span> <span class="variable">spuImagesEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SpuImagesEntity</span>();</span><br><span class="line">                spuImagesEntity.setSpuId(id);</span><br><span class="line">                spuImagesEntity.setImgUrl(img);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> spuImagesEntity;</span><br><span class="line">            &#125;).collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">            <span class="built_in">this</span>.saveBatch(collect);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>ProductAttrValueServiceImpl</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveProductAttr</span><span class="params">(List&lt;ProductAttrValueEntity&gt; collect)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.saveBatch(collect);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="保存SKU基本信息"><a href="#保存SKU基本信息" class="headerlink" title="保存SKU基本信息"></a>保存SKU基本信息</h4><p>修改SpuInfoServiceImpl</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">SkuInfoService skuInfoService;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">SkuImagesService skuImagesService;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">SkuSaleAttrValueService skuSaleAttrValueService;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveSpuInfo</span><span class="params">(SpuSaveVo vo)</span> &#123;</span><br><span class="line">    <span class="comment">//1、保存spu基本信息 pms_spu_info</span></span><br><span class="line">    <span class="type">SpuInfoEntity</span> <span class="variable">infoEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SpuInfoEntity</span>();</span><br><span class="line">    BeanUtils.copyProperties(vo, infoEntity);</span><br><span class="line">    infoEntity.setCreateTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">    infoEntity.setUpdateTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">    <span class="built_in">this</span>.saveBaseSpuInfo(infoEntity);</span><br><span class="line">    <span class="comment">//2、保存Spu的描述图片 pms_spu_info_desc</span></span><br><span class="line">    List&lt;String&gt; decript = vo.getDecript();</span><br><span class="line">    <span class="type">SpuInfoDescEntity</span> <span class="variable">descEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SpuInfoDescEntity</span>();</span><br><span class="line">    descEntity.setSpuId(infoEntity.getId());</span><br><span class="line">    descEntity.setDecript(String.join(<span class="string">&quot;,&quot;</span>, decript));</span><br><span class="line">    spuInfoDescService.saveSpuInfoDesc(descEntity);</span><br><span class="line">    <span class="comment">//3、保存spu的图片集 pms_spu_images</span></span><br><span class="line">    List&lt;String&gt; images = vo.getImages();</span><br><span class="line">    imagesService.saveImages(infoEntity.getId(), images);</span><br><span class="line">    <span class="comment">//4、保存spu的规格参数;pms_product_attr_value</span></span><br><span class="line">    List&lt;BaseAttrs&gt; baseAttrs = vo.getBaseAttrs();</span><br><span class="line">    List&lt;ProductAttrValueEntity&gt; collect = baseAttrs.stream().map(attr -&gt; &#123;</span><br><span class="line">        <span class="type">ProductAttrValueEntity</span> <span class="variable">valueEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ProductAttrValueEntity</span>();</span><br><span class="line">        valueEntity.setAttrId(attr.getAttrId());</span><br><span class="line">        <span class="type">AttrEntity</span> <span class="variable">id</span> <span class="operator">=</span> attrService.getById(attr.getAttrId());</span><br><span class="line">        valueEntity.setAttrName(id.getAttrName());</span><br><span class="line">        valueEntity.setAttrValue(attr.getAttrValues());</span><br><span class="line">        valueEntity.setQuickShow(attr.getShowDesc());</span><br><span class="line">        valueEntity.setSpuId(infoEntity.getId());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> valueEntity;</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line">    attrValueService.saveProductAttr(collect);</span><br><span class="line">    <span class="comment">//5、保存spu的积分信息；supermall_sms-&gt;sms_spu_bounds</span></span><br><span class="line">    <span class="comment">// todo</span></span><br><span class="line">    <span class="comment">//5、保存当前spu对应的所有sku信息；</span></span><br><span class="line">    List&lt;Skus&gt; skus = vo.getSkus();</span><br><span class="line">    <span class="keyword">if</span> (skus != <span class="literal">null</span> &amp;&amp; skus.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        skus.forEach(item -&gt; &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">defaultImg</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">for</span> (Images image : item.getImages()) &#123;</span><br><span class="line">                <span class="keyword">if</span> (image.getDefaultImg() == <span class="number">1</span>) &#123;</span><br><span class="line">                    defaultImg = image.getImgUrl();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//    private String skuName;</span></span><br><span class="line">            <span class="comment">//    private BigDecimal price;</span></span><br><span class="line">            <span class="comment">//    private String skuTitle;</span></span><br><span class="line">            <span class="comment">//    private String skuSubtitle;</span></span><br><span class="line">            <span class="type">SkuInfoEntity</span> <span class="variable">skuInfoEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SkuInfoEntity</span>();</span><br><span class="line">            BeanUtils.copyProperties(item, skuInfoEntity);</span><br><span class="line">            skuInfoEntity.setBrandId(infoEntity.getBrandId());</span><br><span class="line">            skuInfoEntity.setCatalogId(infoEntity.getCatalogId());</span><br><span class="line">            skuInfoEntity.setSaleCount(<span class="number">0L</span>);</span><br><span class="line">            skuInfoEntity.setSpuId(infoEntity.getId());</span><br><span class="line">            skuInfoEntity.setSkuDefaultImg(defaultImg);</span><br><span class="line">            <span class="comment">//5.1）、sku的基本信息；pms_sku_info</span></span><br><span class="line">            skuInfoService.saveSkuInfo(skuInfoEntity);</span><br><span class="line">            <span class="type">Long</span> <span class="variable">skuId</span> <span class="operator">=</span> skuInfoEntity.getSkuId();</span><br><span class="line">            List&lt;SkuImagesEntity&gt; imagesEntities = item.getImages().stream().map(img -&gt; &#123;</span><br><span class="line">                <span class="type">SkuImagesEntity</span> <span class="variable">skuImagesEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SkuImagesEntity</span>();</span><br><span class="line">                skuImagesEntity.setSkuId(skuId);</span><br><span class="line">                skuImagesEntity.setImgUrl(img.getImgUrl());</span><br><span class="line">                skuImagesEntity.setDefaultImg(img.getDefaultImg());</span><br><span class="line">                <span class="keyword">return</span> skuImagesEntity;</span><br><span class="line">            &#125;).filter(entity-&gt;&#123;</span><br><span class="line">                <span class="comment">//返回true就是需要，false就是剔除</span></span><br><span class="line">                <span class="keyword">return</span> !StringUtils.isEmpty(entity.getImgUrl());</span><br><span class="line">            &#125;).collect(Collectors.toList());</span><br><span class="line">            <span class="comment">//5.2）、sku的图片信息；pms_sku_image</span></span><br><span class="line">            skuImagesService.saveBatch(imagesEntities);</span><br><span class="line">            <span class="comment">//没有图片路径的无需保存</span></span><br><span class="line">            List&lt;Attr&gt; attr = item.getAttr();</span><br><span class="line">            List&lt;SkuSaleAttrValueEntity&gt; skuSaleAttrValueEntities = attr.stream().map(a -&gt; &#123;</span><br><span class="line">                <span class="type">SkuSaleAttrValueEntity</span> <span class="variable">attrValueEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SkuSaleAttrValueEntity</span>();</span><br><span class="line">                BeanUtils.copyProperties(a, attrValueEntity);</span><br><span class="line">                attrValueEntity.setSkuId(skuId);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> attrValueEntity;</span><br><span class="line">            &#125;).collect(Collectors.toList());</span><br><span class="line">            <span class="comment">//5.3）、sku的销售属性信息：pms_sku_sale_attr_value</span></span><br><span class="line">            skuSaleAttrValueService.saveBatch(skuSaleAttrValueEntities);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//5.4）、sku的优惠、满减等信息；supermall_sms-&gt;sms_sku_ladder\sms_sku_full_reduction\sms_member_price</span></span><br><span class="line">    <span class="comment">//todo</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>SkuInfoServiceImpl</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveSkuInfo</span><span class="params">(SkuInfoEntity skuInfoEntity)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.baseMapper.insert(skuInfoEntity);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="调用远程服务保存优惠等信息"><a href="#调用远程服务保存优惠等信息" class="headerlink" title="调用远程服务保存优惠等信息"></a>调用远程服务保存优惠等信息</h4><p>1.product模块的处理</p>
<p>1.1 在product模块下创建feign包，新建一个CouponFeignService远程调用接口：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@FeignClient(&quot;supermall-coupon&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">CouponFeignService</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 1、CouponFeignService.saveSpuBounds(spuBoundTo);</span></span><br><span class="line"><span class="comment">     *      1）、<span class="doctag">@RequestBody</span>将这个对象转为json。</span></span><br><span class="line"><span class="comment">     *      2）、找到gulimall-coupon服务，给/coupon/spubounds/save发送请求。</span></span><br><span class="line"><span class="comment">     *          将上一步转的json放在请求体位置，发送请求；</span></span><br><span class="line"><span class="comment">     *      3）、对方服务收到请求。请求体里有json数据。</span></span><br><span class="line"><span class="comment">     *          (<span class="doctag">@RequestBody</span> SpuBoundsEntity spuBounds)；将请求体的json转为SpuBoundsEntity；</span></span><br><span class="line"><span class="comment">     * 只要json数据模型是兼容的。双方服务无需使用同一个to</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> spuBoundTo</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/coupon/spubounds/save&quot;)</span></span><br><span class="line">    R <span class="title function_">saveSpuBounds</span><span class="params">(<span class="meta">@RequestBody</span> SpuBoundTo spuBoundTo)</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/coupon/skufullreduction/saveinfo&quot;)</span></span><br><span class="line">    R <span class="title function_">saveSkuReduction</span><span class="params">(<span class="meta">@RequestBody</span> SkuReductionTo skuReductionTo)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>1.2 在common模块新建一个to包，在该包下新建涉及的TO类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpuBoundTo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Long spuId;</span><br><span class="line">    <span class="keyword">private</span> BigDecimal buyBounds;</span><br><span class="line">    <span class="keyword">private</span> BigDecimal growBounds;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SkuReductionTo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Long skuId;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> fullCount;</span><br><span class="line">    <span class="keyword">private</span> BigDecimal discount;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> countStatus;</span><br><span class="line">    <span class="keyword">private</span> BigDecimal fullPrice;</span><br><span class="line">    <span class="keyword">private</span> BigDecimal reducePrice;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> priceStatus;</span><br><span class="line">    <span class="keyword">private</span> List&lt;MemberPrice&gt; memberPrice;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MemberPrice</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> BigDecimal price;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>1.3 修改SpuInfoServiceImpl</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">CouponFeignService couponFeignService;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveSpuInfo</span><span class="params">(SpuSaveVo vo)</span> &#123;</span><br><span class="line">    <span class="comment">//1、保存spu基本信息 pms_spu_info</span></span><br><span class="line">    <span class="type">SpuInfoEntity</span> <span class="variable">infoEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SpuInfoEntity</span>();</span><br><span class="line">    BeanUtils.copyProperties(vo, infoEntity);</span><br><span class="line">    infoEntity.setCreateTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">    infoEntity.setUpdateTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">    <span class="built_in">this</span>.saveBaseSpuInfo(infoEntity);</span><br><span class="line">    <span class="comment">//2、保存Spu的描述图片 pms_spu_info_desc</span></span><br><span class="line">    List&lt;String&gt; decript = vo.getDecript();</span><br><span class="line">    <span class="type">SpuInfoDescEntity</span> <span class="variable">descEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SpuInfoDescEntity</span>();</span><br><span class="line">    descEntity.setSpuId(infoEntity.getId());</span><br><span class="line">    descEntity.setDecript(String.join(<span class="string">&quot;,&quot;</span>, decript));</span><br><span class="line">    spuInfoDescService.saveSpuInfoDesc(descEntity);</span><br><span class="line">    <span class="comment">//3、保存spu的图片集 pms_spu_images</span></span><br><span class="line">    List&lt;String&gt; images = vo.getImages();</span><br><span class="line">    imagesService.saveImages(infoEntity.getId(), images);</span><br><span class="line">    <span class="comment">//4、保存spu的规格参数;pms_product_attr_value</span></span><br><span class="line">    List&lt;BaseAttrs&gt; baseAttrs = vo.getBaseAttrs();</span><br><span class="line">    List&lt;ProductAttrValueEntity&gt; collect = baseAttrs.stream().map(attr -&gt; &#123;</span><br><span class="line">        <span class="type">ProductAttrValueEntity</span> <span class="variable">valueEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ProductAttrValueEntity</span>();</span><br><span class="line">        valueEntity.setAttrId(attr.getAttrId());</span><br><span class="line">        <span class="type">AttrEntity</span> <span class="variable">id</span> <span class="operator">=</span> attrService.getById(attr.getAttrId());</span><br><span class="line">        valueEntity.setAttrName(id.getAttrName());</span><br><span class="line">        valueEntity.setAttrValue(attr.getAttrValues());</span><br><span class="line">        valueEntity.setQuickShow(attr.getShowDesc());</span><br><span class="line">        valueEntity.setSpuId(infoEntity.getId());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> valueEntity;</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line">    attrValueService.saveProductAttr(collect);</span><br><span class="line">    <span class="comment">//5、保存spu的积分信息；supermall_sms-&gt;sms_spu_bounds</span></span><br><span class="line">    <span class="type">Bounds</span> <span class="variable">bounds</span> <span class="operator">=</span> vo.getBounds();</span><br><span class="line">    <span class="type">SpuBoundTo</span> <span class="variable">spuBoundTo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SpuBoundTo</span>();</span><br><span class="line">    BeanUtils.copyProperties(bounds,spuBoundTo);</span><br><span class="line">    spuBoundTo.setSpuId(infoEntity.getId());</span><br><span class="line">    <span class="type">R</span> <span class="variable">r</span> <span class="operator">=</span> couponFeignService.saveSpuBounds(spuBoundTo);</span><br><span class="line">    <span class="keyword">if</span>(r.getCode() != <span class="number">0</span>)&#123;</span><br><span class="line">        log.error(<span class="string">&quot;远程保存spu积分信息失败&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//5、保存当前spu对应的所有sku信息；</span></span><br><span class="line">    List&lt;Skus&gt; skus = vo.getSkus();</span><br><span class="line">    <span class="keyword">if</span> (skus != <span class="literal">null</span> &amp;&amp; skus.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        skus.forEach(item -&gt; &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">defaultImg</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">for</span> (Images image : item.getImages()) &#123;</span><br><span class="line">                <span class="keyword">if</span> (image.getDefaultImg() == <span class="number">1</span>) &#123;</span><br><span class="line">                    defaultImg = image.getImgUrl();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//    private String skuName;</span></span><br><span class="line">            <span class="comment">//    private BigDecimal price;</span></span><br><span class="line">            <span class="comment">//    private String skuTitle;</span></span><br><span class="line">            <span class="comment">//    private String skuSubtitle;</span></span><br><span class="line">            <span class="type">SkuInfoEntity</span> <span class="variable">skuInfoEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SkuInfoEntity</span>();</span><br><span class="line">            BeanUtils.copyProperties(item, skuInfoEntity);</span><br><span class="line">            skuInfoEntity.setBrandId(infoEntity.getBrandId());</span><br><span class="line">            skuInfoEntity.setCatalogId(infoEntity.getCatalogId());</span><br><span class="line">            skuInfoEntity.setSaleCount(<span class="number">0L</span>);</span><br><span class="line">            skuInfoEntity.setSpuId(infoEntity.getId());</span><br><span class="line">            skuInfoEntity.setSkuDefaultImg(defaultImg);</span><br><span class="line">            <span class="comment">//5.1）、sku的基本信息；pms_sku_info</span></span><br><span class="line">            skuInfoService.saveSkuInfo(skuInfoEntity);</span><br><span class="line">            <span class="type">Long</span> <span class="variable">skuId</span> <span class="operator">=</span> skuInfoEntity.getSkuId();</span><br><span class="line">            List&lt;SkuImagesEntity&gt; imagesEntities = item.getImages().stream().map(img -&gt; &#123;</span><br><span class="line">                <span class="type">SkuImagesEntity</span> <span class="variable">skuImagesEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SkuImagesEntity</span>();</span><br><span class="line">                skuImagesEntity.setSkuId(skuId);</span><br><span class="line">                skuImagesEntity.setImgUrl(img.getImgUrl());</span><br><span class="line">                skuImagesEntity.setDefaultImg(img.getDefaultImg());</span><br><span class="line">                <span class="keyword">return</span> skuImagesEntity;</span><br><span class="line">            &#125;).filter(entity-&gt;&#123;</span><br><span class="line">                <span class="comment">//返回true就是需要，false就是剔除</span></span><br><span class="line">                <span class="keyword">return</span> !StringUtils.isEmpty(entity.getImgUrl());</span><br><span class="line">            &#125;).collect(Collectors.toList());</span><br><span class="line">            <span class="comment">//5.2）、sku的图片信息；pms_sku_image</span></span><br><span class="line">            skuImagesService.saveBatch(imagesEntities);</span><br><span class="line">            <span class="comment">//没有图片路径的无需保存</span></span><br><span class="line">            List&lt;Attr&gt; attr = item.getAttr();</span><br><span class="line">            List&lt;SkuSaleAttrValueEntity&gt; skuSaleAttrValueEntities = attr.stream().map(a -&gt; &#123;</span><br><span class="line">                <span class="type">SkuSaleAttrValueEntity</span> <span class="variable">attrValueEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SkuSaleAttrValueEntity</span>();</span><br><span class="line">                BeanUtils.copyProperties(a, attrValueEntity);</span><br><span class="line">                attrValueEntity.setSkuId(skuId);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> attrValueEntity;</span><br><span class="line">            &#125;).collect(Collectors.toList());</span><br><span class="line">            <span class="comment">//5.3）、sku的销售属性信息：pms_sku_sale_attr_value</span></span><br><span class="line">            skuSaleAttrValueService.saveBatch(skuSaleAttrValueEntities);</span><br><span class="line">            <span class="type">SkuReductionTo</span> <span class="variable">skuReductionTo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SkuReductionTo</span>();</span><br><span class="line">            BeanUtils.copyProperties(item,skuReductionTo);</span><br><span class="line">            skuReductionTo.setSkuId(skuId);</span><br><span class="line">            <span class="keyword">if</span>(skuReductionTo.getFullCount() &gt;<span class="number">0</span> || skuReductionTo.getFullPrice().compareTo(<span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="string">&quot;0&quot;</span>)) == <span class="number">1</span>)&#123;</span><br><span class="line">                <span class="type">R</span> <span class="variable">r1</span> <span class="operator">=</span> couponFeignService.saveSkuReduction(skuReductionTo);</span><br><span class="line">                <span class="keyword">if</span>(r1.getCode() != <span class="number">0</span>)&#123;</span><br><span class="line">                    log.error(<span class="string">&quot;远程保存sku优惠信息失败&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>1.4 在启动类加入@EnableFeignClients(basePackages &#x3D; “com.centersept.supermall.product.feign”)注解，开启远程调用功能。</p>
<p>2.处理coupon模块</p>
<p>2.1 在nacos上配置Coupon模块的配置文件，Coupon模块引入nacos的配置</p>
<p>2.2 修改SpuBoundsController 方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/save&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">save</span><span class="params">(<span class="meta">@RequestBody</span> SpuBoundsEntity spuBounds)</span>&#123;</span><br><span class="line">		spuBoundsService.save(spuBounds);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> R.ok();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>2.3 新增 SkuFullReductionController 和 SkuFullReductionServiceImpl 的方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/saveinfo&quot;)</span></span><br><span class="line">   <span class="keyword">public</span> R <span class="title function_">saveInfo</span><span class="params">(<span class="meta">@RequestBody</span> SkuReductionTo reductionTo)</span>&#123;</span><br><span class="line"></span><br><span class="line">       skuFullReductionService.saveSkuReduction(reductionTo);</span><br><span class="line">       <span class="keyword">return</span> R.ok();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">SkuLadderService skuLadderService;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">MemberPriceService memberPriceService;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveSkuReduction</span><span class="params">(SkuReductionTo reductionTo)</span> &#123;</span><br><span class="line">    <span class="comment">//1、// //5.4）、sku的优惠、满减等信息；gulimall_sms-&gt;sms_sku_ladder\sms_sku_full_reduction\sms_member_price</span></span><br><span class="line">    <span class="comment">//sms_sku_ladder</span></span><br><span class="line">    <span class="type">SkuLadderEntity</span> <span class="variable">skuLadderEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SkuLadderEntity</span>();</span><br><span class="line">    skuLadderEntity.setSkuId(reductionTo.getSkuId());</span><br><span class="line">    skuLadderEntity.setFullCount(reductionTo.getFullCount());</span><br><span class="line">    skuLadderEntity.setDiscount(reductionTo.getDiscount());</span><br><span class="line">    skuLadderEntity.setAddOther(reductionTo.getCountStatus());</span><br><span class="line">    <span class="keyword">if</span>(reductionTo.getFullCount() &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        skuLadderService.save(skuLadderEntity);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2、sms_sku_full_reduction</span></span><br><span class="line">    <span class="type">SkuFullReductionEntity</span> <span class="variable">reductionEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SkuFullReductionEntity</span>();</span><br><span class="line">    BeanUtils.copyProperties(reductionTo,reductionEntity);</span><br><span class="line">    <span class="keyword">if</span>(reductionEntity.getFullPrice().compareTo(<span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="string">&quot;0&quot;</span>))==<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="built_in">this</span>.save(reductionEntity);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3、sms_member_price</span></span><br><span class="line">    List&lt;MemberPrice&gt; memberPrice = reductionTo.getMemberPrice();</span><br><span class="line"></span><br><span class="line">    List&lt;MemberPriceEntity&gt; collect = memberPrice.stream().map(item -&gt; &#123;</span><br><span class="line">        <span class="type">MemberPriceEntity</span> <span class="variable">priceEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MemberPriceEntity</span>();</span><br><span class="line">        priceEntity.setSkuId(reductionTo.getSkuId());</span><br><span class="line">        priceEntity.setMemberLevelId(item.getId());</span><br><span class="line">        priceEntity.setMemberLevelName(item.getName());</span><br><span class="line">        priceEntity.setMemberPrice(item.getPrice());</span><br><span class="line">        priceEntity.setAddOther(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> priceEntity;</span><br><span class="line">    &#125;).filter(item-&gt;&#123;</span><br><span class="line">        <span class="keyword">return</span> item.getMemberPrice().compareTo(<span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="string">&quot;0&quot;</span>)) == <span class="number">1</span>;</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">    memberPriceService.saveBatch(collect);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="商品保存debug完成"><a href="#商品保存debug完成" class="headerlink" title="商品保存debug完成"></a>商品保存debug完成</h4><ol>
<li>使用Idea一键启动全部项目</li>
</ol>
<p>1.1 打开 Edit Configuration… ，点击加号，选择Compound </p>
<p>1.2 在右边的界面点击加号添加需要运行的Application类</p>
<ol start="2">
<li>由于库表的id非自增的，修改 SpuInfoDescEntity 实体类 id 注解为 @TableId(type &#x3D; IdType.INPUT)</li>
</ol>
<h4 id="商品保存其他问题"><a href="#商品保存其他问题" class="headerlink" title="商品保存其他问题"></a>商品保存其他问题</h4><p>1.空图片的数据不需要保存到库中，需要做过滤</p>
<p>2.还有满减和折扣没有设置的，也需要过滤保存</p>
<p>3.还有会员价格。</p>
<h3 id="商品管理"><a href="#商品管理" class="headerlink" title="商品管理"></a>商品管理</h3><h4 id="SPU检索"><a href="#SPU检索" class="headerlink" title="SPU检索"></a>SPU检索</h4><p>1.SPU管理界面查询接口</p>
<p>SpuInfoController </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 列表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/list&quot;)</span></span><br><span class="line">    <span class="comment">//@RequiresPermissions(&quot;product:spuinfo:list&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">list</span><span class="params">(<span class="meta">@RequestParam</span> Map&lt;String, Object&gt; params)</span>&#123;</span><br><span class="line">        <span class="type">PageUtils</span> <span class="variable">page</span> <span class="operator">=</span> spuInfoService.queryPageByCondition(params);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> R.ok().put(<span class="string">&quot;page&quot;</span>, page);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>SpuInfoServiceImpl</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> PageUtils <span class="title function_">queryPageByCondition</span><span class="params">(Map&lt;String, Object&gt; params)</span> &#123;</span><br><span class="line"></span><br><span class="line">        QueryWrapper&lt;SpuInfoEntity&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> (String) params.get(<span class="string">&quot;key&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.isEmpty(key)) &#123;</span><br><span class="line">            wrapper.and((w) -&gt; &#123;</span><br><span class="line">                w.eq(<span class="string">&quot;id&quot;</span>, key).or().like(<span class="string">&quot;spu_name&quot;</span>, key);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// status=1 and (id=1 or spu_name like xxx)</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">status</span> <span class="operator">=</span> (String) params.get(<span class="string">&quot;status&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.isEmpty(status)) &#123;</span><br><span class="line">            wrapper.eq(<span class="string">&quot;publish_status&quot;</span>, status);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">brandId</span> <span class="operator">=</span> (String) params.get(<span class="string">&quot;brandId&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.isEmpty(brandId) &amp;&amp; !<span class="string">&quot;0&quot;</span>.equalsIgnoreCase(brandId)) &#123;</span><br><span class="line">            wrapper.eq(<span class="string">&quot;brand_id&quot;</span>, brandId);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">catelogId</span> <span class="operator">=</span> (String) params.get(<span class="string">&quot;catelogId&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.isEmpty(catelogId) &amp;&amp; !<span class="string">&quot;0&quot;</span>.equalsIgnoreCase(catelogId)) &#123;</span><br><span class="line">            wrapper.eq(<span class="string">&quot;catalog_id&quot;</span>, catelogId);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * status: 2</span></span><br><span class="line"><span class="comment">         * key:</span></span><br><span class="line"><span class="comment">         * brandId: 9</span></span><br><span class="line"><span class="comment">         * catelogId: 225</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        IPage&lt;SpuInfoEntity&gt; page = <span class="built_in">this</span>.page(</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Query</span>&lt;SpuInfoEntity&gt;().getPage(params),</span><br><span class="line">                wrapper</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">PageUtils</span>(page);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>2.时间格式化，在application.yml 加入以下配置：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">jackson:</span></span><br><span class="line">    <span class="attr">date-format:</span> <span class="string">yyyy-MM-dd</span> <span class="string">HH:mm:ss</span></span><br></pre></td></tr></table></figure>

<h4 id="SKU检索"><a href="#SKU检索" class="headerlink" title="SKU检索"></a>SKU检索</h4><p>1.SKU管理界面查询</p>
<p>SkuInfoController</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 列表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/list&quot;)</span></span><br><span class="line"><span class="comment">//@RequiresPermissions(&quot;product:skuinfo:list&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">list</span><span class="params">(<span class="meta">@RequestParam</span> Map&lt;String, Object&gt; params)</span>&#123;</span><br><span class="line">    <span class="type">PageUtils</span> <span class="variable">page</span> <span class="operator">=</span> skuInfoService.queryPageByCondition(params);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> R.ok().put(<span class="string">&quot;page&quot;</span>, page);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>SkuInfoServiceImpl</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> PageUtils <span class="title function_">queryPageByCondition</span><span class="params">(Map&lt;String, Object&gt; params)</span> &#123;</span><br><span class="line">    QueryWrapper&lt;SkuInfoEntity&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * key:</span></span><br><span class="line"><span class="comment">     * catelogId: 0</span></span><br><span class="line"><span class="comment">     * brandId: 0</span></span><br><span class="line"><span class="comment">     * min: 0</span></span><br><span class="line"><span class="comment">     * max: 0</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> (String) params.get(<span class="string">&quot;key&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(!StringUtils.isEmpty(key))&#123;</span><br><span class="line">        queryWrapper.and((wrapper)-&gt;&#123;</span><br><span class="line">            wrapper.eq(<span class="string">&quot;sku_id&quot;</span>,key).or().like(<span class="string">&quot;sku_name&quot;</span>,key);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">String</span> <span class="variable">catelogId</span> <span class="operator">=</span> (String) params.get(<span class="string">&quot;catelogId&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(!StringUtils.isEmpty(catelogId)&amp;&amp;!<span class="string">&quot;0&quot;</span>.equalsIgnoreCase(catelogId))&#123;</span><br><span class="line"></span><br><span class="line">        queryWrapper.eq(<span class="string">&quot;catalog_id&quot;</span>,catelogId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">String</span> <span class="variable">brandId</span> <span class="operator">=</span> (String) params.get(<span class="string">&quot;brandId&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(!StringUtils.isEmpty(brandId)&amp;&amp;!<span class="string">&quot;0&quot;</span>.equalsIgnoreCase(catelogId))&#123;</span><br><span class="line">        queryWrapper.eq(<span class="string">&quot;brand_id&quot;</span>,brandId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">String</span> <span class="variable">min</span> <span class="operator">=</span> (String) params.get(<span class="string">&quot;min&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(!StringUtils.isEmpty(min))&#123;</span><br><span class="line">        queryWrapper.ge(<span class="string">&quot;price&quot;</span>,min);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">String</span> <span class="variable">max</span> <span class="operator">=</span> (String) params.get(<span class="string">&quot;max&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!StringUtils.isEmpty(max)  )&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="type">BigDecimal</span> <span class="variable">bigDecimal</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(max);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(bigDecimal.compareTo(<span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="string">&quot;0&quot;</span>))==<span class="number">1</span>)&#123;</span><br><span class="line">                queryWrapper.le(<span class="string">&quot;price&quot;</span>,max);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    IPage&lt;SkuInfoEntity&gt; page = <span class="built_in">this</span>.page(</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Query</span>&lt;SkuInfoEntity&gt;().getPage(params),</span><br><span class="line">            queryWrapper</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">PageUtils</span>(page);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="SPU规格维护"><a href="#SPU规格维护" class="headerlink" title="SPU规格维护"></a>SPU规格维护</h4><p>1.获取SPU规格接口编写</p>
<p>1.1 编写&#x2F;product&#x2F;attr&#x2F;base&#x2F;listforspu&#x2F;{spuId} </p>
<p>AttrController </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">ProductAttrValueService productAttrValueService;</span><br><span class="line"></span><br><span class="line"><span class="meta">@GetMapping(&quot;/base/listforspu/&#123;spuId&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">baseAttrlistforspu</span><span class="params">(<span class="meta">@PathVariable(&quot;spuId&quot;)</span> Long spuId)</span>&#123;</span><br><span class="line">    List&lt;ProductAttrValueEntity&gt; entities = productAttrValueService.baseAttrlistforspu(spuId);</span><br><span class="line">    <span class="keyword">return</span> R.ok().put(<span class="string">&quot;data&quot;</span>,entities);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>ProductAttrValueServiceImpl</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> List&lt;ProductAttrValueEntity&gt; <span class="title function_">baseAttrlistforspu</span><span class="params">(Long spuId)</span> &#123;</span><br><span class="line">        List&lt;ProductAttrValueEntity&gt; entities = <span class="built_in">this</span>.baseMapper.selectList(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;ProductAttrValueEntity&gt;().eq(<span class="string">&quot;spu_id&quot;</span>, spuId));</span><br><span class="line">        <span class="keyword">return</span> entities;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>2.修改商品规格</p>
<p>2.1 编写 &#x2F;product&#x2F;attr&#x2F;update&#x2F;{spuId} 接口</p>
<p>AttrController</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/update/&#123;spuId&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">updateSpuAttr</span><span class="params">(<span class="meta">@PathVariable(&quot;spuId&quot;)</span> Long spuId,</span></span><br><span class="line"><span class="params">                       <span class="meta">@RequestBody</span> List&lt;ProductAttrValueEntity&gt; entities)</span> &#123;</span><br><span class="line">    productAttrValueService.updateSpuAttr(spuId, entities);</span><br><span class="line">    <span class="keyword">return</span> R.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>ProductAttrValueServiceImpl</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Transactional(rollbackFor = RuntimeException.class)</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateSpuAttr</span><span class="params">(Long spuId, List&lt;ProductAttrValueEntity&gt; entities)</span> &#123;</span><br><span class="line">    <span class="comment">//1、删除这个spuId之前对应的所有属性</span></span><br><span class="line">    <span class="built_in">this</span>.baseMapper.delete(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;ProductAttrValueEntity&gt;().eq(<span class="string">&quot;spu_id&quot;</span>, spuId));</span><br><span class="line"></span><br><span class="line">    List&lt;ProductAttrValueEntity&gt; collect = entities.stream().map(item -&gt; &#123;</span><br><span class="line">        item.setSpuId(spuId);</span><br><span class="line">        <span class="keyword">return</span> item;</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line">    <span class="built_in">this</span>.saveBatch(collect);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h2 id="仓储服务"><a href="#仓储服务" class="headerlink" title="仓储服务"></a>仓储服务</h2><h3 id="仓库管理"><a href="#仓库管理" class="headerlink" title="仓库管理"></a>仓库管理</h3><h4 id="整合ware服务-amp-获取仓库列表"><a href="#整合ware服务-amp-获取仓库列表" class="headerlink" title="整合ware服务&amp;获取仓库列表"></a>整合ware服务&amp;获取仓库列表</h4><p>1.仓库管理页面查询</p>
<p>WareInfoServiceImpl</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> PageUtils <span class="title function_">queryPage</span><span class="params">(Map&lt;String, Object&gt; params)</span> &#123;</span><br><span class="line"></span><br><span class="line">        QueryWrapper&lt;WareInfoEntity&gt; wareInfoEntityQueryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">        <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> (String) params.get(<span class="string">&quot;key&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.isEmpty(key)) &#123;</span><br><span class="line">            wareInfoEntityQueryWrapper.eq(<span class="string">&quot;id&quot;</span>, key).or()</span><br><span class="line">                    .like(<span class="string">&quot;name&quot;</span>, key)</span><br><span class="line">                    .or().like(<span class="string">&quot;address&quot;</span>, key)</span><br><span class="line">                    .or().like(<span class="string">&quot;areacode&quot;</span>, key);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        IPage&lt;WareInfoEntity&gt; page = <span class="built_in">this</span>.page(</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Query</span>&lt;WareInfoEntity&gt;().getPage(params),</span><br><span class="line">                wareInfoEntityQueryWrapper</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">PageUtils</span>(page);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h4 id="查询库存-amp-创建采购需求"><a href="#查询库存-amp-创建采购需求" class="headerlink" title="查询库存&amp;创建采购需求"></a>查询库存&amp;创建采购需求</h4><p>1.商品库存管理页面查询接口</p>
<p>修改 WareSkuServiceImpl 查询接口</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> PageUtils <span class="title function_">queryPage</span><span class="params">(Map&lt;String, Object&gt; params)</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * skuId: 1</span></span><br><span class="line"><span class="comment">     * wareId: 2</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    QueryWrapper&lt;WareSkuEntity&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    <span class="type">String</span> <span class="variable">skuId</span> <span class="operator">=</span> (String) params.get(<span class="string">&quot;skuId&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(!StringUtils.isEmpty(skuId))&#123;</span><br><span class="line">        queryWrapper.eq(<span class="string">&quot;sku_id&quot;</span>,skuId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">String</span> <span class="variable">wareId</span> <span class="operator">=</span> (String) params.get(<span class="string">&quot;wareId&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(!StringUtils.isEmpty(wareId))&#123;</span><br><span class="line">        queryWrapper.eq(<span class="string">&quot;ware_id&quot;</span>,wareId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    IPage&lt;WareSkuEntity&gt; page = <span class="built_in">this</span>.page(</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Query</span>&lt;WareSkuEntity&gt;().getPage(params),</span><br><span class="line">            queryWrapper</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">PageUtils</span>(page);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2.采购需求管理页面查询接口</p>
<p>修改 PurchaseDetailServiceImpl 查询方法 </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> PageUtils <span class="title function_">queryPage</span><span class="params">(Map&lt;String, Object&gt; params)</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * status: 0,//状态</span></span><br><span class="line"><span class="comment">     *    wareId: 1,//仓库id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    QueryWrapper&lt;PurchaseDetailEntity&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;PurchaseDetailEntity&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> (String) params.get(<span class="string">&quot;key&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(!StringUtils.isEmpty(key))&#123;</span><br><span class="line">        <span class="comment">//purchase_id  sku_id</span></span><br><span class="line">        queryWrapper.and(w-&gt;&#123;</span><br><span class="line">            w.eq(<span class="string">&quot;purchase_id&quot;</span>,key).or().eq(<span class="string">&quot;sku_id&quot;</span>,key);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">String</span> <span class="variable">status</span> <span class="operator">=</span> (String) params.get(<span class="string">&quot;status&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(!StringUtils.isEmpty(status))&#123;</span><br><span class="line">        <span class="comment">//purchase_id  sku_id</span></span><br><span class="line">        queryWrapper.eq(<span class="string">&quot;status&quot;</span>,status);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">String</span> <span class="variable">wareId</span> <span class="operator">=</span> (String) params.get(<span class="string">&quot;wareId&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(!StringUtils.isEmpty(wareId))&#123;</span><br><span class="line">        <span class="comment">//purchase_id  sku_id</span></span><br><span class="line">        queryWrapper.eq(<span class="string">&quot;ware_id&quot;</span>,wareId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    IPage&lt;PurchaseDetailEntity&gt; page = <span class="built_in">this</span>.page(</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Query</span>&lt;PurchaseDetailEntity&gt;().getPage(params),</span><br><span class="line">            queryWrapper</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">PageUtils</span>(page);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="合并采购需求"><a href="#合并采购需求" class="headerlink" title="合并采购需求"></a>合并采购需求</h4><p>1.查询未领取得采购单</p>
<p>PurchaseController</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/unreceive/list&quot;)</span></span><br><span class="line"><span class="comment">//@RequiresPermissions(&quot;ware:purchase:list&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">unreceivelist</span><span class="params">(<span class="meta">@RequestParam</span> Map&lt;String, Object&gt; params)</span>&#123;</span><br><span class="line">    <span class="type">PageUtils</span> <span class="variable">page</span> <span class="operator">=</span> purchaseService.queryPageUnreceivePurchase(params);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> R.ok().put(<span class="string">&quot;page&quot;</span>, page);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>PurchaseServiceImpl</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> PageUtils <span class="title function_">queryPageUnreceivePurchase</span><span class="params">(Map&lt;String, Object&gt; params)</span> &#123;</span><br><span class="line">    IPage&lt;PurchaseEntity&gt; page = <span class="built_in">this</span>.page(</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Query</span>&lt;PurchaseEntity&gt;().getPage(params),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;PurchaseEntity&gt;().eq(<span class="string">&quot;status&quot;</span>,<span class="number">0</span>).or().eq(<span class="string">&quot;status&quot;</span>,<span class="number">1</span>)</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">PageUtils</span>(page);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>2.合并采购单</p>
<p>2.1 Common 模块创建Ware模块枚举类WareConstant</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WareConstant</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">enum</span>  <span class="title class_">PurchaseStatusEnum</span>&#123;</span><br><span class="line">        CREATED(<span class="number">0</span>,<span class="string">&quot;新建&quot;</span>),ASSIGNED(<span class="number">1</span>,<span class="string">&quot;已分配&quot;</span>),</span><br><span class="line">        RECEIVE(<span class="number">2</span>,<span class="string">&quot;已领取&quot;</span>),FINISH(<span class="number">3</span>,<span class="string">&quot;已完成&quot;</span>),</span><br><span class="line">        HASERROR(<span class="number">4</span>,<span class="string">&quot;有异常&quot;</span>);</span><br><span class="line">        <span class="keyword">private</span> <span class="type">int</span> code;</span><br><span class="line">        <span class="keyword">private</span> String msg;</span><br><span class="line"></span><br><span class="line">        PurchaseStatusEnum(<span class="type">int</span> code,String msg)&#123;</span><br><span class="line">            <span class="built_in">this</span>.code = code;</span><br><span class="line">            <span class="built_in">this</span>.msg = msg;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCode</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> code;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> String <span class="title function_">getMsg</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> msg;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">enum</span>  <span class="title class_">PurchaseDetailStatusEnum</span>&#123;</span><br><span class="line">        CREATED(<span class="number">0</span>,<span class="string">&quot;新建&quot;</span>),ASSIGNED(<span class="number">1</span>,<span class="string">&quot;已分配&quot;</span>),</span><br><span class="line">        BUYING(<span class="number">2</span>,<span class="string">&quot;正在采购&quot;</span>),FINISH(<span class="number">3</span>,<span class="string">&quot;已完成&quot;</span>),</span><br><span class="line">        HASERROR(<span class="number">4</span>,<span class="string">&quot;采购失败&quot;</span>);</span><br><span class="line">        <span class="keyword">private</span> <span class="type">int</span> code;</span><br><span class="line">        <span class="keyword">private</span> String msg;</span><br><span class="line"></span><br><span class="line">        PurchaseDetailStatusEnum(<span class="type">int</span> code,String msg)&#123;</span><br><span class="line">            <span class="built_in">this</span>.code = code;</span><br><span class="line">            <span class="built_in">this</span>.msg = msg;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCode</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> code;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> String <span class="title function_">getMsg</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> msg;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2.2 创建前端接收类MergeVo</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MergeVo</span> &#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> Long purchaseId; <span class="comment">//整单id</span></span><br><span class="line">   <span class="keyword">private</span> List&lt;Long&gt; items;<span class="comment">//[1,2,3,4] //合并项集合</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2.3 PurchaseServiceImpl 添加合并接口逻辑</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">PurchaseDetailService detailService;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Transactional(rollbackFor = RuntimeException.class)</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">mergePurchase</span><span class="params">(MergeVo mergeVo)</span> &#123;</span><br><span class="line">    <span class="type">Long</span> <span class="variable">purchaseId</span> <span class="operator">=</span> mergeVo.getPurchaseId();</span><br><span class="line">    <span class="keyword">if</span> (purchaseId == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="comment">//1、新建一个</span></span><br><span class="line">        <span class="type">PurchaseEntity</span> <span class="variable">purchaseEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PurchaseEntity</span>();</span><br><span class="line"></span><br><span class="line">        purchaseEntity.setStatus(WareConstant.PurchaseStatusEnum.CREATED.getCode());</span><br><span class="line">        purchaseEntity.setCreateTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">        purchaseEntity.setUpdateTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">        <span class="built_in">this</span>.save(purchaseEntity);</span><br><span class="line">        purchaseId = purchaseEntity.getId();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    List&lt;Long&gt; items = mergeVo.getItems();</span><br><span class="line">    <span class="comment">// 确认采购单状态是0,1才可以合并</span></span><br><span class="line">    List&lt;Long&gt; itemsNew = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(items.size());</span><br><span class="line">    items.forEach(i -&gt; &#123;</span><br><span class="line">        <span class="type">PurchaseDetailEntity</span> <span class="variable">byId</span> <span class="operator">=</span> detailService.getById(i);</span><br><span class="line">        <span class="keyword">if</span> (byId.getStatus() == WareConstant.PurchaseDetailStatusEnum.CREATED.getCode() || byId.getStatus() == WareConstant.PurchaseDetailStatusEnum.ASSIGNED.getCode()) &#123;</span><br><span class="line">            itemsNew.add(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="type">Long</span> <span class="variable">finalPurchaseId</span> <span class="operator">=</span> purchaseId;</span><br><span class="line">    <span class="keyword">if</span> (itemsNew.size()==<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    items = itemsNew;</span><br><span class="line">    List&lt;PurchaseDetailEntity&gt; collect = items.stream().map(i -&gt; &#123;</span><br><span class="line">        <span class="type">PurchaseDetailEntity</span> <span class="variable">detailEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PurchaseDetailEntity</span>();</span><br><span class="line"></span><br><span class="line">        detailEntity.setId(i);</span><br><span class="line">        detailEntity.setPurchaseId(finalPurchaseId);</span><br><span class="line">        detailEntity.setStatus(WareConstant.PurchaseDetailStatusEnum.ASSIGNED.getCode());</span><br><span class="line">        <span class="keyword">return</span> detailEntity;</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">    detailService.updateBatchById(collect);</span><br><span class="line"></span><br><span class="line">    <span class="type">PurchaseEntity</span> <span class="variable">purchaseEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PurchaseEntity</span>();</span><br><span class="line">    purchaseEntity.setId(purchaseId);</span><br><span class="line">    purchaseEntity.setUpdateTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">    <span class="built_in">this</span>.updateById(purchaseEntity);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2.4 PurchaseController 增加接口</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/merge&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">merge</span><span class="params">(<span class="meta">@RequestBody</span> MergeVo mergeVo)</span>&#123;</span><br><span class="line">    purchaseService.mergePurchase(mergeVo);</span><br><span class="line">    <span class="keyword">return</span> R.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="-1"><a href="#-1" class="headerlink" title=""></a></h4><h4 id="领取采购单"><a href="#领取采购单" class="headerlink" title="领取采购单"></a>领取采购单</h4><p>&#x2F;ware&#x2F;purchase&#x2F;received 接口 PurchaseController</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 领取采购单</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/received&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">received</span><span class="params">(<span class="meta">@RequestBody</span> List&lt;Long&gt; ids)</span>&#123;</span><br><span class="line">    purchaseService.received(ids);</span><br><span class="line">    <span class="keyword">return</span> R.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>编写领取逻辑 PurchaseServiceImpl</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> ids 采购单id</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">received</span><span class="params">(List&lt;Long&gt; ids)</span> &#123;</span><br><span class="line">    <span class="comment">//1、确认当前采购单是新建或者已分配状态</span></span><br><span class="line">    List&lt;PurchaseEntity&gt; collect = ids.stream().map(id -&gt; &#123;</span><br><span class="line">        <span class="type">PurchaseEntity</span> <span class="variable">byId</span> <span class="operator">=</span> <span class="built_in">this</span>.getById(id);</span><br><span class="line">        <span class="keyword">return</span> byId;</span><br><span class="line">    &#125;).filter(item -&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (item.getStatus() == WareConstant.PurchaseStatusEnum.CREATED.getCode() ||</span><br><span class="line">                item.getStatus() == WareConstant.PurchaseStatusEnum.ASSIGNED.getCode()) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;).map(item-&gt;&#123;</span><br><span class="line">        item.setStatus(WareConstant.PurchaseStatusEnum.RECEIVE.getCode());</span><br><span class="line">        item.setUpdateTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">        <span class="keyword">return</span> item;</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2、改变采购单的状态</span></span><br><span class="line">    <span class="built_in">this</span>.updateBatchById(collect);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3、改变采购项的状态</span></span><br><span class="line">    collect.forEach((item)-&gt;&#123;</span><br><span class="line">        List&lt;PurchaseDetailEntity&gt; entities = detailService.listDetailByPurchaseId(item.getId());</span><br><span class="line">        List&lt;PurchaseDetailEntity&gt; detailEntities = entities.stream().map(entity -&gt; &#123;</span><br><span class="line">            <span class="type">PurchaseDetailEntity</span> <span class="variable">entity1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PurchaseDetailEntity</span>();</span><br><span class="line">            entity1.setId(entity.getId());</span><br><span class="line">            entity1.setStatus(WareConstant.PurchaseDetailStatusEnum.BUYING.getCode());</span><br><span class="line">            <span class="keyword">return</span> entity1;</span><br><span class="line">        &#125;).collect(Collectors.toList());</span><br><span class="line">        detailService.updateBatchById(detailEntities);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>PurchaseDetailService 根据puchaseId 查找数据接口</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> List&lt;PurchaseDetailEntity&gt; <span class="title function_">listDetailByPurchaseId</span><span class="params">(Long id)</span> &#123;</span><br><span class="line">    List&lt;PurchaseDetailEntity&gt; purchaseId = <span class="built_in">this</span>.list(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;PurchaseDetailEntity&gt;().eq(<span class="string">&quot;purchase_id&quot;</span>, id));</span><br><span class="line">    <span class="keyword">return</span> purchaseId;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="完成采购"><a href="#完成采购" class="headerlink" title="完成采购"></a>完成采购</h4><p>1.新建两个接收前端信息的VO类 </p>
<p>PurchaseDoneVo</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PurchaseDoneVo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NotNull</span></span><br><span class="line">    <span class="keyword">private</span> Long id;<span class="comment">//采购单id</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;PurchaseItemDoneVo&gt; items;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>PurchaseItemDoneVo</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PurchaseItemDoneVo</span> &#123;</span><br><span class="line">    <span class="comment">//&#123;itemId:1,status:4,reason:&quot;&quot;&#125;</span></span><br><span class="line">    <span class="keyword">private</span> Long itemId;</span><br><span class="line">    <span class="keyword">private</span> Integer status;</span><br><span class="line">    <span class="keyword">private</span> String reason;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li><p>添加&#x2F;ware&#x2F;purchase&#x2F;done 完成采购单接口</p>
<p>PurchaseController</p>
</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@PostMapping(&quot;/done&quot;)</span><br><span class="line">public R finish(@RequestBody PurchaseDoneVo doneVo)&#123;</span><br><span class="line">    purchaseService.done(doneVo);</span><br><span class="line">    return R.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>业务逻辑</li>
</ol>
<p>PurchaseServiceImpl </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Transactional(rollbackFor = RuntimeException.class)</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">done</span><span class="params">(PurchaseDoneVo doneVo)</span> &#123;</span><br><span class="line">    <span class="type">Long</span> <span class="variable">id</span> <span class="operator">=</span> doneVo.getId();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2、改变采购项的状态</span></span><br><span class="line">    <span class="type">Boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">    List&lt;PurchaseItemDoneVo&gt; items = doneVo.getItems();</span><br><span class="line"></span><br><span class="line">    List&lt;PurchaseDetailEntity&gt; updates = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (PurchaseItemDoneVo item : items) &#123;</span><br><span class="line">        <span class="type">PurchaseDetailEntity</span> <span class="variable">detailEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PurchaseDetailEntity</span>();</span><br><span class="line">        <span class="keyword">if</span> (item.getStatus() == WareConstant.PurchaseDetailStatusEnum.HASERROR.getCode()) &#123;</span><br><span class="line">            flag = <span class="literal">false</span>;</span><br><span class="line">            detailEntity.setStatus(item.getStatus());</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            detailEntity.setStatus(WareConstant.PurchaseDetailStatusEnum.FINISH.getCode());</span><br><span class="line">            <span class="comment">////3、将成功采购的进行入库</span></span><br><span class="line">            <span class="type">PurchaseDetailEntity</span> <span class="variable">entity</span> <span class="operator">=</span> detailService.getById(item.getItemId());</span><br><span class="line">            wareSkuService.addStock(entity.getSkuId(), entity.getWareId(), entity.getSkuNum());</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        detailEntity.setId(item.getItemId());</span><br><span class="line">        updates.add(detailEntity);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    detailService.updateBatchById(updates);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//1、改变采购单状态</span></span><br><span class="line">    <span class="type">PurchaseEntity</span> <span class="variable">purchaseEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PurchaseEntity</span>();</span><br><span class="line">    purchaseEntity.setId(id);</span><br><span class="line">    purchaseEntity.setStatus(flag ? WareConstant.PurchaseStatusEnum.FINISH.getCode() :</span><br><span class="line">            WareConstant.PurchaseStatusEnum.HASERROR.getCode());</span><br><span class="line">    purchaseEntity.setUpdateTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">    <span class="built_in">this</span>.updateById(purchaseEntity);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>WareSkuServiceImpl</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addStock</span><span class="params">(Long skuId, Long wareId, Integer skuNum)</span> &#123;</span><br><span class="line">    <span class="comment">//1、判断如果还没有这个库存记录新增</span></span><br><span class="line">    List&lt;WareSkuEntity&gt; entities = wareSkuDao.selectList(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;WareSkuEntity&gt;().eq(<span class="string">&quot;sku_id&quot;</span>, skuId).eq(<span class="string">&quot;ware_id&quot;</span>, wareId));</span><br><span class="line">    <span class="keyword">if</span>(entities == <span class="literal">null</span> || entities.size() == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="type">WareSkuEntity</span> <span class="variable">skuEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WareSkuEntity</span>();</span><br><span class="line">        skuEntity.setSkuId(skuId);</span><br><span class="line">        skuEntity.setStock(skuNum);</span><br><span class="line">        skuEntity.setWareId(wareId);</span><br><span class="line">        skuEntity.setStockLocked(<span class="number">0</span>);</span><br><span class="line">        wareSkuDao.insert(skuEntity);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        wareSkuDao.addStock(skuId,wareId,skuNum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>WareSkuDao 添加方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">addStock</span><span class="params">(<span class="meta">@Param(&quot;skuId&quot;)</span> Long skuId, <span class="meta">@Param(&quot;wareId&quot;)</span> Long wareId, <span class="meta">@Param(&quot;skuNum&quot;)</span> Integer skuNum)</span>;</span><br></pre></td></tr></table></figure>

<p>WareSkuDao.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;addStock&quot;</span>&gt;</span></span><br><span class="line">    UPDATE `wms_ware_sku` SET stock=stock+#&#123;skuNum&#125; WHERE sku_id=#&#123;skuId&#125; AND ware_id=#&#123;wareId&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>4.由于需要查询skuName ，需要调用Product模块的查询方法来获取</p>
<p>4.1 在feign包下新建 ProductFeignService</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@FeignClient(&quot;supermall-product&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ProductFeignService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *      /product/skuinfo/info/&#123;skuId&#125;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     *   1)、让所有请求过网关；</span></span><br><span class="line"><span class="comment">     *          1、<span class="doctag">@FeignClient</span>(&quot;supermall-gateway&quot;)：给gulimall-gateway所在的机器发请求</span></span><br><span class="line"><span class="comment">     *          2、/api/product/skuinfo/info/&#123;skuId&#125;</span></span><br><span class="line"><span class="comment">     *   2）、直接让后台指定服务处理</span></span><br><span class="line"><span class="comment">     *          1、<span class="doctag">@FeignClient</span>(&quot;supermall-gateway&quot;)</span></span><br><span class="line"><span class="comment">     *          2、/product/skuinfo/info/&#123;skuId&#125;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/product/skuinfo/info/&#123;skuId&#125;&quot;)</span></span><br><span class="line">    R <span class="title function_">info</span><span class="params">(<span class="meta">@PathVariable(&quot;skuId&quot;)</span> Long skuId)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>4.2 在启动类加入feign 开启注解</p>
<p>4.3 修改 WareSkuServiceImpl 逻辑</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    ProductFeignService productFeignService;</span><br><span class="line">    </span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addStock</span><span class="params">(Long skuId, Long wareId, Integer skuNum)</span> &#123;</span><br><span class="line">        <span class="comment">//1、判断如果还没有这个库存记录新增</span></span><br><span class="line">        List&lt;WareSkuEntity&gt; entities =</span><br><span class="line">                wareSkuDao.selectList(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;WareSkuEntity&gt;().eq(<span class="string">&quot;sku_id&quot;</span>, skuId).eq(<span class="string">&quot;ware_id&quot;</span>, wareId));</span><br><span class="line">        <span class="keyword">if</span> (entities == <span class="literal">null</span> || entities.size() == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="type">WareSkuEntity</span> <span class="variable">skuEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WareSkuEntity</span>();</span><br><span class="line">            skuEntity.setSkuId(skuId);</span><br><span class="line">            skuEntity.setStock(skuNum);</span><br><span class="line">            skuEntity.setWareId(wareId);</span><br><span class="line">            skuEntity.setStockLocked(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//            //TODO 远程查询sku的名字，如果失败，整个事务无需回滚</span></span><br><span class="line"><span class="comment">//            //1、自己catch异常</span></span><br><span class="line"><span class="comment">//            //TODO 还可以用什么办法让异常出现以后不回滚？高级</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="type">R</span> <span class="variable">info</span> <span class="operator">=</span> productFeignService.info(skuId);</span><br><span class="line">                Map&lt;String,Object&gt; data = (Map&lt;String, Object&gt;) info.get(<span class="string">&quot;skuInfo&quot;</span>);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(info.getCode() == <span class="number">0</span>)&#123;</span><br><span class="line">                    skuEntity.setSkuName((String) data.get(<span class="string">&quot;skuName&quot;</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            wareSkuDao.insert(skuEntity);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            wareSkuDao.addStock(skuId, wareId, skuNum);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h1 id="分布式基础篇-总结"><a href="#分布式基础篇-总结" class="headerlink" title="分布式基础篇-总结"></a>分布式基础篇-总结</h1><ol>
<li>分布式基础概念</li>
</ol>
<p>微服务，注册中心，配置中心，远程调用，Feign的使用，网关</p>
<ol start="2">
<li>基础开发</li>
</ol>
<p>	</p>
<p>SpringBoot 2.0 ,SpringCloud，Mybatis-Plus，Vue组件化，阿里云对象存储</p>
<ol start="3">
<li>环境</li>
</ol>
<p>Vagrant &#x2F; VM，Linux，Docker，MySQL，Redis，逆向工程&amp;人人开源项目</p>
<ol start="4">
<li><p>开发规范</p>
<p>数据校验JSR303，全局异常处理，全局统一返回，全局跨域处理</p>
<p>枚举状态，业务状态码，VO与TO与PO的划分，逻辑删除</p>
<p>Lombok：@Data，@Slf4j</p>
</li>
</ol>
]]></content>
      <tags>
        <tag>SpringCloud|docker|vue</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker镜像加速问题</title>
    <url>/2023/03/27/Docker%E9%95%9C%E5%83%8F%E5%8A%A0%E9%80%9F%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h2 id="出现问题"><a href="#出现问题" class="headerlink" title="出现问题"></a>出现问题</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Error response from daemon: Get &quot;https://registry-1.docker.io/v2/&quot;: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)</span><br></pre></td></tr></table></figure>



<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 编辑 /etc/docker/daemon.json</span></span><br><span class="line">vi /etc/docker/daemon.json</span><br><span class="line"><span class="comment"># 增加如下文本</span></span><br><span class="line">&#123;<span class="string">&quot;registry-mirrors&quot;</span>:[<span class="string">&quot;https://reg-mirror.qiniu.com/&quot;</span>,<span class="string">&quot;https://5wdlar25.mirror.aliyuncs.com&quot;</span>,<span class="string">&quot;https://hub-mirror.c.163.com/&quot;</span>,<span class="string">&quot;https://docker.mirrors.ustc.edu.cn/&quot;</span>]&#125;</span><br><span class="line"><span class="comment"># 重载配置项</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line"><span class="comment"># 重启docker服务</span></span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS 7 TAR包安装Mysql</title>
    <url>/2021/04/25/CentOS-7-TAR%E5%8C%85%E5%AE%89%E8%A3%85Mysql/</url>
    <content><![CDATA[<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 去官网下载需要的tar包</span></span><br><span class="line">wget https://downloads.mysql.com/archives/get/p/23/file/mysql-8.7.38-linux-glibc2.12-x86_64.tar.gz</span><br><span class="line">wget https://cdn.mysql.com//Downloads/MySQL-8.0/mysql-8.0.33-linux-glibc2.12-x86_64.tar.xz</span><br><span class="line"><span class="comment"># 解压tar包</span></span><br><span class="line">tar -xvf &#123;包名&#125;</span><br><span class="line"><span class="comment"># 移到/usr/local 下</span></span><br><span class="line"><span class="built_in">mv</span> ./mysql-5.7.37-linux-glibc2.12-x86_64 /usr/local/mysql</span><br><span class="line"><span class="comment"># 创建mysql用户组和用户并修改权限</span></span><br><span class="line">groupadd mysql</span><br><span class="line">useradd -r -g mysql mysql</span><br><span class="line"><span class="built_in">mkdir</span> -p  /data/mysql              <span class="comment">#创建目录</span></span><br><span class="line"><span class="built_in">chown</span> mysql:mysql -R /data/mysql   <span class="comment">#赋予权限</span></span><br><span class="line"><span class="comment"># 配置my.cnf</span></span><br><span class="line">[mysqld]</span><br><span class="line">bind-address=0.0.0.0</span><br><span class="line">port=3306</span><br><span class="line">user=mysql</span><br><span class="line">basedir=/usr/local/mysql      --重要</span><br><span class="line">datadir=/data/mysql           --重要</span><br><span class="line">socket=/tmp/mysql.sock</span><br><span class="line">log-error=/data/mysql/mysql.err</span><br><span class="line">pid-file=/data/mysql/mysql.pid</span><br><span class="line"><span class="comment">#character config</span></span><br><span class="line">character_set_server=utf8mb4</span><br><span class="line">symbolic-links=0</span><br><span class="line">explicit_defaults_for_timestamp=<span class="literal">true</span></span><br><span class="line"><span class="comment"># 初始化数据库</span></span><br><span class="line"><span class="built_in">cd</span> /usr/local/mysql/bin/   --进入mysql的bin目录</span><br><span class="line">./mysqld --defaults-file=/etc/my.cnf --basedir=/usr/local/mysql/ --datadir=/data/mysql/ --user=mysql --initialize  --console  </span><br><span class="line"><span class="comment"># 注：初始化后能看到随机密码，如果看不到，可以找到log-error的配置位置，文本查看器查看临时密码，查找A temporary password is这句话可以找到。</span></span><br><span class="line"><span class="comment"># 将mysql.server放置到/etc/init.d/mysql中</span></span><br><span class="line"><span class="built_in">cp</span> /usr/local/mysql/support-files/mysql.server /etc/init.d/mysql</span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">service mysql start</span><br><span class="line"><span class="comment"># 建立链接</span></span><br><span class="line"><span class="built_in">ln</span> -s  /usr/local/mysql/bin/mysql    /usr/bin</span><br><span class="line">mysql -u root -p             --然后输入初始密码</span><br><span class="line">use mysql;    --访问mysql库 </span><br><span class="line"></span><br><span class="line"><span class="comment"># 8.0root密码修改</span></span><br><span class="line">update user <span class="built_in">set</span> authentication_string=password(<span class="string">&#x27;root&#x27;</span>) <span class="built_in">where</span> user=<span class="string">&#x27;root&#x27;</span>;                  </span><br><span class="line">update user <span class="built_in">set</span> host = <span class="string">&#x27;%&#x27;</span> <span class="built_in">where</span> user = <span class="string">&#x27;root&#x27;</span>;      --使root能再任何host访问</span><br><span class="line"></span><br><span class="line"><span class="comment"># 8.0之后修改root密码</span></span><br><span class="line">ALTER USER <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>IDENTIFIED WITH mysql_native_password BY<span class="string">&#x27;Ra11aoPqRmohzSib&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改完成后刷新权限</span></span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>Mysql|centos</tag>
      </tags>
  </entry>
  <entry>
    <title>Mysql主从同步搭建</title>
    <url>/2022/04/25/Mysql%E4%B8%BB%E4%BB%8E%E5%90%8C%E6%AD%A5%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><h3 id="主从同步的流程（原理）"><a href="#主从同步的流程（原理）" class="headerlink" title="主从同步的流程（原理）"></a>主从同步的流程（原理）</h3><ul>
<li>master 将变动记录到二进制日志文件（binary log）中，即配置文件中 log-bin 指定的文件，这些记录叫做二进制日志事件(binary log events)；</li>
<li>master 将二进制日志文件发送给 slave；</li>
<li>slave 通过 I&#x2F;O 线程读取文件中的内容写到 relay 日志中；</li>
<li>slave 执行 relay 日志中的事件，完成数据在本地的存储。</li>
</ul>
<h3 id="搭建主从需要注意的事项："><a href="#搭建主从需要注意的事项：" class="headerlink" title="搭建主从需要注意的事项："></a>搭建主从需要注意的事项：</h3><ul>
<li>主从服务器操作系统版本和位数一致；</li>
<li>Master 和 Slave 数据库版本要一致；</li>
<li>Master 和 Slave 数据库中的数据要一致；</li>
<li>Master 开启二进制日志， Master 和 Slave 的 server_id 在局域网内必须唯一。</li>
</ul>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="Master-上的操作"><a href="#Master-上的操作" class="headerlink" title="Master 上的操作"></a>Master 上的操作</h3><ol>
<li>修改 master 的配置（ my.cnf）加入下面的内容：</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">log-bin=mysql-bin</span><br><span class="line"># id必须唯一和从机区别开来</span><br><span class="line">server-id=1</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>重启mysql</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl restart mysql</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>在 master 中创建用于主从同步的用户</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 创建用户</span><br><span class="line">CREATE USER &#x27;slave1&#x27;@&#x27;&#123;从机内网ip地址&#125;&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;slave1&#x27;;</span><br><span class="line"># 授权用户</span><br><span class="line">GRANT REPLICATION SLAVE ON *.* TO &#x27;slave1&#x27;@&#x27;&#123;从机内网ip地址&#125;&#x27;;</span><br><span class="line"># 刷新权限</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>查看主服务器状态</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show master status;</span><br></pre></td></tr></table></figure>

<p>记录下 File 和 Position 的值，之后要用到</p>
<h3 id="Slave-上的操作"><a href="#Slave-上的操作" class="headerlink" title="Slave 上的操作"></a>Slave 上的操作</h3><ol>
<li>修改slave 的配置（ my.cnf）加入下面的内容</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line"># id必须唯一和从机区别开来</span><br><span class="line">server-id=2</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>重启 slave</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl restart mysql</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>登录 MySQL 并运行以下命令，设置主节点参数</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql&gt; CHANGE MASTER TO</span><br><span class="line">MASTER_HOST=<span class="string">&#x27;&#123;master的内网IP地址&#125;&#x27;</span>,</span><br><span class="line">MASTER_USER=<span class="string">&#x27;&#123;创建的主从同步用户名:slave1&#125;&#x27;</span>,</span><br><span class="line">MASTER_PASSWORD=<span class="string">&#x27;&#123;创建的主从同步密码:slave1&#125;&#x27;</span>,</span><br><span class="line">MASTER_LOG_FILE=<span class="string">&#x27;&#123;show master status查看的File值:mysql-bin.000003&#125;&#x27;</span>,</span><br><span class="line">MASTER_LOG_POS=&#123;show master status查看的Position值:621&#125;;</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>查看主从同步的状态</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; show slave status\G;</span><br></pre></td></tr></table></figure>

<p>检查下面的信息，都为 yes 才代表搭建成功：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Slave_IO_Running: Yes</span><br><span class="line">Slave_SQL_Running: Yes</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>Mysql|主从同步</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux搭建Java环境</title>
    <url>/2021/04/25/Linux%E6%90%AD%E5%BB%BAJava%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<ol>
<li>查看linux位数</li>
</ol>
<p>查看linux是32位还是64位，影响需要下载JDK的版本</p>
<table>
<thead>
<tr>
<th align="left">系统位数</th>
<th align="left">jdk位数</th>
</tr>
</thead>
<tbody><tr>
<td align="left">x86（32位）</td>
<td align="left">32位</td>
</tr>
<tr>
<td align="left">x86_64（64位）</td>
<td align="left">32位 64位</td>
</tr>
</tbody></table>
<p>在linux命令输入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname -a</span><br></pre></td></tr></table></figure>

<p>如果是64位机器，会输出x86_64</p>
<ol start="2">
<li>下载JDK</li>
</ol>
<p>下载地址：<a class="link"   href="https://download.oracle.com/otn/java/jdk/8u371-b11/ce59cff5c23f4e2eaf4e778a117d4c5b/jdk-8u371-linux-x64.tar.gz" >https://download.oracle.com/otn/java/jdk/8u371-b11/ce59cff5c23f4e2eaf4e778a117d4c5b/jdk-8u371-linux-x64.tar.gz<i class="fas fa-external-link-alt"></i></a></p>
<ol start="3">
<li>安装JDK</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 将下载的jdk上传到linux，解压压缩包文件</span></span><br><span class="line">tar -xvf jdk-8u371-linux-x64.tar.gz</span><br><span class="line"><span class="comment"># 移动到/usr/local文件夹下</span></span><br><span class="line"><span class="built_in">mkdir</span> /usr/local/java &amp;&amp; <span class="built_in">mv</span> ./jdk1.8.0_371 /usr/local/java/jdk1.8</span><br><span class="line"><span class="comment"># 编辑环境变量文件/etc/profile</span></span><br><span class="line">vi /etc/profile</span><br><span class="line"><span class="comment"># 加入如下配置</span></span><br><span class="line"><span class="comment">#改成jdk的安装路径</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/local/java/jdk-1.8 </span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$PATH</span></span><br><span class="line"><span class="comment"># 使配置生效</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"><span class="comment"># 测试结果</span></span><br><span class="line">java -version</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>Java|Linux</tag>
      </tags>
  </entry>
</search>
